# https://docs.n8n.io/ llms-full.txt

## n8n Documentation

[Skip to content](https://docs.n8n.io/#welcome-to-n8n-docs)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/index.md "Edit this page")

# Welcome to n8n Docs [\#](https://docs.n8n.io/#welcome-to-n8n-docs "Permanent link")

This is the documentation for [n8n](https://n8n.io/), a [fair-code](https://faircode.io/) licensed workflow automation tool that combines AI capabilities with business process automation.

It covers everything from setup to usage and development. It's a work in progress and all [contributions](https://docs.n8n.io/help-community/contributing/) are welcome.

## Where to start [\#](https://docs.n8n.io/#where-to-start "Permanent link")

- **Quickstarts**

Jump in with n8n's quickstart guides.

[Try it out](https://docs.n8n.io/try-it-out/)

- **Choose the right n8n for you**

Cloud, npm, self-host . . .

[Options](https://docs.n8n.io/choose-n8n/)

- **Explore integrations**

Browse n8n's integrations library.

[Find your apps](https://docs.n8n.io/integrations/)

- **Build AI functionality**

n8n supports building AI functionality and tools.

[Advanced AI](https://docs.n8n.io/advanced-ai/)

## About n8n [\#](https://docs.n8n.io/#about-n8n "Permanent link")

n8n (pronounced n-eight-n) helps you to connect any app with an API with any other, and manipulate its data with little or no code.

- Customizable: highly flexible workflows and the option to build custom nodes.
- Convenient: use the npm or Docker to try out n8n, or the Cloud hosting option if you want us to handle the infrastructure.
- Privacy-focused: self-host n8n for privacy and security.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Coding in n8n

[Skip to content](https://docs.n8n.io/code/#code-in-n8n)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/code/index.md "Edit this page")

# Code in n8n [\#](https://docs.n8n.io/code/#code-in-n8n "Permanent link")

n8n is a low-code tool. This means you can do a lot without code, then add code when needed.

## Code in your workflows [\#](https://docs.n8n.io/code/#code-in-your-workflows "Permanent link")

There are two places in your workflows where you can use code:

- **Expressions**

Use [expressions](https://docs.n8n.io/glossary/#expression-n8n) to transform [data](https://docs.n8n.io/data/) in your nodes. You can use JavaScript in expressions, as well as n8n's [Built-in methods and variables](https://docs.n8n.io/code/builtin/overview/) and [Data transformation functions](https://docs.n8n.io/code/builtin/data-transformation-functions/).

[Expressions](https://docs.n8n.io/code/expressions/)

- **Code node**

Use the Code node to add JavaScript or Python to your workflow.

[Code node](https://docs.n8n.io/code/code-node/)

## Other technical resources [\#](https://docs.n8n.io/code/#other-technical-resources "Permanent link")

These are features that are relevant to technical users.

### Technical nodes [\#](https://docs.n8n.io/code/#technical-nodes "Permanent link")

n8n provides core nodes, which simplify adding key functionality such as API requests, webhooks, scheduling, and file handling.

- **Write a backend**

The [HTTP Request](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/), [Webhook](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.webhook/), and [Code](https://docs.n8n.io/code/code-node/) nodes help you make API calls, respond to webhooks, and write any JavaScript in your workflow.

Use this do things like [Create an API endpoint](https://n8n.io/workflows/1750-creating-an-api-endpoint/).

[Core nodes](https://docs.n8n.io/integrations/builtin/core-nodes/)

- **Represent complex logic**

You can build complex flows, using nodes like [If](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.if/), [Switch](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.switch/), and [Merge](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.merge/) nodes.

[Flow logic](https://docs.n8n.io/flow-logic/)

### Other developer resources [\#](https://docs.n8n.io/code/#other-developer-resources "Permanent link")

- **The n8n API**

n8n provides an API, where you can programmatically perform many of the same tasks as you can in the GUI. There's an [n8n API node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.n8n/) to access the API in your workflows.

[API](https://docs.n8n.io/api/)

- **Self-host**

You can self-host n8n. This keeps your data on your own infrastructure.

[Hosting](https://docs.n8n.io/hosting/)

- **Build your own nodes**

You can build custom nodes, install them on your n8n instance, and publish them to [npm](https://www.npmjs.com/).

[Creating nodes](https://docs.n8n.io/integrations/creating-nodes/overview/)

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Credentials Guide

[Skip to content](https://docs.n8n.io/credentials/#credentials)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/credentials/index.md "Edit this page")

# Credentials [\#](https://docs.n8n.io/credentials/#credentials "Permanent link")

[Credentials](https://docs.n8n.io/glossary/#credential-n8n) are private pieces of information issued by apps and services to authenticate you as a user and allow you to connect and share information between the app or service and the n8n node.

Access the credentials UI by opening the left menu and selecting **Credentials**. n8n lists credentials you created on the **My credentials** tab. The **All credentials** tab shows all credentials you can use, included credentials shared with you by other users.

- [Create and edit credentials](https://docs.n8n.io/credentials/add-edit-credentials/).
- Learn about [credential sharing](https://docs.n8n.io/credentials/credential-sharing/).
- Find information on setting up credentials for your services in the [credentials library](https://docs.n8n.io/integrations/builtin/credentials/).

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Self-hosting n8n

[Skip to content](https://docs.n8n.io/hosting/#self-hosting-n8n)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/hosting/index.md "Edit this page")

# Self-hosting n8n [\#](https://docs.n8n.io/hosting/#self-hosting-n8n "Permanent link")

This section provides guidance on setting up n8n for both the Enterprise and Community self-hosted editions. The Community edition is free, the Enterprise edition isn't.

See [Community edition features](https://docs.n8n.io/hosting/community-edition-features/) for a list of available features.

- **Installation and server setups**

Install n8n on any platform using npm or Docker. Or follow our guides to popular hosting platforms.

[Docker installation guide](https://docs.n8n.io/hosting/installation/docker/)

- **Configuration**

Learn how to configure n8n with environment variables.

[Environment Variables](https://docs.n8n.io/hosting/configuration/environment-variables/)

- **Users and authentication**

Choose and set up user authentication for your n8n instance.

[Authentication](https://docs.n8n.io/hosting/configuration/user-management-self-hosted/)

- **Scaling**

Manage data, modes, and processes to keep n8n running smoothly at scale.

[Scaling](https://docs.n8n.io/hosting/scaling/queue-mode/)

- **Securing n8n**

Secure your n8n instance by setting up SSL, SSO, or 2FA or blocking or opting out of some data collection or features.

[Securing n8n guide](https://docs.n8n.io/hosting/securing/overview/)

- **Starter kits**

New to n8n or AI? Try our Self-hosted AI Starter Kit. Curated by n8n, it combines the self-hosted n8n platform with compatible AI products and components to get you started building self-hosted AI workflows.

[Starter kits](https://docs.n8n.io/hosting/starter-kits/ai-starter-kit/)

Self-hosting knowledge prerequisites

Self-hosting n8n requires technical knowledge, including:

- Setting up and configuring servers and containers
- Managing application resources and scaling
- Securing servers and applications
- Configuring n8n

n8n recommends self-hosting for expert users. Mistakes can lead to data loss, security issues, and downtime. If you aren't experienced at managing servers, n8n recommends [n8n Cloud](https://n8n.io/cloud/).

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Integrations Overview

[Skip to content](https://docs.n8n.io/integrations/#integrations)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/integrations/index.md "Edit this page")

# Integrations [\#](https://docs.n8n.io/integrations/#integrations "Permanent link")

n8n calls integrations nodes.

Nodes are the building blocks of workflows in n8n. They're an entry point for retrieving data, a function to process data, or an exit for sending data. The data process includes filtering, recomposing, and changing data. There can be one or several nodes for your API, service or app. You can connect multiple nodes, which allows you to create complex workflows.

## Built-in nodes [\#](https://docs.n8n.io/integrations/#built-in-nodes "Permanent link")

n8n includes a collection of built-in integrations. Refer to [Built-in nodes](https://docs.n8n.io/integrations/builtin/node-types/) for documentation on all n8n's built-in nodes.

## Community nodes [\#](https://docs.n8n.io/integrations/#community-nodes "Permanent link")

As well as using the built-in nodes, you can also install community-built nodes. Refer to [Community nodes](https://docs.n8n.io/integrations/community-nodes/installation/) for more information.

## Credential-only nodes and custom operations [\#](https://docs.n8n.io/integrations/#credential-only-nodes-and-custom-operations "Permanent link")

One of the most complex parts of setting up [API](https://docs.n8n.io/glossary/#api) calls is managing authentication. n8n provides [credentials](https://docs.n8n.io/glossary/#credential-n8n) support for operations and services beyond those supported by built-in nodes.

- Custom operations for existing nodes: n8n supplies hundreds of nodes to create workflows that link multiple products. However, some nodes don't include all the possible operations supported by a product's API. You can work around this by making a custom API call using the [HTTP Request](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/) node.
- Credential-only nodes: n8n includes credential-only nodes. These are integrations where n8n supports setting up credentials for use in the HTTP Request node, but doesn't provide a standalone node. You can find a credential-only node in the nodes panel, as you would for any other integration.

Refer to [Custom operations](https://docs.n8n.io/integrations/custom-operations/) for more information.

## Generic integrations [\#](https://docs.n8n.io/integrations/#generic-integrations "Permanent link")

If you need to connect to a service where n8n doesn't have a node, or a credential-only node, you can still use the [HTTP Request](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/) node. Refer to the node page for details on how to set up authentication and create your API call.

## Where to go next [\#](https://docs.n8n.io/integrations/#where-to-go-next "Permanent link")

- If you want to create your own node, head over to the [Creating Nodes](https://docs.n8n.io/integrations/creating-nodes/overview/) section.
- Check out [Community nodes](https://docs.n8n.io/integrations/community-nodes/usage/) to learn about installing and managing community-built nodes.
- If you'd like to learn more about the different nodes in n8n, their functionalities and example usage, check out n8n's node libraries: [Core nodes](https://docs.n8n.io/integrations/builtin/core-nodes/), [Actions](https://docs.n8n.io/integrations/builtin/app-nodes/), and [Triggers](https://docs.n8n.io/integrations/builtin/trigger-nodes/).
- If you'd like to learn how to add the credentials for the different nodes, head over to the [Credentials](https://docs.n8n.io/integrations/builtin/credentials/) section.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=756740347.1744299565&gtm=45je5490h2v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509682~102788824~102803279~102813109~102887800~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=354657822)

## n8n Embed Overview

[Skip to content](https://docs.n8n.io/embed/#n8n-embed)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/embed/index.md "Edit this page")

# n8n Embed [\#](https://docs.n8n.io/embed/#n8n-embed "Permanent link")

n8n Embed is part of n8n's paid offering. Using Embed, you can white label n8n, or incorporate it in your software as part of your commercial product.

For more information about when to use Embed, as well as costs and licensing processes, refer to [Embed](https://n8n.io/embed/) on the n8n website.

## Support [\#](https://docs.n8n.io/embed/#support "Permanent link")

The [community forum](https://community.n8n.io/) can help with various issues. If you are a current Embed customer, you can also contact n8n support, using the email provided when you bought the license.

## Russia and Belarus [\#](https://docs.n8n.io/embed/#russia-and-belarus "Permanent link")

n8n Embed isn't available in Russia and Belarus. Refer to n8n's blog post [Update on n8n cloud accounts in Russia and Belarus](https://n8n.io/blog/update-on-n8n-cloud-accounts-in-russia-and-belarus/) for more information.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Workflows Guide

[Skip to content](https://docs.n8n.io/workflows/#workflows)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/workflows/index.md "Edit this page")

# Workflows [\#](https://docs.n8n.io/workflows/#workflows "Permanent link")

A [workflow](https://docs.n8n.io/glossary/#workflow-n8n) is a collection of nodes connected together to automate a process.

- [Create](https://docs.n8n.io/workflows/create/) a workflow.
- Use [Workflow templates](https://docs.n8n.io/workflows/templates/) to help you get started.
- Learn about the key [components](https://docs.n8n.io/workflows/components/) of an automation in n8n.
- Debug using the [Executions](https://docs.n8n.io/workflows/executions/) list.
- [Share](https://docs.n8n.io/workflows/sharing/) workflows between users.

If it's your first time building a workflow, you may want to use the [quickstart guides](https://docs.n8n.io/try-it-out/) to quickly try out n8n features.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=1934508855.1744288898&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509683~102788824~102803279~102813109~102887800~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=1966907858)

## n8n Glossary

[Skip to content](https://docs.n8n.io/glossary/#ai-agent)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/glossary.md "Edit this page")

# Glossary

#### AI agent [\#](https://docs.n8n.io/glossary/#ai-agent "Permanent link")

AI agents are artificial intelligence systems capable of responding to requests, making decisions, and performing real-world tasks for users. They use large language models (LLMs) to interpret user input and make decisions about how to best process requests using the information and resources they have available.

#### AI chain [\#](https://docs.n8n.io/glossary/#ai-chain "Permanent link")

AI chains allow you to interact with large language models (LLMs) and other resources in sequences of calls to components. AI chains in n8n don't use persistent memory, so you can't use them to reference previous context (use AI agents for this).

#### AI embedding [\#](https://docs.n8n.io/glossary/#ai-embedding "Permanent link")

Embeddings are numerical representations of data using vectors. They're used by AI to interpret complex data and relationships by mapping values across many dimensions. Vector databases, or vector stores, are databases designed to store and access embeddings.

#### AI memory [\#](https://docs.n8n.io/glossary/#ai-memory "Permanent link")

In an AI context, memory allows AI tools to persist message context across interactions. This allows you to have a continuing conversations with AI agents, for example, without submitting ongoing context with each message. In n8n, AI agent nodes can use memory, but AI chains can't.

#### AI tool [\#](https://docs.n8n.io/glossary/#ai-tool "Permanent link")

In an AI context, a tool is an add-on resource that the AI can refer to for specific information or functionality when responding to a request. The AI model can use a tool to interact with external systems or complete specific, focused tasks.

#### AI vector store [\#](https://docs.n8n.io/glossary/#ai-vector-store "Permanent link")

Vector stores, or vector databases, are databases designed to store numerical representations of information called embeddings.

#### API [\#](https://docs.n8n.io/glossary/#api "Permanent link")

APIs, or application programming interfaces, offer programmatic access to a service's data and functionality. APIs make it easier for software to interact with external systems. They're often offered as an alternative to traditional user-focused interfaces accessed through web browsers or UI.

#### canvas (n8n) [\#](https://docs.n8n.io/glossary/#canvas-n8n "Permanent link")

The canvas is the main interface for building workflows in n8n's editor UI. You use the canvas to add and connect nodes to compose workflows.

#### cluster node (n8n) [\#](https://docs.n8n.io/glossary/#cluster-node-n8n "Permanent link")

In n8n, cluster nodes are groups of nodes that work together to provide functionality in a workflow. They consist of a root node and one or more sub nodes that extend the node's functionality.

#### credential (n8n) [\#](https://docs.n8n.io/glossary/#credential-n8n "Permanent link")

In n8n, credentials store authentication information to connect with specific apps and services. After creating credentials with your authentication information (username and password, API key, OAuth secrets, etc.), you can use the associated app node to interact with the service.

#### data pinning (n8n) [\#](https://docs.n8n.io/glossary/#data-pinning-n8n "Permanent link")

Data pinning allows you to temporarily freeze the output data of a node during workflow development. This allows you to develop workflows with predictable data without making repeated requests to external services. Production workflows ignore pinned data and request new data on each execution.

#### editor (n8n) [\#](https://docs.n8n.io/glossary/#editor-n8n "Permanent link")

The n8n editor UI allows you to create and manage workflows. The main area is the canvas, where you can compose workflows by adding, configuring, and connecting nodes. The side and top panels allow you to access other areas of the UI like credentials, templates, variables, executions, and more.

#### entitlement (n8n) [\#](https://docs.n8n.io/glossary/#entitlement-n8n "Permanent link")

In n8n, entitlements grant n8n instances access to plan-restricted features for a specific period of time.

Floating entitlements are a pool of entitlements that you can distribute among various n8n instances. You can re-assign a floating entitlement to transfer its access to a different n8n instance.

#### evaluation (n8n) [\#](https://docs.n8n.io/glossary/#evaluation-n8n "Permanent link")

In n8n, evaluation allows you to tag and organize execution history and compare it against new executions. You can use this to understand how your workflow performs over time as you make changes. In particular, this is useful while developing AI-centered workflows.

#### expression (n8n) [\#](https://docs.n8n.io/glossary/#expression-n8n "Permanent link")

In n8n, expressions allow you to populate node parameters dynamically by executing JavaScript code. Instead of providing a static value, you can use the n8n expression syntax to define the value using data from previous nodes, other workflows, or your n8n environment.

#### LangChain [\#](https://docs.n8n.io/glossary/#langchain "Permanent link")

LangChain is an AI-development framework used to work with large language models (LLMs). LangChain provides a standardized system for working with a wide variety of models and other resources and linking different components together to build complex applications.

#### Large language model (LLM) [\#](https://docs.n8n.io/glossary/#large-language-model-llm "Permanent link")

Large language models, or LLMs, are AI machine learning models designed to excel in natural language processing (NLP) tasks. They're built by training on large amounts of data to develop probabilistic models of language and other data.

#### node (n8n) [\#](https://docs.n8n.io/glossary/#node-n8n "Permanent link")

In n8n, nodes are individual components that you compose to create workflows. Nodes define when the workflow should run, allow you to fetch, send, and process data, can define flow control logic, and connect with external services.

#### project (n8n) [\#](https://docs.n8n.io/glossary/#project-n8n "Permanent link")

n8n projects allow you to separate workflows, variables, and credentials into separate groups for easier management. Projects make it easier for teams to collaborate by sharing and compartmentalizing related resources.

#### root node (n8n) [\#](https://docs.n8n.io/glossary/#root-node-n8n "Permanent link")

Each n8n cluster node contains a single root nodes that defines the main functionality of the cluster. One or more sub nodes attach to the root node to extend its functionality.

#### sub node (n8n) [\#](https://docs.n8n.io/glossary/#sub-node-n8n "Permanent link")

n8n cluster nodes consist of one or more sub nodes connected to a root node. Sub nodes extend the functionality of the root node, providing access to specific services or resources or offering specific types of dedicated processing, like calculator functionality, for example.

#### template (n8n) [\#](https://docs.n8n.io/glossary/#template-n8n "Permanent link")

n8n templates are pre-built workflows designed by n8n and community members that you can import into your n8n instance. When using templates, you may need to fill in credentials and adjust the configuration to suit your needs.

#### trigger node (n8n) [\#](https://docs.n8n.io/glossary/#trigger-node-n8n "Permanent link")

A trigger node is a special node responsible for executing the workflow in response to certain conditions. All production workflows need at least one trigger to determine when the workflow should run.

#### workflow (n8n) [\#](https://docs.n8n.io/glossary/#workflow-n8n "Permanent link")

An n8n workflow is a collection of nodes that automate a process. Workflows begin execution when a trigger condition occurs and execute sequentially to achieve complex tasks.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=234163741.1744299565&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509683~102788824~102803279~102813109~102887799~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=956065365)

## n8n REST API Guide

[Skip to content](https://docs.n8n.io/api/#n8n-public-rest-api)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/api/index.md "Edit this page")

# n8n public REST API [\#](https://docs.n8n.io/api/#n8n-public-rest-api "Permanent link")

Feature availability

The n8n API isn't available during the free trial. Please upgrade to access this feature.

Using n8n's public [API](https://docs.n8n.io/glossary/#api), you can programmatically perform many of the same tasks as you can in the GUI. This section introduces n8n's REST API, including:

- How to [authenticate](https://docs.n8n.io/api/authentication/)
- [Paginating](https://docs.n8n.io/api/pagination/) results
- Using the [built-in API playground](https://docs.n8n.io/api/using-api-playground/) (self-hosted n8n only)
- [Endpoint reference](https://docs.n8n.io/api/api-reference/)

n8n provides an [n8n API node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.n8n/) to access the API in your workflows.

## Learn about REST APIs [\#](https://docs.n8n.io/api/#learn-about-rest-apis "Permanent link")

The API documentation assumes you are familiar with REST APIs. If you're not, these resources may be helpful:

- [KnowledgeOwl's guide to working with APIs](https://support.knowledgeowl.com/help/working-with-apis): a basic introduction, including examples of how to call REST APIs.
- [IBM Cloud Learn Hub - What is an Application Programming Interface (API)](https://www.ibm.com/cloud/learn/api): this gives a general, but technical, introduction to APIs.
- [IBM Cloud Learn Hub - What is a REST API?](https://www.ibm.com/cloud/learn/rest-apis): more detailed information about REST APIs.
- [MDN web docs - An overview of HTTP](https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview): REST APIs work over HTTP and use HTTP verbs, or methods, to specify the action to perform.

Use the API playground (self-hosted n8n only)

Trying out the API in the [playground](https://docs.n8n.io/api/using-api-playground/) can help you understand how APIs work. If you're worried about changing live data, consider setting up a test workflow, or test n8n instance, to explore safely.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Data Processing in n8n

[Skip to content](https://docs.n8n.io/data/#data)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/data/index.md "Edit this page")

# Data [\#](https://docs.n8n.io/data/#data "Permanent link")

Data is the information that n8n nodes receive and process. For basic usage of n8n you don't need to understand data structures and manipulation. However, it becomes important if you want to:

- Create your own node
- Write custom [expressions](https://docs.n8n.io/glossary/#expression-n8n)
- Use the Function or Function Item node

This section covers:

- [Data structure](https://docs.n8n.io/data/data-structure/)
- [Data flow within nodes](https://docs.n8n.io/data/data-flow-nodes/)
- [Transforming data](https://docs.n8n.io/data/transforming-data/)
- [Process data using code](https://docs.n8n.io/data/code/)
- [Pinning](https://docs.n8n.io/data/data-pinning/) and [editing](https://docs.n8n.io/data/data-editing/) data during workflow development.
- [Data mapping](https://docs.n8n.io/data/data-mapping/) and [Item linking](https://docs.n8n.io/data/data-mapping/data-item-linking/): how data items link to each other.

## Related resources [\#](https://docs.n8n.io/data/#related-resources "Permanent link")

### Data transformation nodes [\#](https://docs.n8n.io/data/#data-transformation-nodes "Permanent link")

n8n provides a collection of nodes to transform data:

- [Aggregate](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.aggregate/): take separate items, or portions of them, and group them together into individual items.
- [Limit](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.aggregate/): remove items beyond a defined maximum number.
- [Remove Duplicates](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.removeduplicates/): identify and delete items that are identical across all fields or a subset of fields.
- [Sort](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.sort/): organize lists of in a desired ordering, or generate a random selection.
- [Split Out](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.splitout/): separate a single data item containing a list into multiple items.
- [Summarize](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.summarize/): aggregate items together, in a manner similar to Excel pivot tables.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## No-Code Automation Courses

[Skip to content](https://docs.n8n.io/courses/#text-courses)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/courses/index.md "Edit this page")

# Text courses [\#](https://docs.n8n.io/courses/#text-courses "Permanent link")

If you've found your way here, it means you're serious about your interest in automation. Maybe you're tired of manually entering data into the same spreadsheet every day, of clicking through a series of tabs and buttons for that one piece of information you need, of managing tens of different tools and systems.

Whatever the reason, one thing is clear: you shouldn't spend precious time doing things that don't spark joy or contribute to your personal and professional growth.

These tasks can and should be automated! And you don't need advanced technical knowledge or excellent coding skills to do this–with no-code tools like n8n, automation is for everyone.

## Available courses [\#](https://docs.n8n.io/courses/#available-courses "Permanent link")

- [Level 1: Beginner course](https://docs.n8n.io/courses/level-one/)
- [Level 2: Intermediate course](https://docs.n8n.io/courses/level-two/)

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Create n8n Workflows

[Skip to content](https://docs.n8n.io/workflows/create/#create-a-workflow)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/workflows/create.md "Edit this page")

# Create a workflow [\#](https://docs.n8n.io/workflows/create/#create-a-workflow "Permanent link")

A [workflow](https://docs.n8n.io/glossary/#workflow-n8n) is a collection of nodes connected together to automate a process. You build workflows on the [workflow canvas](https://docs.n8n.io/glossary/#canvas-n8n).

## Create a workflow [\#](https://docs.n8n.io/workflows/create/#create-a-workflow_1 "Permanent link")

1. Select the ![universal create resource icon](https://docs.n8n.io/_images/common-icons/universal-resource-button.png)**button** in the upper-left corner of the side menu. Select workflow.
2. If your n8n instance supports projects, you'll also need to choose whether to create the workflow inside your **personal space** or a specific **project** you have access to. If you're using the community version, you'll always create workflows inside your personal space.
3. Get started by adding a trigger node: select **Add first step...**

Or:

1. Select the ![universal create resource icon](https://docs.n8n.io/_images/common-icons/universal-resource-button.png)**create** button in the upper-right corner from either the **Overview** page or a specific **project**. Select workflow.
2. If you're doing this from the **Overview** page, you'll create the workflow inside your personal space. If you're doing this from inside a project, you'll create the workflow inside that specific project.
3. Get started by adding a trigger node: select **Add first step...**

If it's your first time building a workflow, you may want to use the [quickstart guides](https://docs.n8n.io/try-it-out/) to quickly try out n8n features.

## Run workflows manually [\#](https://docs.n8n.io/workflows/create/#run-workflows-manually "Permanent link")

You may need to run your workflow manually when building and testing, or if your workflow doesn't have a trigger node.

To run manually, select **Test Workflow**.

## Run workflows automatically [\#](https://docs.n8n.io/workflows/create/#run-workflows-automatically "Permanent link")

All new workflows are inactive by default.

You need to activate workflows that start with a trigger node or Webhook node so that they can run automatically. When a workflow is inactive, you must run it manually.

To activate or deactivate your workflow, open your workflow and toggle **Inactive** / **Active**.

Once a workflow is active, it runs whenever its trigger conditions are met.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=206752880.1744288898&gtm=45je5490h2v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509683~102788824~102803279~102813109~102887800~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=872713130)

## AI Workflows in n8n

[Skip to content](https://docs.n8n.io/advanced-ai/#advanced-ai)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/advanced-ai/index.md "Edit this page")

# Advanced AI [\#](https://docs.n8n.io/advanced-ai/#advanced-ai "Permanent link")

Build AI functionality using n8n: from creating your own chat bot, to using AI to process documents and data from other sources.

Feature availability

This feature is available on Cloud and self-hosted n8n, in version 1.19.4 and above.

- **Get started**

Work through the short tutorial to learn the basics of building AI workflows in n8n.

[Tutorial](https://docs.n8n.io/advanced-ai/intro-tutorial/)

- **Use a Starter Kit**

Try n8n's Self-hosted AI Starter Kit to quickly start building AI workflows.

[Self-hosted AI Starter Kit](https://docs.n8n.io/hosting/starter-kits/ai-starter-kit/)

- **Explore examples and concepts**

Browse examples and workflow templates to help you build. Includes explanations of important AI concepts.

[Examples](https://docs.n8n.io/advanced-ai/examples/introduction/)

- **How n8n uses LangChain**

Learn more about how n8n builds on LangChain.

[LangChain in n8n](https://docs.n8n.io/advanced-ai/langchain/overview/)

- **Browse AI templates**

Explore a wide range of AI workflow templates on the n8n website.

[AI workflows on n8n.io](https://n8n.io/workflows/?categories=25)

## Related resources [\#](https://docs.n8n.io/advanced-ai/#related-resources "Permanent link")

Related documentation and tools.

### Node types [\#](https://docs.n8n.io/advanced-ai/#node-types "Permanent link")

This feature uses [Cluster nodes](https://docs.n8n.io/integrations/builtin/cluster-nodes/): groups of [root](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/) and [sub](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/) nodes that work together.

[Cluster nodes](https://docs.n8n.io/glossary/#cluster-node-n8n) are node groups that work together to provide functionality in an n8n workflow. Instead of using a single node, you use a [root node](https://docs.n8n.io/glossary/#root-node-n8n) and one or more [sub-nodes](https://docs.n8n.io/glossary/#sub-node-n8n) that extend the functionality of the node.

[![Screenshot of a workflow with a root node and two sub-nodes](https://docs.n8n.io/_images/integrations/builtin/cluster-nodes/root-sub-nodes.png)](https://docs.n8n.io/_images/integrations/builtin/cluster-nodes/root-sub-nodes.png)

### Workflow templates [\#](https://docs.n8n.io/advanced-ai/#workflow-templates "Permanent link")

You can browse [workflow templates](https://docs.n8n.io/glossary/#template-n8n) in-app or on the n8n website [Workflows](https://n8n.io/workflows/?categories=25,26) page.

Refer to [Templates](https://docs.n8n.io/workflows/templates/) for information on accessing templates in-app.

### Chat trigger [\#](https://docs.n8n.io/advanced-ai/#chat-trigger "Permanent link")

Use the [n8n Chat Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.chattrigger/) to trigger a workflow based on chat interactions.

### Chatbot widget [\#](https://docs.n8n.io/advanced-ai/#chatbot-widget "Permanent link")

n8n provides a chatbot widget that you can use as a frontend for AI-powered chat workflows. Refer to the [@n8n/chat npm page](https://www.npmjs.com/package/@n8n/chat) for usage information.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Flow Logic

[Skip to content](https://docs.n8n.io/flow-logic/#flow-logic)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/flow-logic/index.md "Edit this page")

# Flow logic [\#](https://docs.n8n.io/flow-logic/#flow-logic "Permanent link")

n8n allows you to represent complex logic in your workflows.

This section covers:

- [Splitting with conditionals](https://docs.n8n.io/flow-logic/splitting/)
- [Merging data](https://docs.n8n.io/flow-logic/merging/)
- [Looping](https://docs.n8n.io/flow-logic/looping/)
- [Waiting](https://docs.n8n.io/flow-logic/waiting/)
- [Sub-workflows](https://docs.n8n.io/flow-logic/subworkflows/)
- [Error handling](https://docs.n8n.io/flow-logic/error-handling/)
- [Execution order in multi-branch workflows](https://docs.n8n.io/flow-logic/execution-order/)

## Related sections [\#](https://docs.n8n.io/flow-logic/#related-sections "Permanent link")

You need some understanding of [Data](https://docs.n8n.io/data/) in n8n, including [Data structure](https://docs.n8n.io/data/data-structure/) and [Data flow within nodes](https://docs.n8n.io/data/data-flow-nodes/).

When building your logic, you'll use n8n's [Core nodes](https://docs.n8n.io/integrations/builtin/core-nodes/), including:

- Splitting: [IF](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.if/) and [Switch](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.switch/).
- Merging: [Merge](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.merge/), [Compare Datasets](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.comparedatasets/), and [Code](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code/).
- Looping: [IF](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.if/) and [Loop Over Items](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.splitinbatches/).
- Waiting: [Wait](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.wait/).
- Creating sub-workflows: [Execute Workflow](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflow/) and [Execute Workflow Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflowtrigger/).
- Error handling: [Stop And Error](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.stopanderror/) and [Error Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.errortrigger/).

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## API Pagination Guide

[Skip to content](https://docs.n8n.io/api/pagination/#api-pagination)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/api/pagination.md "Edit this page")

# API pagination [\#](https://docs.n8n.io/api/pagination/#api-pagination "Permanent link")

The default page size is 100 results. You can change the page size limit. The maximum permitted size is 250.

When a response contains more than one page, it includes a cursor, which you can use to request the next pages.

For example, say you want to get all active workflows, 150 at a time.

Get the first page:

|                                                                          |                                                                                                                                                                                                                                                                                                                                                                                                                                                    |
| ------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>` | `<br># For a self-hosted n8n instance<br>curl -X 'GET' \<br>  '<N8N_HOST>:<N8N_PORT>/<N8N_PATH>/api/v<version-number>/workflows?active=true&limit=150' \<br>  -H 'accept: application/json' \<br>  -H 'X-N8N-API-KEY: <your-api-key>'<br># For n8n Cloud<br>curl -X 'GET' \<br>  '<your-cloud-instance>/api/v<version-number>/workflows?active=true&limit=150' \<br>  -H 'accept: application/json' \<br>  -H 'X-N8N-API-KEY: <your-api-key>'<br>` |

The response is in JSON format, and includes a `nextCursor` value. This is an example response.

|                                                     |                                                                                                                                                                                                                      |
| --------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>` | `<br>{<br>  "data": [<br>    // The response contains an object for each workflow<br>    {<br>      // Workflow data<br>    }<br>  ],<br>  "nextCursor": "MTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDA"<br>}<br>` |

Then to request the next page:

|                                                     |                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |
| --------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>` | `<br># For a self-hosted n8n instance<br>curl -X 'GET' \<br>  '<N8N_HOST>:<N8N_PORT>/<N8N_PATH>/api/v<version-number>/workflows?active=true&limit=150&cursor=MTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDA' \<br>  -H 'accept: application/json'<br># For n8n Cloud<br>curl -X 'GET' \<br>  '<your-cloud-instance>/api/v<version-number>/workflows?active=true&limit=150&cursor=MTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDA' \<br>  -H 'accept: application/json'<br>` |

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Workflow Settings

[Skip to content](https://docs.n8n.io/workflows/settings/#workflow-settings)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/workflows/settings.md "Edit this page")

# Workflow settings [\#](https://docs.n8n.io/workflows/settings/#workflow-settings "Permanent link")

You can customize workflow behavior for individual workflows using workflow settings.

To open the settings:

1. Open your workflow.
2. Select the **Options**![Options menu](https://docs.n8n.io/_images/common-icons/three-dot-options-menu.png) menu.
3. Select **Settings**. n8n opens the **Workflow settings** modal.

The following settings are available:

- **Execution order**: choose the execution order for multi-branch workflows. **v0 (legacy)** executes the first node of each branch, then the second node of each branch, and so on. **v1 (recommended)** executes each branch in turn, completing one branch before starting another. n8n orders the branches based on their position on the [canvas](https://docs.n8n.io/glossary/#canvas-n8n), from topmost to bottommost. If two branches are at the same height, the leftmost branch executes first.
- **Error Workflow**: select a workflow to trigger if the current workflow fails. See [Error workflows](https://docs.n8n.io/flow-logic/error-handling/) for more details.
- **This workflow can be called by**: choose whether other workflow can call this workflow.
- **Timezone**: sets the timezone for the workflow to use. The default timezone is EDT (New York). The timezone setting is important for the Schedule Trigger node.
- **Save failed production executions**: whether n8n should save failed executions for active workflows.
- **Save successful production executions**: whether n8n should save successful executions for active workflows.
- **Save manual executions**: whether n8n should save executions for workflows started by the user in the editor.
- **Save execution progress**: whether n8n should save execution data for each node. If set to **Save**, the workflow resumes from where it stopped in case of an error. This might increase latency.
- **Timeout Workflow**: toggle to enable setting a duration after which n8n should cancel the current workflow execution.
  - **Timeout After**: Set the time in hours, minutes, and seconds after which the workflow should timeout. For n8n Cloud users n8n enforces a maximum available timeout for each plan.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## External Secrets Management

[Skip to content](https://docs.n8n.io/external-secrets/#external-secrets)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/external-secrets.md "Edit this page")

# External secrets [\#](https://docs.n8n.io/external-secrets/#external-secrets "Permanent link")

Feature availability

- External secrets are available on Enterprise Self-hosted and Enterprise Cloud plans.
- n8n supports AWS Secrets Manager, Azure Key Vault, GCP Secrets Manager, Infisical and HashiCorp Vault.
- n8n doesn't support [HashiCorp Vault Secrets](https://developer.hashicorp.com/hcp/docs/vault-secrets).

You can use an external secrets store to manage [credentials](https://docs.n8n.io/glossary/#credential-n8n) for n8n.

n8n stores all credentials encrypted in its database, and restricts access to them by default. With the external secrets feature, you can store sensitive credential information in an external vault, and have n8n load it in when required. This provides an extra layer of security and allows you to manage credentials used across multiple [n8n environments](https://docs.n8n.io/source-control-environments/) in one central place.

## Connect n8n to your secrets store [\#](https://docs.n8n.io/external-secrets/#connect-n8n-to-your-secrets-store "Permanent link")

Secret names

Your secret names can't contain spaces, hyphens, or other special characters. n8n supports secret names containing alphanumeric characters ( `a-z`, `A-Z`, and `0-9`), and underscores.

1. In n8n, go to **Settings** \> **External Secrets**.
2. Select **Set Up** for your store provider.
3. Enter the credentials for your provider:

   - Azure Key Vault: Provide your **vault name**, **tenant ID**, **client ID**, and **client secret**. Refer to the Azure documentation to [register a Microsoft Entra ID app and create a service principal](https://learn.microsoft.com/en-us/entra/identity-platform/howto-create-service-principal-portal). n8n supports only single-line values for secrets.
   - AWS Secrets Manager: provide your **access key ID**, **secret access key**, and **region**. The IAM user must have the `secretsmanager:ListSecrets`, `secretsmanager:BatchGetSecretValue`, and `secretsmanager:GetSecretValue` permissions.

     To give n8n access to all secrets in your AWS Secrets Manager, you can attach the following policy to the IAM user:

     |                                                                                                                    |                                                                                                                                                                                                                                                                                                                                                                                                              |
     | ------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
     | `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>` | `<br>{<br>	"Version": "2012-10-17",<br>	"Statement": [<br>		{<br>			"Sid": "AccessAllSecrets",<br>			"Effect": "Allow",<br>			"Action": [<br>				"secretsmanager:ListSecrets",<br>				"secretsmanager:BatchGetSecretValue",<br>				"secretsmanager:GetResourcePolicy",<br>				"secretsmanager:GetSecretValue",<br>				"secretsmanager:DescribeSecret",<br>				"secretsmanager:ListSecretVersionIds",<br>			],<br>			"Resource": "*"<br>		}<br>	]<br>}<br>` |

     You can also be more restrictive and give n8n access to select specific AWS Secret Manager secrets. You still need to allow the `secretsmanager:ListSecrets` and `secretsmanager:BatchGetSecretValue` permissions to access all resources. These permissions allow n8n to retrieve ARN-scoped secrets, but don't provide access to the secret values.

     Next, you need set the scope for the `secretsmanager:GetSecretValue` permission to the specific Amazon Resource Names (ARNs) for the secrets you wish to share with n8n. Ensure you use the correct region and account ID in each resource ARNs. You can find the ARN details in the AWS dashboard for your secrets.

     For example, the following IAM policy only allows access to secrets with a name starting with `n8n` in your specified AWS account and region:

     |                                                                                                                                                              |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |
     | ------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
     | `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>` | `<br>{<br>	"Version": "2012-10-17",<br>	"Statement": [<br>		{<br>			"Sid": "ListingSecrets",<br>			"Effect": "Allow",<br>			"Action": [<br>				"secretsmanager:ListSecrets",<br>				"secretsmanager:BatchGetSecretValue"<br>			],<br>			"Resource": "*"<br>		},<br>		{<br>			"Sid": "RetrievingSecrets",<br>			"Effect": "Allow",<br>			"Action": [<br>				"secretsmanager:GetSecretValue",<br>				"secretsmanager:DescribeSecret"<br>			],<br>			"Resource": [<br>				"arn:aws:secretsmanager:us-west-2:123456789000:secret:n8n*"<br>			]<br>		}<br>	]<br>}<br>` |

     For more IAM permission policy examples, consult the [AWS documentation](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_iam-policies.html#auth-and-access_examples_batch).

   - HashiCorp Vault: provide the **Vault URL** for your vault instance, and select your **Authentication Method**. Enter your authentication details. Optionally provide a namespace.

     - Refer to the HashiCorp documentation for your authentication method:
       [Token auth method](https://developer.hashicorp.com/vault/docs/auth/token)

       [AppRole auth method](https://developer.hashicorp.com/vault/docs/auth/approle)

       [Userpass auth method](https://developer.hashicorp.com/vault/docs/auth/userpass)

     - If you use vault namespaces, you can enter the namespace n8n should connect to. Refer to [Vault Enterprise namespaces](https://developer.hashicorp.com/vault/docs/enterprise/namespaces) for more information on HashiCorp Vault namespaces.

   - Infisical: provide a **Service Token**. Refer to Infisical's [Service token](https://infisical.com/docs/documentation/platform/token) documentation for information on getting your token. If you self-host Infisical, enter the **Site URL**.

     Infisical environment

     Make sure you select the correct Infisical environment when creating your token. n8n will load secrets from this environment, and won't have access to secrets in other Infisical environments. n8n only support service tokens that have access to a single environment.

     Infisical folders

     n8n doesn't support [Infisical folders](https://infisical.com/docs/documentation/platform/folder).

   - Google Cloud Platform: provide a **Service Account Key** (JSON) for a service account that has at least these roles: `Secret Manager Secret Accessor` and `Secret Manager Secret Viewer`. Refer to Google's [service account documentation](https://cloud.google.com/iam/docs/service-account-overview) for more information.

4. **Save** your configuration.

5. Enable the provider using the **Disabled / Enabled** toggle.

## Use secrets in n8n credentials [\#](https://docs.n8n.io/external-secrets/#use-secrets-in-n8n-credentials "Permanent link")

To use a secret from your store in an n8n credential:

1. Create a new credential, or open an existing one.
2. On the field where you want to use a secret:
3. Hover over the field.
4. Select **Expression**.
5. In the field where you want to use a secret, enter an [expression](https://docs.n8n.io/glossary/#expression-n8n) referencing the secret name:

|             |                                                     |
| ----------- | --------------------------------------------------- |
| `<br>1<br>` | `<br>{{ $secrets.<vault-name>.<secret-name> }}<br>` |

`<vault-name>` is either `vault` (for HashiCorp) or `infisical` or `awsSecretsManager`. Replace `<secret-name>` with the name as it appears in your vault.

## Using external secrets with n8n environments [\#](https://docs.n8n.io/external-secrets/#using-external-secrets-with-n8n-environments "Permanent link")

n8n's [Source control and environments](https://docs.n8n.io/source-control-environments/) feature allows you to create different n8n environments, backed by Git. The feature doesn't support using different credentials in different instances. You can use an external secrets vault to provide different credentials for different environments by connecting each n8n instance to a different vault or project environment.

For example, you have two n8n instances, one for development and one for production. You use Infisical for your vault. In Infisical, create a project with two environments, development and production. Generate a token for each Infisical environment. Use the token for the development environment to connect your development n8n instance, and the token for your production environment to connect your production n8n instance.

## Using external secrets in projects [\#](https://docs.n8n.io/external-secrets/#using-external-secrets-in-projects "Permanent link")

To use external secrets in an [RBAC project](https://docs.n8n.io/user-management/rbac/), you must have an [instance owner or instance admin](https://docs.n8n.io/user-management/account-types/) as a member of the project.

## Troubleshooting [\#](https://docs.n8n.io/external-secrets/#troubleshooting "Permanent link")

### Infisical version changes [\#](https://docs.n8n.io/external-secrets/#infisical-version-changes "Permanent link")

Infisical version upgrades can introduce problems connecting to n8n. If your Infisical connection stops working, check if there was a recent version change. If so, report the issue to help@n8n.io.

### Only set external secrets on credentials owned by an instance owner or admin [\#](https://docs.n8n.io/external-secrets/#only-set-external-secrets-on-credentials-owned-by-an-instance-owner-or-admin "Permanent link")

Due to the permissions that instance owners and admins have, it's possible for owners and admins to update credentials owned by another user with a secrets expression. This will appear to work in preview for an instance owner or admin, but the secret won't resolve when the workflow runs in production.

Only use external secrets for credentials that are owned by an instance admin or owner. This ensures they resolve correctly in production.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Deployment Guide

[Skip to content](https://docs.n8n.io/embed/deployment/#deployment)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/embed/deployment.md "Edit this page")

# Deployment [\#](https://docs.n8n.io/embed/deployment/#deployment "Permanent link")

Feature availability

Embed requires an embed license. For more information about when to use Embed, as well as costs and licensing processes, refer to [Embed](https://n8n.io/embed/) on the n8n website.

See the [hosting documentation](https://docs.n8n.io/reference/server-setup.html) for detailed setup options.

## User data [\#](https://docs.n8n.io/embed/deployment/#user-data "Permanent link")

n8n recommends that you follow the same or similar practices used internally for n8n Cloud: Save user data using [Rook](https://rook.io/) and, if an n8n server goes down, a new instance starts on another machine using the same data.

Due to this, you don't need to use backups except in case of a catastrophic failure, or when a user wants to reactivate their account within your prescribed retention period (two weeks for n8n Cloud).

## Backups [\#](https://docs.n8n.io/embed/deployment/#backups "Permanent link")

n8n recommends creating nightly backups by attaching another container, and copying all data to this second container. In this manner, RAM usage is negligible, and so doesn't impact the amount of users you can place on the server.

## Restarting [\#](https://docs.n8n.io/embed/deployment/#restarting "Permanent link")

If your instance is down or restarting, missed executions (for example, Cron or Webhook nodes) during this time aren't recoverable. If it's important for you to maintain 100% uptime, you need to build another proxy in front of it which caches the data.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=698032172.1744299811&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509682~102788824~102803279~102813109~102887799~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=2073280907)

## n8n API Authentication

[Skip to content](https://docs.n8n.io/api/authentication/#api-authentication)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/api/authentication.md "Edit this page")

# API authentication [\#](https://docs.n8n.io/api/authentication/#api-authentication "Permanent link")

n8n uses API keys to authenticate API calls.

Feature availability

The n8n API isn't available during the free trial. Please upgrade to access this feature.

## Create an API key [\#](https://docs.n8n.io/api/authentication/#create-an-api-key "Permanent link")

1. Log in to n8n.
2. Go to **Settings** \> **n8n API**.
3. Select **Create an API key**.
4. Copy **My API Key** and use this key to authenticate your calls.

## Call the API using your key [\#](https://docs.n8n.io/api/authentication/#call-the-api-using-your-key "Permanent link")

Send the API key in your API call as a header named `X-N8N-API-KEY`.

For example, say you want to get all active workflows. Your curl request will look like this:

|                                                                          |                                                                                                                                                                                                                                                                                                                                                                                                                                |
| ------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>` | `<br># For a self-hosted n8n instance<br>curl -X 'GET' \<br>  '<N8N_HOST>:<N8N_PORT>/<N8N_PATH>/api/v<version-number>/workflows?active=true' \<br>  -H 'accept: application/json' \<br>  -H 'X-N8N-API-KEY: <your-api-key>'<br># For n8n Cloud<br>curl -X 'GET' \<br>  '<your-cloud-instance>/api/v<version-number>/workflows?active=true' \<br>  -H 'accept: application/json' \<br>  -H 'X-N8N-API-KEY: <your-api-key>'<br>` |

## Delete an API key [\#](https://docs.n8n.io/api/authentication/#delete-an-api-key "Permanent link")

1. Log in to n8n.
2. Go to **Settings** \> **n8n API**.
3. Select **Delete** next to the key you want to delete.
4. Confirm the delete by selecting **Delete Forever**.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Workflow Executions

[Skip to content](https://docs.n8n.io/workflows/executions/#executions)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/workflows/executions/index.md "Edit this page")

# Executions [\#](https://docs.n8n.io/workflows/executions/#executions "Permanent link")

An execution is a single run of a workflow.

## Execution modes [\#](https://docs.n8n.io/workflows/executions/#execution-modes "Permanent link")

There are two execution modes:

- Manual: run workflows manually when testing. Select **Test Workflow** to start a manual execution. You can do manual executions of active workflows, but n8n recommends keeping your workflow set to **Inactive** while developing and testing.
- Production: a production workflow is one that runs automatically. To enable this, set the workflow to **Active**.

## Execution lists [\#](https://docs.n8n.io/workflows/executions/#execution-lists "Permanent link")

n8n provides two execution lists:

- [Workflow-level executions](https://docs.n8n.io/workflows/executions/single-workflow-executions/): this execution list shows the executions for a single workflow.
- [All executions](https://docs.n8n.io/workflows/executions/all-executions/): this list shows all executions for all your workflows.

n8n supports [adding custom data to executions](https://docs.n8n.io/workflows/executions/custom-executions-data/).

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Video Courses

[Skip to content](https://docs.n8n.io/video-courses/#video-courses)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/video-courses.md "Edit this page")

# Video courses [\#](https://docs.n8n.io/video-courses/#video-courses "Permanent link")

n8n provides two video courses on YouTube.

For support, join the [Forum](https://community.n8n.io/).

## Beginner [\#](https://docs.n8n.io/video-courses/#beginner "Permanent link")

The [Beginner](https://www.youtube.com/playlist?list=PLlET0GsrLUL59YbxstZE71WszP3pVnZfI) course covers the basics of n8n:

- [Introduction and workflows](https://youtu.be/4BVTkqbn_tY?si=g2A5eD8kAoia5k6y)
- [APIs and Webhooks](https://youtu.be/y_cpFMF1pzk?si=zi3wM4W7nx8Jkcw3)
- [Nodes](https://youtu.be/rCPXBkeBWCQ?si=-T2iUsydwS5ym6yI)
- [Data in n8n](https://youtu.be/2YfWuNziPE4?si=4jB-fubG1_T0HXYx)
- [Core workflow concepts](https://youtu.be/kkrA7tGHYNo?si=mLVbuV98ohL5YVnm)
- [Useful nodes](https://youtu.be/Rmi-ckbMOQE?si=H_dF77uf5KJU7RtH)
- [Error handling](https://youtu.be/XEUVl3bbMhI?si=nUyaME5kyxe6daGO)
- [Debugging](https://youtu.be/Gxe_RfCRH-o?si=F-pAviLTIeL3-X13)
- [Collaboration](https://youtu.be/pI0W-0Qcwmo?si=X7sALFXo2e-cY9FQ)

## Advanced [\#](https://docs.n8n.io/video-courses/#advanced "Permanent link")

The [Advanced](https://www.youtube.com/playlist?list=PLlET0GsrLUL5bxmx5c1H1Ms_OtOPYZIEG) course covers more complex workflows, more technical nodes, and enterprise features:

- [Introduction and complex data flows](https://youtu.be/TFTLMQLozCI?si=vX0ooIH1RmbsgAkC)
- [Advanced technical nodes](https://youtu.be/JM4jqYs4Fxo?si=YSNMeSay3C29C8HS)
- [Pinning and editing output data](https://youtu.be/zcNB8L4_9mA?si=LZJ9DlYDQQxL7eeP)
- [Sub-workflows](https://youtu.be/xr05Ie_Hkyg?si=rqqP8llttZPBjBeD)
- [Error workflows](https://youtu.be/77Ewdaby47M?si=6YRlC4nMgG4hVQPV)
- [Building a full example](https://youtu.be/wOKLEfeJLVE?si=YMW5t-PzPq7QKbPY)
- [Handling files](https://youtu.be/2RAZYNigqOY?si=9x4vLX2Qo08xx8vC)
- [Enterprise features](https://youtu.be/fXEubzmVJ_E?si=aK9_fI9tkF6F5CtB)

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Workflow History Management

[Skip to content](https://docs.n8n.io/workflows/history/#workflow-history)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/workflows/history.md "Edit this page")

# Workflow history [\#](https://docs.n8n.io/workflows/history/#workflow-history "Permanent link")

Feature availability

- Full workflow history is available on Enterprise Cloud and Enterprise Self-hosted.
- Versions from the last five days are available for Cloud Pro users.
- Versions from the last 24 hours are available for registered Community users.

Use workflow history to view and restore previous versions of your workflows.

## Understand workflow history [\#](https://docs.n8n.io/workflows/history/#understand-workflow-history "Permanent link")

n8n creates a new version when you:

- Save your workflow.
- Restore an old version. n8n saves the latest version before restoring.
- Pull from a Git repository using [Source control](https://docs.n8n.io/source-control-environments/). Note that n8n saves versions to the instance database, not to Git.

Workflow history and execution history

Don't confuse workflow history with the [Workflow-level executions list](https://docs.n8n.io/workflows/executions/single-workflow-executions/).

Executions are workflow runs. With the executions list, you can see previous runs of the current version of the workflow. You can copy previous executions into the editor to [Debug and re-run past executions](https://docs.n8n.io/workflows/executions/debug/) in your current workflow.

Workflow history is previous versions of the workflow: for example, a version with a different node, or different parameters set.

## View workflow history [\#](https://docs.n8n.io/workflows/history/#view-workflow-history "Permanent link")

To view a workflow's history:

1. Open the workflow.
2. Select **Workflow history**![Workflow history icon](https://docs.n8n.io/_images/common-icons/workflow-history.png). n8n opens a menu showing the saved workflow versions, and a canvas with a preview of the selected version.

## Restore or copy previous versions [\#](https://docs.n8n.io/workflows/history/#restore-or-copy-previous-versions "Permanent link")

You can restore a previous workflow version, or make a copy of it:

1. On the version you want to restore or copy, select **Options**![Options icon](https://docs.n8n.io/_images/common-icons/three-dot-options-menu.png).
2. Choose what you want to do:
   - **Restore this version**: replace your current workflow with the selected version.
   - **Clone to new workflow**: create a new workflow based on the selected version.
   - **Open version in new tab**: open a second tab displaying the selected version. Use this to compare versions.
   - **Download**: download the version as JSON.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Privacy & Security

[Skip to content](https://docs.n8n.io/privacy-security/#privacy-and-security-at-n8n)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/privacy-security/index.md "Edit this page")

# Privacy and security at n8n [\#](https://docs.n8n.io/privacy-security/#privacy-and-security-at-n8n "Permanent link")

n8n is committed to the privacy and security of your data. This section outlines how n8n handles and secures data. This isn't an exhaustive list of practices, but an overview of key policies and procedures.

If you have any questions related to data privacy, email privacy@n8n.io.

If you have any security-related questions, or if you want to report a suspected vulnerability, email security@n8n.io.

- [Privacy](https://docs.n8n.io/privacy-security/privacy/)
- [Security](https://n8n.io/legal/#security)
- [Incident response](https://docs.n8n.io/privacy-security/incident-response/)
- [What you can do](https://docs.n8n.io/privacy-security/what-you-can-do/)

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=633429167.1744299820&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509682~102788824~102803279~102813109~102887800~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=95670060)

## n8n Embed Configuration

[Skip to content](https://docs.n8n.io/embed/configuration/#configuration)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/embed/configuration.md "Edit this page")

# Configuration [\#](https://docs.n8n.io/embed/configuration/#configuration "Permanent link")

Feature availability

Embed requires an embed license. For more information about when to use Embed, as well as costs and licensing processes, refer to [Embed](https://n8n.io/embed/) on the n8n website.

## Authentication [\#](https://docs.n8n.io/embed/configuration/#authentication "Permanent link")

You can secure n8n by setting up [User management](https://docs.n8n.io/user-management/), n8n's built-in authentication feature.

n8n supports [LDAP](https://docs.n8n.io/user-management/ldap/) and [SAML](https://docs.n8n.io/user-management/saml/).

### Credential overwrites [\#](https://docs.n8n.io/embed/configuration/#credential-overwrites "Permanent link")

To offer OAuth login to users, it's possible to overwrite [credentials](https://docs.n8n.io/glossary/#credential-n8n) on a global basis. This credential data isn't visible to users but the backend uses it automatically.

In the Editor UI, n8n hides all overwritten fields by default. This means that users are able to authenticate using OAuth by pressing the "connect" button on the credentials.

n8n offers two ways to apply credential overwrites: using Environment Variable and using the REST API.

#### Using environment variables [\#](https://docs.n8n.io/embed/configuration/#using-environment-variables "Permanent link")

You can set credential overwrites using environment variable by setting the `CREDENTIALS_OVERWRITE_DATA` to `{ CREDENTIAL_NAME: { PARAMETER: VALUE }}`.

Warning

Even though this is possible, it isn't recommended. Environment variables aren't protected in n8n, so the data can leak to users.

#### Using REST APIs [\#](https://docs.n8n.io/embed/configuration/#using-rest-apis "Permanent link")

The recommended way is to load the data using a custom REST endpoint. Set the `CREDENTIALS_OVERWRITE_ENDPOINT` to a path under which this endpoint should be made available.

Note

The endpoints can be called just one at a time for security reasons.

For example:

1. Activate the endpoint by setting the environment variable in the environment n8n runs under:

|             |                                                                  |
| ----------- | ---------------------------------------------------------------- |
| `<br>1<br>` | `<br>export CREDENTIALS_OVERWRITE_ENDPOINT=send-credentials<br>` |

2. A JSON file with the credentials to overwrite is then needed. For example, a `oauth-credentials.json` file to overwrite credentials for Asana and GitHub could look like this:

|                                                                    |                                                                                                                                                                                                                                      |
| ------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>` | `<br>{<br>    "asanaOAuth2Api": {<br>        "clientId": "<id>",<br>        "clientSecret": "<secret>"<br>    },<br>    "githubOAuth2Api": {<br>        "clientId": "<id>",<br>        "clientSecret": "<secret>"<br>    }<br>}<br>` |

3. Then apply it to the instance by sending it using curl:

|             |                                                                                                                          |
| ----------- | ------------------------------------------------------------------------------------------------------------------------ |
| `<br>1<br>` | `<br>curl -H "Content-Type: application/json" --data @oauth-credentials.json http://localhost:5678/send-credentials<br>` |

Note

There are cases when credentials are based on others. For example, the `googleSheetsOAuth2Api` extends the `googleOAuth2Api`.
In this case, you can set parameters on the parent credentials ( `googleOAuth2Api`) for all child-credentials ( `googleSheetsOAuth2Api`) to use.

## Environment variables [\#](https://docs.n8n.io/embed/configuration/#environment-variables "Permanent link")

n8n has many [environment variables](https://docs.n8n.io/hosting/configuration/environment-variables/) you can configure. Here are the most relevant environment variables for your hosted solution:

| Variable                          | Type             | Default              | Description                                                                                                                                                                                                                                                                               |
| --------------------------------- | ---------------- | -------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `EXECUTIONS_TIMEOUT`              | Number           | `-1`                 | Sets a default timeout (in seconds) to all workflows after which n8n stops their execution. Users can override this for individual workflows up to the duration set in `EXECUTIONS_TIMEOUT_MAX`. Set `EXECUTIONS_TIMEOUT` to `-1` to disable.                                             |
| `EXECUTIONS_DATA_PRUNE`           | Boolean          | `true`               | Whether to delete data of past executions on a rolling basis.                                                                                                                                                                                                                             |
| `EXECUTIONS_DATA_MAX_AGE`         | Number           | `336`                | The execution age (in hours) before it's deleted.                                                                                                                                                                                                                                         |
| `EXECUTIONS_DATA_PRUNE_MAX_COUNT` | Number           | `10000`              | Maximum number of executions to keep in the database. 0 = no limit                                                                                                                                                                                                                        |
| `NODES_EXCLUDE`                   | Array of strings | -                    | Specify which nodes not to load. For example, to block nodes that can be a security risk if users aren't trustworthy: `NODES_EXCLUDE: "[\"n8n-nodes-base.executeCommand\", \"n8n-nodes-base.readWriteFile\"]"`                                                                            |
| `NODES_INCLUDE`                   | Array of strings | -                    | Specify which nodes to load.                                                                                                                                                                                                                                                              |
| `N8N_TEMPLATES_ENABLED`           | Boolean          | `true`               | Enable [workflow templates](https://docs.n8n.io/glossary/#template-n8n) (true) or disable (false).                                                                                                                                                                                        |
| `N8N_TEMPLATES_HOST`              | String           | `https://api.n8n.io` | Change this if creating your own workflow template library. Note that to use your own workflow templates library, your API must provide the same endpoints and response structure as n8n's. Refer to [Workflow templates](https://docs.n8n.io/workflows/templates/) for more information. |

## Backend hooks [\#](https://docs.n8n.io/embed/configuration/#backend-hooks "Permanent link")

It's possible to define external hooks that n8n executes whenever a specific operation runs. You can use these, for example, to log data, change data, or forbid an action by throwing an error.

### Available hooks [\#](https://docs.n8n.io/embed/configuration/#available-hooks "Permanent link")

| Hook                   | Arguments                                                                                                                                                            | Description                                                                                                   |
| ---------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------- |
| `credentials.create`   | `[credentialData: ICredentialsDb]`                                                                                                                                   | Called before new credentials get created. Use to restrict the number of credentials.                         |
| `credentials.delete`   | `[id: credentialId]`                                                                                                                                                 | Called before credentials get deleted.                                                                        |
| `credentials.update`   | `[credentialData: ICredentialsDb]`                                                                                                                                   | Called before existing credentials are saved.                                                                 |
| `frontend.settings`    | `[frontendSettings: IN8nUISettings]`                                                                                                                                 | Gets called on n8n startup. Allows you to, for example, overwrite frontend data like the displayed OAuth URL. |
| `n8n.ready`            | `[app: App]`                                                                                                                                                         | Called once n8n is ready. Use to, for example, register custom API endpoints.                                 |
| `n8n.stop`             |                                                                                                                                                                      | Called when an n8n process gets stopped. Allows you to save some process data.                                |
| `oauth1.authenticate`  | `[oAuthOptions: clientOAuth1.Options, oauthRequestData: {oauth_callback: string}]`                                                                                   | Called before an OAuth1 authentication. Use to overwrite an OAuth callback URL.                               |
| `oauth2.callback`      | `[oAuth2Parameters: {clientId: string, clientSecret: string \| undefined, accessTokenUri: string, authorizationUri: string, redirectUri: string, scopes: string[]}]` | Called in an OAuth2 callback. Use to overwrite an OAuth callback URL.                                         |
| `workflow.activate`    | `[workflowData: IWorkflowDb]`                                                                                                                                        | Called before a workflow gets activated. Use to restrict the number of active workflows.                      |
| `workflow.afterDelete` | `[workflowId: string]`                                                                                                                                               | Called after a workflow gets deleted.                                                                         |
| `workflow.afterUpdate` | `[workflowData: IWorkflowBase]`                                                                                                                                      | Called after an existing workflow gets saved.                                                                 |
| `workflow.create`      | `[workflowData: IWorkflowBase]`                                                                                                                                      | Called before a workflow gets created. Use to restrict the number of saved workflows.                         |
| `workflow.delete`      | `[workflowId: string]`                                                                                                                                               | Called before a workflow gets delete.                                                                         |
| `workflow.postExecute` | `[run: IRun, workflowData: IWorkflowBase]`                                                                                                                           | Called after a workflow gets executed.                                                                        |
| `workflow.preExecute`  | `[workflow: Workflow: mode: WorkflowExecuteMode]`                                                                                                                    | Called before a workflow gets executed. Allows you to count or limit the number of workflow executions.       |
| `workflow.update`      | `[workflowData: IWorkflowBase]`                                                                                                                                      | Called before an existing workflow gets saved.                                                                |

### Registering hooks [\#](https://docs.n8n.io/embed/configuration/#registering-hooks "Permanent link")

Set hooks by registering a hook file that contains the hook functions.
To register a hook, set the environment variable `EXTERNAL_HOOK_FILES`.

You can set the variable to a single file:

`EXTERNAL_HOOK_FILES=/data/hook.js`

Or to contain multiple files separated by a semicolon:

`EXTERNAL_HOOK_FILES=/data/hook1.js;/data/hook2.js`

### Backend hook files [\#](https://docs.n8n.io/embed/configuration/#backend-hook-files "Permanent link")

Hook files are regular JavaScript files that have the following format:

|                                                                                                                                                  ||
| ------------------------------------------------------------------------------------------------------------------------------------------------ ||
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>` | `<br>module.exports = {<br>    "frontend": {<br>        "settings": [<br>            async function (settings) {<br>                settings.oauthCallbackUrls.oauth1 = 'https://n8n.example.com/oauth1/callback';<br>                settings.oauthCallbackUrls.oauth2 = 'https://n8n.example.com/oauth2/callback';<br>            }<br>        ]<br>    },<br>    "workflow": {<br>        "activate": [<br>            async function (workflowData) {<br>                const activeWorkflows = await this.dbCollections.Workflow.count({ active: true });<br>                if (activeWorkflows > 1) {<br>                    throw new Error(<br>                        'Active workflow limit reached.'<br>                    );<br>                }<br>            }<br>        ]<br>    }<br>}<br>` |

### Backend hook functions [\#](https://docs.n8n.io/embed/configuration/#backend-hook-functions "Permanent link")

A hook or a hook file can contain multiple hook functions, with all functions executed one after another.

If the parameters of the hook function are objects, it's possible to change the data of that parameter to change the behavior of n8n.

You can also access the database in any hook function using `this.dbCollections` (refer to the code sample in [Backend hook files](https://docs.n8n.io/embed/configuration/#backend-hook-files).

## Frontend external hooks [\#](https://docs.n8n.io/embed/configuration/#frontend-external-hooks "Permanent link")

Like backend external hooks, it's possible to define external hooks in the frontend code that get executed by n8n whenever a user performs a specific operation. You can use them, for example, to log data and change data.

### Available hooks [\#](https://docs.n8n.io/embed/configuration/#available-hooks_1 "Permanent link")

| Hook                                       | Description                                                                 |
| ------------------------------------------ | --------------------------------------------------------------------------- |
| `credentialsEdit.credentialTypeChanged`    | Called when an existing credential's type changes.                          |
| `credentials.create`                       | Called when someone creates a new credential.                               |
| `credentialsList.dialogVisibleChanged`     |                                                                             |
| `dataDisplay.nodeTypeChanged`              |                                                                             |
| `dataDisplay.onDocumentationUrlClick`      | Called when someone selects the help documentation link.                    |
| `execution.open`                           | Called when an existing execution opens.                                    |
| `executionsList.openDialog`                | Called when someone selects an execution from existing Workflow Executions. |
| `expressionEdit.itemSelected`              |                                                                             |
| `expressionEdit.dialogVisibleChanged`      |                                                                             |
| `nodeCreateList.filteredNodeTypesComputed` |                                                                             |
| `nodeCreateList.nodeFilterChanged`         | Called when someone makes any changes to the node panel filter.             |
| `nodeCreateList.selectedTypeChanged`       |                                                                             |
| `nodeCreateList.mounted`                   |                                                                             |
| `nodeCreateList.destroyed`                 |                                                                             |
| `nodeSettings.credentialSelected`          |                                                                             |
| `nodeSettings.valueChanged`                |                                                                             |
| `nodeView.createNodeActiveChanged`         |                                                                             |
| `nodeView.addNodeButton`                   |                                                                             |
| `nodeView.createNodeActiveChanged`         |                                                                             |
| `nodeView.mount`                           |                                                                             |
| `pushConnection.executionFinished`         |                                                                             |
| `showMessage.showError`                    |                                                                             |
| `runData.displayModeChanged`               |                                                                             |
| `workflow.activeChange`                    |                                                                             |
| `workflow.activeChangeCurrent`             |                                                                             |
| `workflow.afterUpdate`                     | Called when someone updates an existing workflow.                           |
| `workflow.open`                            |                                                                             |
| `workflowRun.runError`                     |                                                                             |
| `workflowRun.runWorkflow`                  | Called when a workflow executes.                                            |
| `workflowSettings.dialogVisibleChanged`    |                                                                             |
| `workflowSettings.saveSettings`            | Called when someone saves the settings of a workflow.                       |

### Registering hooks [\#](https://docs.n8n.io/embed/configuration/#registering-hooks_1 "Permanent link")

You can set hooks by loading the hooks script on the page. One way to do this is by creating a hooks file in the project and adding a script tag in your `editor-ui/public/index.html` file:

|             |                                                     |
| ----------- | --------------------------------------------------- |
| `<br>1<br>` | `<br><script src="frontend-hooks.js"></script><br>` |

### Frontend hook files [\#](https://docs.n8n.io/embed/configuration/#frontend-hook-files "Permanent link")

Frontend external hook files are regular JavaScript files which have the following format:

|                                                                                                                                            |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |
| ------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>` | `<br>window.n8nExternalHooks = {<br>  nodeView: {<br>    mount: [<br>      function (store, meta) {<br>        // do something<br>      },<br>    ],<br>    createNodeActiveChanged: [<br>      function (store, meta) {<br>        // do something<br>      },<br>      function (store, meta) {<br>        // do something else<br>      },<br>    ],<br>    addNodeButton: [<br>      function (store, meta) {<br>        // do something<br>      },<br>    ],<br>  },<br>};<br>` |

### Frontend hook functions [\#](https://docs.n8n.io/embed/configuration/#frontend-hook-functions "Permanent link")

You can define multiple hook functions per hook. Each hook function is invoked with the following arguments arguments:

- `store`: The Vuex store object. You can use this to change or get data from the store.
- `metadata`: The object that contains any data provided by the hook. To see what's passed, search for the hook in the `editor-ui` package.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Expressions Guide

[Skip to content](https://docs.n8n.io/code/expressions/#expressions)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/code/expressions.md "Edit this page")

# Expressions [\#](https://docs.n8n.io/code/expressions/#expressions "Permanent link")

Expressions are a powerful feature implemented in all n8n nodes. They allow node parameters to be set dynamically based on data from:

- Previous node executions
- The workflow
- Your n8n environment

You can also execute JavaScript within an expression, making this a convenient and easy way to manipulate data into useful parameter values without writing extensive extra code.

n8n created and uses a templating language called [Tournament](https://github.com/n8n-io/tournament), and extends it with [custom methods and variables](https://docs.n8n.io/code/builtin/overview/) and [data transformation functions](https://docs.n8n.io/code/builtin/data-transformation-functions/). These features make it easier to perform common tasks like getting data from other nodes or accessing workflow metadata.

n8n additionally supports two libraries:

- [Luxon](https://github.com/moment/luxon/), for working with dates and time.
- [JMESPath](https://jmespath.org/), for querying JSON.

Data in n8n

When writing expressions, it's helpful to understand data structure and behavior in n8n. Refer to [Data](https://docs.n8n.io/data/) for more information on working with data in your workflows.

## Writing expressions [\#](https://docs.n8n.io/code/expressions/#writing-expressions "Permanent link")

To use an expression to set a parameter value:

1. Hover over the parameter where you want to use an expression.
2. Select **Expressions** in the **Fixed/Expression** toggle.
3. Write your expression in the parameter, or select **Open expression editor**![Open expressions editor icon](https://docs.n8n.io/_images/common-icons/open-expression-editor.png) to open the expressions editor. If you use the expressions editor, you can browse the available data in the **Variable selector**. All expressions have the format `{{ your expression here }}`.

### Example: Get data from webhook body [\#](https://docs.n8n.io/code/expressions/#example-get-data-from-webhook-body "Permanent link")

Consider the following scenario: you have a webhook trigger that receives data through the webhook body. You want to extract some of that data for use in the workflow.

Your webhook data looks similar to this:

|                                                                                                  |                                                                                                                                                                                                                                                               |
| ------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>` | `<br>[<br>  {<br>    "headers": {<br>      "host": "n8n.instance.address",<br>      ...<br>    },<br>    "params": {},<br>    "query": {},<br>    "body": {<br>      "name": "Jim",<br>      "age": 30,<br>      "city": "New York"<br>    }<br>  }<br>]<br>` |

In the next node in the workflow, you want to get just the value of `city`. You can use the following expression:

|             |                               |
| ----------- | ----------------------------- |
| `<br>1<br>` | `<br>{{$json.body.city}}<br>` |

This expression:

1. Accesses the incoming JSON-formatted data using n8n's custom `$json` variable.
2. Finds the value of `city` (in this example, "New York"). Note that this example uses JMESPath syntax to query the JSON data. You can also write this expression as `{{$json['body']['city']}}`.

### Example: Writing longer JavaScript [\#](https://docs.n8n.io/code/expressions/#example-writing-longer-javascript "Permanent link")

An expression contains one line of JavaScript. This means you cannot do things like variable assignments or multiple standalone operations.

To understand the limitations of JavaScript in expressions, and start thinking about workarounds, look at the following two pieces of code. Both code examples use the Luxon date and time library to find the time between two dates in months, and encloses the code in handlebar brackets, like an expression.

However, the first example isn't a valid n8n expression:

|                                                                          |                                                                                                                                                                                                                                                                                                                                                                                              |
| ------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>` | `<br>// This example is split over multiple lines for readability<br>// It's still invalid when formatted as a single line<br>{{<br>  function example() {<br>    let end = DateTime.fromISO('2017-03-13');<br>    let start = DateTime.fromISO('2017-02-13');<br>    let diffInMonths = end.diff(start, 'months');<br>    return diffInMonths.toObject();<br>  }<br>  example();<br>}}<br>` |

While the second example is valid:

|             |                                                                                                        |
| ----------- | ------------------------------------------------------------------------------------------------------ |
| `<br>1<br>` | `<br>{{DateTime.fromISO('2017-03-13').diff(DateTime.fromISO('2017-02-13'), 'months').toObject()}}<br>` |

## Common issues [\#](https://docs.n8n.io/code/expressions/#common-issues "Permanent link")

For common errors or issues with expressions and suggested resolution steps, refer to [Common Issues](https://docs.n8n.io/code/cookbook/expressions/common-issues/).

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Choose n8n Options

[Skip to content](https://docs.n8n.io/choose-n8n/#choose-your-n8n)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/choose-n8n.md "Edit this page")

# Choose your n8n [\#](https://docs.n8n.io/choose-n8n/#choose-your-n8n "Permanent link")

This section contains information on n8n's range of platforms, pricing plans, and licenses.

## Platforms [\#](https://docs.n8n.io/choose-n8n/#platforms "Permanent link")

There are different ways to set up n8n depending on how you intend to use it:

- [n8n Cloud](https://docs.n8n.io/manage-cloud/overview/): hosted solution, no need to install anything.
- [Self-host](https://docs.n8n.io/hosting/): recommended method for production or customized use cases.
  - [npm](https://docs.n8n.io/hosting/installation/npm/)
  - [Docker](https://docs.n8n.io/hosting/installation/docker/)
  - [Server setup guides](https://docs.n8n.io/hosting/installation/server-setups/) for popular platforms
- [Embed](https://docs.n8n.io/embed/): n8n Embed allows you to white label n8n and build it into your own product. Contact n8n on the [Embed website](https://n8n.io/embed/) for pricing and support.

Self-hosting knowledge prerequisites

Self-hosting n8n requires technical knowledge, including:

- Setting up and configuring servers and containers
- Managing application resources and scaling
- Securing servers and applications
- Configuring n8n

n8n recommends self-hosting for expert users. Mistakes can lead to data loss, security issues, and downtime. If you aren't experienced at managing servers, n8n recommends [n8n Cloud](https://n8n.io/cloud/).

## Licenses [\#](https://docs.n8n.io/choose-n8n/#licenses "Permanent link")

n8n's [Sustainable Use License](https://github.com/n8n-io/n8n/blob/master/LICENSE.md) and [n8n Enterprise License](https://github.com/n8n-io/n8n/blob/master/LICENSE_EE.md) are based on the [fair-code](https://faircode.io/) model.

For a detailed explanation of the license, refer to [Sustainable Use License](https://docs.n8n.io/sustainable-use-license/).

## Free versions [\#](https://docs.n8n.io/choose-n8n/#free-versions "Permanent link")

n8n offers the following free options:

- A free trial of Cloud
- A free self-hosted community edition for self-hosted users

## Paid versions [\#](https://docs.n8n.io/choose-n8n/#paid-versions "Permanent link")

n8n has two paid versions:

- n8n Cloud: choose from a range of paid plans to suit your usage and feature needs.
- Self-hosted: there are both free and paid versions of self-hosted.

For details of the Cloud plans and contact details for Enterprise Self-hosted, refer to [Pricing](https://n8n.io/pricing/) on the n8n website.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Log Streaming

[Skip to content](https://docs.n8n.io/log-streaming/#log-streaming)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/log-streaming.md "Edit this page")

# Log streaming [\#](https://docs.n8n.io/log-streaming/#log-streaming "Permanent link")

Feature availability

Log streaming is available on Enterprise Self-hosted and Cloud plans.

Log streaming allows you to send events from n8n to your own logging tools. This allows you to manage your n8n monitoring in your own alerting and logging processes.

## Set up log streaming [\#](https://docs.n8n.io/log-streaming/#set-up-log-streaming "Permanent link")

To use log streaming, you have to add a streaming destination.

1. Navigate to **Settings** \> **Log Streaming**.
2. Select **Add new destination**.
3. Choose your destination type. n8n opens the **New Event Destination** modal.
4. In the **New Event Destination** modal, enter the configuration information for your event destination. These depend on the type of destination you're using.
5. Select **Events** to choose which events to stream.
6. Select **Save**.

Self-hosted users

If you self-host n8n, you can configure additional log streaming behavior using [Environment variables](https://docs.n8n.io/hosting/configuration/environment-variables/logs/#log-streaming).

## Events [\#](https://docs.n8n.io/log-streaming/#events "Permanent link")

The following events are available. You can choose which events to stream in **Settings** \> **Log Streaming** \> **Events**.

- Workflow
  - Started
  - Success
  - Failed
- Node executions
  - Started
  - Finished
- Audit
  - User signed up
  - User updated
  - User deleted
  - User invited
  - User invitation accepted
  - User re-invited
  - User email failed
  - User reset requested
  - User reset
  - User credentials created
  - User credentials shared
  - User credentials updated
  - User credentials deleted
  - User API created
  - User API deleted
  - Package installed
  - Package updated
  - Package deleted
  - Workflow created
  - Workflow deleted
  - Workflow updated
- AI node logs
  - Memory get messages
  - Memory added message
  - Output parser get instructions
  - Output parser parsed
  - Retriever get relevant documents
  - Embeddings embedded document
  - Embeddings embedded query
  - Document processed
  - Text splitter split
  - Tool called
  - Vector store searched
  - LLM generated
  - Vector store populated

## Destinations [\#](https://docs.n8n.io/log-streaming/#destinations "Permanent link")

n8n supports three destination types:

- A syslog server
- A generic webhook
- A Sentry client

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Keyboard Shortcuts

[Skip to content](https://docs.n8n.io/keyboard-shortcuts/#keyboard-shortcuts-and-controls)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/keyboard-shortcuts.md "Edit this page")

# Keyboard shortcuts and controls [\#](https://docs.n8n.io/keyboard-shortcuts/#keyboard-shortcuts-and-controls "Permanent link")

n8n provides keyboard shortcuts for some actions.

## Workflow controls [\#](https://docs.n8n.io/keyboard-shortcuts/#workflow-controls "Permanent link")

- **Ctrl** \+ **Alt** \+ **n**: create new workflow
- **Ctrl** \+ **o**: open workflow
- **Ctrl** \+ **s**: save the current workflow
- **Ctrl** \+ **z**: undo
- **Ctrl** \+ **shift** \+ **z**: redo
- **Ctrl** \+ **Enter**: execute workflow

## Canvas [\#](https://docs.n8n.io/keyboard-shortcuts/#canvas "Permanent link")

### Move the canvas [\#](https://docs.n8n.io/keyboard-shortcuts/#move-the-canvas "Permanent link")

- **Ctrl** \+ **Left Mouse Button** \+ drag: move node view
- **Ctrl** \+ **Middle mouse button** \+ drag: move node view
- **Space** \+ drag: move node view
- **Middle mouse button** \+ drag: move node view
- Two fingers on a touch screen: move node view

### Canvas zoom [\#](https://docs.n8n.io/keyboard-shortcuts/#canvas-zoom "Permanent link")

- **+** or **=**: zoom in
- **-** or **\_**: zoom out
- **0**: reset zoom level
- **1**: zoom to fit workflow
- **Ctrl** \+ **Mouse wheel**: zoom in/out

### Nodes on the canvas [\#](https://docs.n8n.io/keyboard-shortcuts/#nodes-on-the-canvas "Permanent link")

- **Ctrl** \+ **a**: select all nodes
- **Ctrl** \+ **v**: paste nodes
- **Shift** \+ **s**: add sticky note

### With one or more nodes selected in canvas [\#](https://docs.n8n.io/keyboard-shortcuts/#with-one-or-more-nodes-selected-in-canvas "Permanent link")

- **ArrowDown**: select sibling node below the current one
- **ArrowLeft**: select node left of the current one
- **ArrowRight**: select node right of the current one
- **ArrowUp**: select sibling node above the current one
- **Ctrl** \+ **c**: copy
- **Ctrl** \+ **x**: cut
- **D**: deactivate
- **Delete**: delete
- **Enter**: open
- **F2**: rename
- **P**: pin data in node. Refer to [Data pinning](https://docs.n8n.io/data/data-pinning/) for more information.
- **Shift** \+ **ArrowLeft**: select all nodes left of the current one
- **Shift** \+ **ArrowRight**: select all nodes right of the current one

## Node panel [\#](https://docs.n8n.io/keyboard-shortcuts/#node-panel "Permanent link")

- **Tab**: open the Node Panel
- **Enter**: insert selected node into workflow
- **Escape**: close Node panel

### Node panel categories [\#](https://docs.n8n.io/keyboard-shortcuts/#node-panel-categories "Permanent link")

- **Enter**: insert node into workflow, collapse/expand category, open subcategory
- **ArrowRight**: expand category, open subcategory
- **ArrowLeft**: collapse category, close subcategory view

## Within nodes [\#](https://docs.n8n.io/keyboard-shortcuts/#within-nodes "Permanent link")

- **=**: in an empty parameter input, this switches to [expressions](https://docs.n8n.io/glossary/#expression-n8n) mode.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n License Key Guide

[Skip to content](https://docs.n8n.io/license-key/#license-key)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/license-key.md "Edit this page")

# License Key [\#](https://docs.n8n.io/license-key/#license-key "Permanent link")

To enable certain licensed features, you must first activate your license. You can do this either through the UI or by setting environment variables.

## Add a license key using the UI [\#](https://docs.n8n.io/license-key/#add-a-license-key-using-the-ui "Permanent link")

In your n8n instance:

1. Log in as **Admin** or **Owner**.
2. Select **Settings** \> **Usage and plan**.
3. Select **Enter activation key**.
4. Paste in your license key.
5. Select **Activate**.

## Add a license key using an environment variables [\#](https://docs.n8n.io/license-key/#add-a-license-key-using-an-environment-variables "Permanent link")

In your n8n configuration, set `N8N_LICENSE_ACTIVATION_KEY` to your license key. If the instance already has an activated license, this variable will have no effect.

Refer to [Environment variables](https://docs.n8n.io/hosting/configuration/configuration-methods/) to learn more about configuring n8n.

## Allowlist the license server IP addresses [\#](https://docs.n8n.io/license-key/#allowlist-the-license-server-ip-addresses "Permanent link")

n8n uses Cloudflare to host the license server. As the specific IP addresses can change, you need to allowlist the [full range of Cloudflare IP addresses](https://www.cloudflare.com/ips/) to ensure n8n can always reach the license server.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Learning Path

[Skip to content](https://docs.n8n.io/learning-path/#join-the-community)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/learning-path.md "Edit this page")

# Learning path

This guide outlines a series of tutorials and resources designed to get you started with n8n.

It's not necessary to complete all items listed to start using n8n. Use this as a reference to navigate to the most relevant parts of the documentation and other resources according to your needs.

## Join the community [\#](https://docs.n8n.io/learning-path/#join-the-community "Permanent link")

n8n has an active community where you can get and offer help. Connect, share, and learn with other n8n users:

- [Ask questions](https://community.n8n.io/t/readme-welcome-to-the-n8n-community/44381) and [make feature requests](https://community.n8n.io/c/feature-requests) in the Community Forum.
- [Report bugs](https://github.com/n8n-io/n8n/issues) and [contribute](https://github.com/n8n-io/n8n/blob/master/CONTRIBUTING.md) on GitHub.

## Set up your n8n [\#](https://docs.n8n.io/learning-path/#set-up-your-n8n "Permanent link")

If you don't have an account yet, sign up to a [free trial on n8n Cloud](https://app.n8n.cloud/register) or install n8n's community edition with [Docker](https://docs.n8n.io/hosting/installation/docker/) (recommended) or [npm](https://docs.n8n.io/hosting/installation/npm/). See [Choose your n8n](https://docs.n8n.io/choose-n8n/) for more details.

## Try it out [\#](https://docs.n8n.io/learning-path/#try-it-out "Permanent link")

Start with the quickstart guides to help you get up and running with building basic workflows.

- [A very quick quickstart](https://docs.n8n.io/try-it-out/quickstart/)
- [A longer introduction](https://docs.n8n.io/try-it-out/tutorial-first-workflow/)
- [Build an AI workflow in n8n](https://docs.n8n.io/advanced-ai/intro-tutorial/)

## Structured Courses [\#](https://docs.n8n.io/learning-path/#structured-courses "Permanent link")

n8n offers two sets of courses.

### Video courses [\#](https://docs.n8n.io/learning-path/#video-courses "Permanent link")

Learn key concepts and n8n features, while building examples as you go.

- The [Beginner](https://www.youtube.com/playlist?list=PLlET0GsrLUL59YbxstZE71WszP3pVnZfI) course covers the basics of n8n.
- The [Advanced](https://www.youtube.com/playlist?list=PLlET0GsrLUL5bxmx5c1H1Ms_OtOPYZIEG) course covers more complex workflows, more technical nodes, and enterprise features

### Text courses [\#](https://docs.n8n.io/learning-path/#text-courses "Permanent link")

Build more complex workflows while learning key concepts along the way. Earn a badge and an avatar in your community profile.

- [Level 1: Beginner Course](https://blog.n8n.io/announcing-the-n8n-certification-course-for-beginners-level-1/)
- [Level 2: Intermediate Course](https://blog.n8n.io/announcing-course-level-two/)

## Self-hosting n8n [\#](https://docs.n8n.io/learning-path/#self-hosting-n8n "Permanent link")

Explore various [self-hosting options in n8n](https://docs.n8n.io/hosting/). If you’re not sure where to start, these are two popular options:

- [Hosting n8n on DigitalOcean](https://docs.n8n.io/hosting/installation/server-setups/digital-ocean/)
- [Hosting n8n on Amazon Web Services](https://docs.n8n.io/hosting/installation/server-setups/aws/)

## Build a node [\#](https://docs.n8n.io/learning-path/#build-a-node "Permanent link")

If you can't find a node for a specific app or a service, you can build a node yourself and share with the community. See what others have built on [npm website](https://www.npmjs.com/search?q=keywords:n8n-community-node-package).

- [Build a declarative-style node](https://docs.n8n.io/integrations/creating-nodes/build/declarative-style-node/)
- [Learn how to build your own n8n nodes (Youtube Video)](https://www.youtube.com/live/OI6zHJ56eW0?si=SMD7L1J5fZ2mf79W)

## Stay updated [\#](https://docs.n8n.io/learning-path/#stay-updated "Permanent link")

- Follow new features and bug fixes in the [Release Notes](https://docs.n8n.io/release-notes/)
- Follow n8n on socials: [Twitter/X](https://twitter.com/n8n_io), [Discord](https://discord.com/invite/vWwMVThRta), [LinkedIn](https://www.linkedin.com/company/n8n/), [YouTube](https://www.youtube.com/@n8n-io)

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=508782607.1744299819&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509682~102788824~102803279~102813109~102887799~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=1181801130)

## n8n License Key Guide

[Skip to content](https://docs.n8n.io/license-key/#license-key)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/license-key.md "Edit this page")

# License Key [\#](https://docs.n8n.io/license-key/#license-key "Permanent link")

To enable certain licensed features, you must first activate your license. You can do this either through the UI or by setting environment variables.

## Add a license key using the UI [\#](https://docs.n8n.io/license-key/#add-a-license-key-using-the-ui "Permanent link")

In your n8n instance:

1. Log in as **Admin** or **Owner**.
2. Select **Settings** \> **Usage and plan**.
3. Select **Enter activation key**.
4. Paste in your license key.
5. Select **Activate**.

## Add a license key using an environment variables [\#](https://docs.n8n.io/license-key/#add-a-license-key-using-an-environment-variables "Permanent link")

In your n8n configuration, set `N8N_LICENSE_ACTIVATION_KEY` to your license key. If the instance already has an activated license, this variable will have no effect.

Refer to [Environment variables](https://docs.n8n.io/hosting/configuration/configuration-methods/) to learn more about configuring n8n.

## Allowlist the license server IP addresses [\#](https://docs.n8n.io/license-key/#allowlist-the-license-server-ip-addresses "Permanent link")

n8n uses Cloudflare to host the license server. As the specific IP addresses can change, you need to allowlist the [full range of Cloudflare IP addresses](https://www.cloudflare.com/ips/) to ensure n8n can always reach the license server.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=296056515.1744299856&gtm=45je5490h2v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509683~102788824~102803279~102813109~102887799~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=1278460946)

[iframe](about:blank)

## Custom Variables in n8n

[Skip to content](https://docs.n8n.io/code/variables/#custom-variables)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/code/variables.md "Edit this page")

# Custom variables [\#](https://docs.n8n.io/code/variables/#custom-variables "Permanent link")

Feature availability

- Available on Self-hosted Enterprise and Pro Cloud plans.
- You need access to the n8n instance owner account to create and edit variables. All users can use existing variables.

Available in version 0.225.0 and above.

Custom variables are read-only variables that you can use to store and reuse values in n8n workflows.

Variables are shared

When you create a variable, it's available to everyone on your n8n instance.

## Create variables [\#](https://docs.n8n.io/code/variables/#create-variables "Permanent link")

To create a new variable:

1. On the **Variables** page, select **Add Variable**.
2. Enter a **Key** and **Value**. The maximum key length is 50 characters, and the maximum value length is 220 characters. n8n limits the characters you can use in the key and value to lowercase and uppercase letters, numbers, and underscores ( `A-Z`, `a-z`, `0-9`, `_`).
3. Select **Save**. The variable is now available for use in all workflows in the n8n instance.

## Edit and delete variables [\#](https://docs.n8n.io/code/variables/#edit-and-delete-variables "Permanent link")

To edit or delete a variable:

1. On the **Variables** page, hover over the variable you want to change.
2. Select **Edit** or **Delete**.

## Use variables in workflows [\#](https://docs.n8n.io/code/variables/#use-variables-in-workflows "Permanent link")

You can access variables in the Code node and in [expressions](https://docs.n8n.io/glossary/#expression-n8n):

|                  |                                                         |
| ---------------- | ------------------------------------------------------- |
| `<br>1<br>2<br>` | `<br>// Access a variable<br>$vars.<variable-name><br>` |

All variables are strings.

During workflow execution, n8n replaces the variables with the variable value. If the variable has no value, n8n treats its value as `undefined`. Workflows don't automatically fail in this case.

Variables are read-only. You must use the UI to change the values. If you need to set and access custom data within your workflow, use [Workflow static data](https://docs.n8n.io/code/cookbook/builtin/get-workflow-static-data/).

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Workflow Tags Management

[Skip to content](https://docs.n8n.io/workflows/tags/#tags)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/workflows/tags.md "Edit this page")

# Tags [\#](https://docs.n8n.io/workflows/tags/#tags "Permanent link")

Workflow tags allow you to label your workflows. You can then filter workflows by tag.

Tags are global. This means when you create a tag, it's available to all users on your n8n instance.

## Add a tag to a workflow [\#](https://docs.n8n.io/workflows/tags/#add-a-tag-to-a-workflow "Permanent link")

To add a tag to your workflow:

1. In your workflow, select **\+ Add tag**.
2. Select an existing tag, or enter a new tag name.
3. Once you select a tag and click away from the tag modal, n8n displays the tag next to the workflow name.

You can add more than one tag.

## Filter by tag [\#](https://docs.n8n.io/workflows/tags/#filter-by-tag "Permanent link")

When browsing the workflows on your instance, you can filter by tag.

1. On the **Workflows** page, select **Filters**.
2. Select **Tags**.
3. Select the tag or tags you want to filter by. n8n lists the workflows with that tag.

## Manage tags [\#](https://docs.n8n.io/workflows/tags/#manage-tags "Permanent link")

You can edit existing tags. Instance owners can delete tags.

1. Select **Manage tags**. This is available from **Filters** \> **Tags** on the **Workflows** page, or in the **\+ Add tag** modal in your workflow.
2. Hover over the tag you want to change.
3. Select **Edit**![Add node icon](https://docs.n8n.io/_images/common-icons/edit.png) to rename it, or **Delete**![Add node icon](https://docs.n8n.io/_images/common-icons/delete.png) to delete it.

Global tags

Tags are global. If you edit or delete a tag, this affects all users of your n8n instance.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Release Notes

[Skip to content](https://docs.n8n.io/release-notes/#release-notes)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/release-notes.md "Edit this page")

# Release notes [\#](https://docs.n8n.io/release-notes/#release-notes "Permanent link")

New features and bug fixes for n8n.

You can also view the [Releases](https://github.com/n8n-io/n8n/releases) in the GitHub repository.

Latest and Next versions

n8n releases a new minor version most weeks. The `latest` version is for production use. `next` is the most recent release. You should treat `next` as a beta: it may be unstable. To report issues, use the [forum](https://community.n8n.io/c/questions/12).

Current `latest`: 1.86.1

Current `next`: 1.88.0

## How to update n8n [\#](https://docs.n8n.io/release-notes/#how-to-update-n8n "Permanent link")

The steps to update your n8n depend on which n8n platform you use. Refer to the documentation for your n8n:

- [Cloud](https://docs.n8n.io/manage-cloud/update-cloud-version/)
- Self-hosted options:
  - [npm](https://docs.n8n.io/hosting/installation/npm/)
  - [Docker](https://docs.n8n.io/hosting/installation/docker/)

## Semantic versioning in n8n [\#](https://docs.n8n.io/release-notes/#semantic-versioning-in-n8n "Permanent link")

n8n uses [semantic versioning](https://semver.org/). All version numbers are in the format `MAJOR.MINOR.PATCH`. Version numbers increment as follows:

- MAJOR version when making incompatible changes which can require user action.
- MINOR version when adding functionality in a backward-compatible manner.
- PATCH version when making backward-compatible bug fixes.

Older versions

You can find the release notes for older versions of n8n [here](https://docs.n8n.io/release-notes/0-x/)

## n8n@1.88.0 [\#](https://docs.n8n.io/release-notes/#n8n1880 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.87.0...n8n@1.88.0) for this version.

**Release date:** 2025-04-10

Next version

This is the `next` version. n8n recommends using the `latest` version. The `next` version may be unstable. To report issues, use the [forum](https://community.n8n.io/c/questions/12).

This release contains new features, new nodes, performance improvements, and bug fixes.

### Model Context Protocol (MCP) nodes [\#](https://docs.n8n.io/release-notes/#model-context-protocol-mcp-nodes "Permanent link")

MCP aims to standardise how LLMs like Claude, ChatGPT, or Cursor can interact with tools or integrate data for their agents. Many providers - both established or new - are adopting MCP as a standard way to build agentic systems. It is an easy way to either expose your own app as a server, making capabilities available to a model as tools, or as a client that can call on tools outside of your own system.

While it’s still early in the development process, we want to give you access to our new MCP nodes. This will help us understand your requirements better and will also let us converge on a great general solution quicker.

We are adding two new nodes:

- a MCP [Server Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/) for any workflow
- a MCP [Client Tool](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolmcp/) for the AI Agent

The MCP Server Trigger turns n8n into an MCP server, providing n8n tools to models running outside of n8n. You can run multiple MCP servers from your n8n instance. The MCP Client Tool connects LLMs - and other intelligent agents - to any MCP-enabled service through a single interface.

Max from our DevRel team created an official walkthrough for you to get started:

[![Studio](https://docs.n8n.io/_images/release-notes/MCP-YouTube-thumb.jpg)](https://youtu.be/45WPU7P-1QQ?feature=shared)

[Studio Update #04](https://youtu.be/45WPU7P-1QQ?feature=shared)

### MCP Server Trigger [\#](https://docs.n8n.io/release-notes/#mcp-server-trigger "Permanent link")

The MCP Server Trigger turns n8n into an MCP server, providing n8n tools to models running outside of n8n. The node acts as an entry point into n8n for MCP clients. It operates by exposing a URL that MCP clients can interact with to access n8n tools. This means your n8n workflows and integrations are now available to models run elsewhere. Pretty neat.

[![MCP Server Trigger](https://docs.n8n.io/_images/release-notes/MCP-Server-Trigger.png)](https://docs.n8n.io/_images/release-notes/MCP-Server-Trigger.png) MCP Server Trigger

[Explore the MCP Server Trigger docs](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/)

### MCP Client Tool [\#](https://docs.n8n.io/release-notes/#mcp-client-tool "Permanent link")

The MCP Client Tool node is a MCP client, allowing you to use the tools exposed by an external MCP server. You can connect the MCP Client Tool node to your models to call external tools with n8n agents. In this regard it is similar to using a n8n tool with your AI agent. One advantage is that the MCP Client Tool can access multiple tools on the MCP server at once, keeping your canvas cleaner and easier to understand.

[![MCP Client Tool](https://docs.n8n.io/_images/release-notes/MCP-Client-Tool.png)](https://docs.n8n.io/_images/release-notes/MCP-Client-Tool.png) MCP Client Tools

[Explore the MCP Client Tool docs](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolmcp/)

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates "Permanent link")

- Added a node for Azure Cosmos DB
- Added a node for Milvus Vector Store
- Updated the Email Trigger (IMAP) node

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors "Permanent link")

[adina-hub](https://github.com/adina-hub)

[umanamente](https://github.com/umanamente)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.87.2 [\#](https://docs.n8n.io/release-notes/#n8n1872 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.87.1...n8n@1.87.2) for this version.

**Release date:** 2025-04-09

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.86.1 [\#](https://docs.n8n.io/release-notes/#n8n1861 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.86.0...n8n@1.86.1) for this version.

**Release date:** 2025-04-09

Latest version

This is the `latest` version. n8n recommends using the `latest` version. The `next` version may be unstable. To report issues, use the [forum](https://community.n8n.io/c/questions/12).

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.87.1 [\#](https://docs.n8n.io/release-notes/#n8n1871 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.87.0...n8n@1.87.1) for this version.

**Release date:** 2025-04-08

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.87.0 [\#](https://docs.n8n.io/release-notes/#n8n1870 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.86.0...n8n@1.87.0) for this version.

**Release date:** 2025-04-07

This release contains new nodes, node updates, API updates, core updates, editor updates, and bug fixes.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_1 "Permanent link")

[cesars-gh](https://github.com/cesars-gh)

[Stamsy](https://github.com/Stamsy)

[Pash10g](https://github.com/Pash10g)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.86.0 [\#](https://docs.n8n.io/release-notes/#n8n1860 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.85.0...n8n@1.86.0) for this version.

**Release date:** 2025-03-31

This release contains API updates, core updates, editor improvements, node updates, and bug fixes.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_2 "Permanent link")

[Aijeyomah](https://github.com/Aijeyomah)

[ownerer](https://github.com/ownerer)

[ulevitsky](https://github.com/ulevitsky)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.85.4 [\#](https://docs.n8n.io/release-notes/#n8n1854 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.85.3...n8n@1.85.4) for this version.

**Release date:** 2025-03-27

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.84.3 [\#](https://docs.n8n.io/release-notes/#n8n1843 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.84.2...n8n@1.84.3) for this version.

**Release date:** 2025-03-27

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.84.2 [\#](https://docs.n8n.io/release-notes/#n8n1842 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.84.1...n8n@1.84.2) for this version.

**Release date:** 2025-03-26

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.85.3 [\#](https://docs.n8n.io/release-notes/#n8n1853 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.85.2...n8n@1.85.3) for this version.

**Release date:** 2025-03-26

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.85.2 [\#](https://docs.n8n.io/release-notes/#n8n1852 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.85.1...n8n@1.85.2) for this version.

**Release date:** 2025-03-25

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.85.1 [\#](https://docs.n8n.io/release-notes/#n8n1851 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.85.0...n8n@1.85.1) for this version.

**Release date:** 2025-03-25

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.85.0 [\#](https://docs.n8n.io/release-notes/#n8n1850 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.84.0...n8n@1.85.0) for this version.

**Release date:** 2025-03-24

This release contains a new node, a new credential, core updates, editor updates, node updates, and bug fixes.

### Folders [\#](https://docs.n8n.io/release-notes/#folders "Permanent link")

What can we say about folders? Well, they’re super handy for categorizing just about everything and they’re finally available for your n8n workflows. Tidy up your workspace with unlimited folders and nested folders. Search for workflows within folders. It’s one of the ways we’re making it easier to organize your n8n instances more effectively.

**How to use it:**

Create and manage folders within your personal space or within projects. You can also create workflows from within a folder. You may need to restart your instance in order to activate folders.

[![Folders](https://docs.n8n.io/_images/release-notes/Folders.png)](https://docs.n8n.io/_images/release-notes/Folders.png) It's a folder alright

Folders are available for all [registered](https://docs.n8n.io/hosting/community-edition-features/#registered-community-edition) users so get started with decluttering your workspace now and look for more features (like drag and drop) to organize your instances soon.

### Enhancements to Form Trigger Node [\#](https://docs.n8n.io/release-notes/#enhancements-to-form-trigger-node "Permanent link")

Recent updates to the Form Trigger node have made it a more powerful tool for building business solutions. These enhancements provide more flexibility and customization, enabling teams to create visually engaging and highly functional workflows with forms.

- **HTML customization:** Add custom HTML to forms, including embedded images and videos, for richer user experiences.
- **Custom CSS support**: Apply custom styles to user-facing components to align forms with your brand’s look and feel. Adjust fonts, colors, and spacing for a seamless visual identity.
- **Form previews:** Your form’s description and title will pull into previews of your form when sharing on social media or messaging apps, providing a more polished look.
- **Hidden fields:** Use query parameters to add hidden fields, allowing you to pass data—such as a referral source—without exposing it to the user.
- **New responses options:** Respond to user submissions in multiple ways including text, HTML, or a downloadable file (binary format). This enables forms to display rich webpages or deliver digital assets such as dynamically generated invoices or personalized certificates.

[![Form with custom CSS applied](https://docs.n8n.io/_images/release-notes/Forms_with_custom_CSS_and_HTML.png)](https://docs.n8n.io/_images/release-notes/Forms_with_custom_CSS_and_HTML.png) Form with custom CSS applied

These improvements elevate the Form Trigger node beyond a simple workflow trigger, transforming it into a powerful tool for addressing use cases from data collection and order processing to custom content creation.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_3 "Permanent link")

[Fank](https://github.com/Fank)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.84.1 [\#](https://docs.n8n.io/release-notes/#n8n1841 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.84.0...n8n@1.84.1) for this version.

**Release date:** 2025-03-18

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.84.0 [\#](https://docs.n8n.io/release-notes/#n8n1840 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.83.0...n8n@1.84.0) for this version.

**Release date:** 2025-03-17

This release contains a new node, node updates, editor updates, and bug fixes.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_4 "Permanent link")

[Pash10g](https://github.com/Pash10g)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.83.2 [\#](https://docs.n8n.io/release-notes/#n8n1832 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.83.1...n8n@1.83.2) for this version.

**Release date:** 2025-03-14

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.82.4 [\#](https://docs.n8n.io/release-notes/#n8n1824 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.82.3...n8n@1.82.4) for this version.

**Release date:** 2025-03-14

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.82.3 [\#](https://docs.n8n.io/release-notes/#n8n1823 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.82.2...n8n@1.82.3) for this version.

**Release date:** 2025-03-13

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.83.1 [\#](https://docs.n8n.io/release-notes/#n8n1831 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.83.0...n8n@1.83.1) for this version.

**Release date:** 2025-03-12

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.83.0 [\#](https://docs.n8n.io/release-notes/#n8n1830 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.82.0...n8n@1.83.0) for this version.

**Release date:** 2025-03-12

This release contains bug fixes and an editor update.

### Schema Preview [\#](https://docs.n8n.io/release-notes/#schema-preview "Permanent link")

Schema Preview lets you view and work with a node’s expected output without executing it or adding credentials, keeping you in flow while building.

- **See expected node outputs instantly.** View schemas for over 100+ nodes to help you design workflows efficiently without extra steps.
- **Define workflow logic first, take care of credentials later.** Build your end-to-end workflow without getting sidetracked by credential setup.
- **Avoid unwanted executions when building.** Prevent unnecessary API calls, unwanted data changes, or potential third-party service costs by viewing outputs without executing nodes.

**How to use it:**

- Add a node with Schema Preview support to your workflow.
- Open the next node in the sequence - Schema Preview data appears in the Node Editor where you would typically find it in the Schema View.
- Use Schema Preview fields just like other schema data - drag and drop them into parameters and settings as needed.

Don’t forget to add the required credentials before putting your workflow into production.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_5 "Permanent link")

[pemontto](https://github.com/pemontto)

[Haru922](https://github.com/Haru922)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.82.2 [\#](https://docs.n8n.io/release-notes/#n8n1822 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.82.1...n8n@1.82.2) for this version.

**Release date:** 2025-03-12

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.82.1 [\#](https://docs.n8n.io/release-notes/#n8n1821 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.82.0...n8n@1.82.1) for this version.

**Release date:** 2025-03-04

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.82.0 [\#](https://docs.n8n.io/release-notes/#n8n1820 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.81.0...n8n@1.82.0) for this version.

**Release date:** 2025-03-03

This release contains core updates, editor updates, new nodes, node updates, new credentials, credential updates, and bug fixes.

### Tidy up [\#](https://docs.n8n.io/release-notes/#tidy-up "Permanent link")

Tidy up instantly aligns nodes, centers stickies, untangles connections, and brings structure to your workflows. Whether you're preparing to share a workflow or just want to improve readability, this feature saves you time and makes your logic easier to follow. Clean, well-organized workflows aren't just nicer to look at—they’re also quicker to understand.

**How to:**

Open the workflow you want to tidy, then choose one of these options:

- Click the **Tidy up** button in the bottom-left corner of the canvas (it looks like a broom 🧹)
- Press **Shift + Alt + T** on your keyboard
- Right-click anywhere on the canvas and select **Tidy up workflow**

Want to tidy up just part of your workflow? Select the specific nodes you want to clean up first - Tidy up will only adjust those, along with any stickies behind them.

### Multiple API keys [\#](https://docs.n8n.io/release-notes/#multiple-api-keys "Permanent link")

n8n now supports multiple API keys, allowing users to generate and manage separate keys for different workflows or integrations. This improves security by enabling easier key rotation and isolation of credentials. Future updates will introduce more granular controls.

[![Multiple API keys](https://docs.n8n.io/_images/release-notes/Multiple-API-keys.png)](https://docs.n8n.io/_images/release-notes/Multiple-API-keys.png) Multiple API keys

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_6 "Permanent link")

[Rostammahabadi](https://github.com/Rostammahabadi)

[Lanhild](https://github.com/Lanhild)

[matthiez](https://github.com/matthiez)

[feelgood-interface](https://github.com/feelgood-interface)

[adina-hub](https://github.com/adina-hub)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.81.4 [\#](https://docs.n8n.io/release-notes/#n8n1814 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.81.3...n8n@1.81.4) for this version.

**Release date:** 2025-03-03

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.81.3 [\#](https://docs.n8n.io/release-notes/#n8n1813 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.81.2...n8n@1.81.3) for this version.

**Release date:** 2025-03-03

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.81.2 [\#](https://docs.n8n.io/release-notes/#n8n1812 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.81.1...n8n@1.81.2) for this version.

**Release date:** 2025-02-28

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.80.5 [\#](https://docs.n8n.io/release-notes/#n8n1805 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.80.4...n8n@1.80.5) for this version.

**Release date:** 2025-02-28

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.80.4 [\#](https://docs.n8n.io/release-notes/#n8n1804 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.80.3...n8n@1.80.4) for this version.

**Release date:** 2025-02-27

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.81.1 [\#](https://docs.n8n.io/release-notes/#n8n1811 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.81.0...n8n@1.81.1) for this version.

**Release date:** 2025-02-27

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.81.0 [\#](https://docs.n8n.io/release-notes/#n8n1810 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.80.0...n8n@1.81.0) for this version.

**Release date:** 2025-02-24

This release contains bug fixes, a core update, editor improvements, and a node update.

### Improved partial executions [\#](https://docs.n8n.io/release-notes/#improved-partial-executions "Permanent link")

The new execution engine for partial executions ensures that testing parts of a workflow in the builder closely mirrors production behaviour. This makes iterating with updated run-data faster and more reliable, particularly for complex workflows.

Before, user would test parts of a workflow in the builder that didn't consistently reflect production behaviour, leading to unexpected results during development.

This update aligns workflow execution in the builder with production behavior.

Here is an example for loops:

Before

After

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.80.3 [\#](https://docs.n8n.io/release-notes/#n8n1803 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.80.2...n8n@1.80.3) for this version.

**Release date:** 2025-02-21

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.79.4 [\#](https://docs.n8n.io/release-notes/#n8n1794 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.79.3...n8n@1.79.4) for this version.

**Release date:** 2025-02-21

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.80.2 [\#](https://docs.n8n.io/release-notes/#n8n1802 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.80.1...n8n@1.80.2) for this version.

**Release date:** 2025-02-21

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.79.3 [\#](https://docs.n8n.io/release-notes/#n8n1793 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.79.2...n8n@1.79.3) for this version.

**Release date:** 2025-02-21

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.80.1 [\#](https://docs.n8n.io/release-notes/#n8n1801 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.80.0...n8n@1.80.1) for this version.

**Release date:** 2025-02-20

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.79.2 [\#](https://docs.n8n.io/release-notes/#n8n1792 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.79.1...n8n@1.79.2) for this version.

**Release date:** 2025-02-20

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.80.0 [\#](https://docs.n8n.io/release-notes/#n8n1800 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.79.0...n8n@1.80.0) for this version.

**Release date:** 2025-02-17

This release contains bug fixes and an editor improvement.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.75.3 [\#](https://docs.n8n.io/release-notes/#n8n1753 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.75.2...n8n@1.75.3) for this version.

**Release date:** 2025-02-17

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.74.4 [\#](https://docs.n8n.io/release-notes/#n8n1744 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.74.3...n8n@1.74.4) for this version.

**Release date:** 2025-02-17

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.79.1 [\#](https://docs.n8n.io/release-notes/#n8n1791 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.79.0...n8n@1.79.1) for this version.

**Release date:** 2025-02-15

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.78.1 [\#](https://docs.n8n.io/release-notes/#n8n1781 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.78.0...n8n@1.78.1) for this version.

**Release date:** 2025-02-15

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.77.4 [\#](https://docs.n8n.io/release-notes/#n8n1774 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.77.3...n8n@1.77.4) for this version.

**Release date:** 2025-02-15

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.76.4 [\#](https://docs.n8n.io/release-notes/#n8n1764 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.76.3...n8n@1.76.4) for this version.

**Release date:** 2025-02-15

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.79.0 [\#](https://docs.n8n.io/release-notes/#n8n1790 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.77.0...n8n@1.78.0) for this version.

**Release date:** 2025-02-12

This release contains new features, node updates, and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.77.3 [\#](https://docs.n8n.io/release-notes/#n8n1773 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.77.2...n8n@1.77.3) for this version.

**Release date:** 2025-02-06

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.78.0 [\#](https://docs.n8n.io/release-notes/#n8n1780 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.77.0...n8n@1.78.0) for this version.

**Release date:** 2025-02-05

This release contains new features, node updates, and bug fixes.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_7 "Permanent link")

[mocanew](https://github.com/mocanew)

[Timtendo12](https://github.com/Timtendo12)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.77.2 [\#](https://docs.n8n.io/release-notes/#n8n1772 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.77.1...n8n@1.77.2) for this version.

**Release date:** 2025-02-04

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.76.3 [\#](https://docs.n8n.io/release-notes/#n8n1763 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.76.2...n8n@1.76.3) for this version.

**Release date:** 2025-02-04

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.77.1 [\#](https://docs.n8n.io/release-notes/#n8n1771 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.77.0...n8n@1.77.1) for this version.

**Release date:** 2025-02-03

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.76.2 [\#](https://docs.n8n.io/release-notes/#n8n1762 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.76.1...n8n@1.76.2) for this version.

**Release date:** 2025-02-03

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.77.0 [\#](https://docs.n8n.io/release-notes/#n8n1770 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.76.0...n8n@1.77.0) for this version.

**Release date:** 2025-01-29

This release contains new features, editor updates, new nodes, new credentials, node updates, and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.76.1 [\#](https://docs.n8n.io/release-notes/#n8n1761 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.76.0...n8n@1.76.1) for this version.

**Release date:** 2025-01-23

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.76.0 [\#](https://docs.n8n.io/release-notes/#n8n1760 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.75.0...n8n@1.76.0) for this version.

**Release date:** 2025-01-22

This release contains new features, editor updates, new credentials, node improvements, and bug fixes.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_8 "Permanent link")

[Stamsy](https://github.com/Stamsy)

[GKdeVries](https://github.com/GKdeVries)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.75.2 [\#](https://docs.n8n.io/release-notes/#n8n1752 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.75.1...n8n@1.75.2) for this version.

**Release date:** 2025-01-17

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.74.3 [\#](https://docs.n8n.io/release-notes/#n8n1743 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.74.2...n8n@1.74.3) for this version.

**Release date:** 2025-01-17

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.75.1 [\#](https://docs.n8n.io/release-notes/#n8n1751 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.75.0...n8n@1.75.1) for this version.

**Release date:** 2025-01-17

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.74.2 [\#](https://docs.n8n.io/release-notes/#n8n1742 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.74.1...n8n@1.74.2) for this version.

**Release date:** 2025-01-17

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.75.0 [\#](https://docs.n8n.io/release-notes/#n8n1750 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.74.0...n8n@1.75.0) for this version.

**Release date:** 2025-01-15

This release contains bug fixes and editor updates.

### Improved consistency across environments [\#](https://docs.n8n.io/release-notes/#improved-consistency-across-environments "Permanent link")

We added new UX and automatic changes improvements resulting in a better consistency between your staging and production instances.

Previously, users faced issues like:

- Lack of visibility into required credential updates when pulling changes
- Incomplete synchronization, where changes — such as deletions — weren’t always applied across environments
- Confusing commit process, making it unclear what was being pushed or pulled

We addressed these by:

- Clearly indicating required credential updates when pulling changes
- Ensuring deletions and other modifications sync correctly across environments
- Improving commit selection to provide better visibility into what’s being pushed

[![Commit modal](https://docs.n8n.io/_images/release-notes/Commit-modal.png)](https://docs.n8n.io/_images/release-notes/Commit-modal.png) Commit modal

[![Pull notification](https://docs.n8n.io/_images/release-notes/Pull-notification.png)](https://docs.n8n.io/_images/release-notes/Pull-notification.png) Pull notification

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.74.1 [\#](https://docs.n8n.io/release-notes/#n8n1741 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.74.0...n8n@1.74.1) for this version.

**Release date:** 2025-01-09

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.74.0 [\#](https://docs.n8n.io/release-notes/#n8n1740 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.73.0...n8n@1.74.0) for this version.

**Release date:** 2025-01-08

This release contains new features, a new node, node updates, performance improvements and bug fixes.

### Overhauled Code node editing experience [\#](https://docs.n8n.io/release-notes/#overhauled-code-node-editing-experience "Permanent link")

We added a ton of new helpers to the Code node, making edits of your code much faster and more comfortable. You get:

- TypeScript autocomplete
- TypeScript linting
- TypeScript hover tips
- Search and replace
- New keyboard shortcuts based on the VSCode keymap
- Auto-formatting using prettier (Alt+Shift+F)
- Remember folded regions and history after refresh
- Multi cursor
- Type function in the Code node using JSDoc types
- Drag and drop for all Code node modes
- Indentation markers

We build this on a web worker architecture so you won't have to suffer from performance degradation while typing.

To get the full picture, check out our Studio update with Max and Elias, where they discuss and demo the new editing experience. 👇

[![Studio](https://docs.n8n.io/_images/release-notes/The_Studio_thumbnail_Code_node.jpg)](https://youtu.be/De1E58MPaMQ?t=645)

[Studio Update #04](https://youtu.be/De1E58MPaMQ?t=645)

### New node: Microsoft Entra ID [\#](https://docs.n8n.io/release-notes/#new-node-microsoft-entra-id "Permanent link")

Microsoft Entra ID (formerly known as Microsoft Azure Active Directory or Azure AD) is used for cloud-based identity and access management. [The new node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.microsoftentra/) supports a wide range of Microsoft Entra ID features, which includes creating, getting, updating, and deleting users and groups, as well as adding users to and removing them from groups.

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_1 "Permanent link")

- [AI Agent](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/): Vector stores can now be directly used as tools for the agent
- [Code](https://docs.n8n.io/code/builtin/overview/): Tons of new speed and convenience features, see above for details
- [Google Vertex Chat](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatgooglevertex/): Added option to specify the GCP region for the Google API credentials
- [HighLevel](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.highlevel/): Added support for calendar items

We also added a custom [projects](https://docs.n8n.io/user-management/rbac/projects/) icon selector on top of the available emojis. Pretty!

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_9 "Permanent link")

[igatanasov](https://github.com/igatanasov)

[Stamsy](https://github.com/Stamsy)

[feelgood-interface](https://github.com/feelgood-interface)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.73.1 [\#](https://docs.n8n.io/release-notes/#n8n1731 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.73.0...n8n@1.73.1) for this version.

**Release date:** 2024-12-19

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.73.0 [\#](https://docs.n8n.io/release-notes/#n8n1730 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.72.0...n8n@1.73.0) for this version.

**Release date:** 2024-12-19

This release contains node updates, performance improvements, and bug fixes.

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_2 "Permanent link")

- [AI Agent](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/): Updated descriptions for Chat Trigger options
- [Facebook Graph API](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.facebookgraphapi/): Updated for API v21.0
- [Gmail](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.gmail/): Added two new options for the `Send and wait` operation, free text and custom form
- [Linear Trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.lineartrigger/): Added support for admin scope
- [MailerLite](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.mailerlite/): Now supports the new API
- [Slack](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.slack/): Added two new options for the `Send and wait` operation, free text and custom form

We also added credential support for [SolarWinds IPAM](https://docs.n8n.io/integrations/builtin/credentials/solarwindsipam/) and [SolarWinds Observability](https://docs.n8n.io/integrations/builtin/credentials/solarwindsobservability/).

Last, but not least, we [improved the schema view performance in the node details view by 90%](https://github.com/n8n-io/n8n/pull/12180) and added drag and drop re-ordering to parameters. This comes in very handy in the [If](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.if/) or [Edit Fields](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.set/) nodes.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_10 "Permanent link")

[CodeShakingSheep](https://github.com/CodeShakingSheep)

[mickaelandrieu](https://github.com/mickaelandrieu)

[Stamsy](https://github.com/Stamsy)

[pbdco](https://github.com/pbdco)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.72.1 [\#](https://docs.n8n.io/release-notes/#n8n1721 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.72.0...n8n@1.72.1) for this version.

**Release date:** 2024-12-12

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.71.3 [\#](https://docs.n8n.io/release-notes/#n8n1713 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.71.2...n8n@1.71.3) for this version.

**Release date:** 2024-12-12

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.72.0 [\#](https://docs.n8n.io/release-notes/#n8n1720 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.71.0...n8n@1.72.0) for this version.

**Release date:** 2024-12-11

This release contains node updates, usability improvements, and bug fixes.

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_3 "Permanent link")

- [AI Transform](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.aitransform/): The `maximum context length` error now retries with reduced payload size
- [Redis](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.redis/): Added support for `continue on fail`

### Improved commit modal [\#](https://docs.n8n.io/release-notes/#improved-commit-modal "Permanent link")

We added filters and text search to the commit modal when working with [Environments](https://docs.n8n.io/source-control-environments/). This will make committing easier as we provide more information and better visibility. Environments are available on the Enterprise plan.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.71.2 [\#](https://docs.n8n.io/release-notes/#n8n1712 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.71.1...n8n@1.71.2) for this version.

**Release date:** 2024-12-10

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.70.4 [\#](https://docs.n8n.io/release-notes/#n8n1704 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.70.3...n8n@1.70.4) for this version.

**Release date:** 2024-12-10

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.71.1 [\#](https://docs.n8n.io/release-notes/#n8n1711 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.71.0...n8n@1.71.1) for this version.

**Release date:** 2024-12-06

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.70.3 [\#](https://docs.n8n.io/release-notes/#n8n1703 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.70.2...n8n@1.70.3) for this version.

**Release date:** 2024-12-05

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.71.0 [\#](https://docs.n8n.io/release-notes/#n8n1710 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.70.2...n8n@1.71.0) for this version.

**Release date:** 2024-12-04

This release contains node updates, performance improvements, and bug fixes.

### Task runners for the Code node in public beta [\#](https://docs.n8n.io/release-notes/#task-runners-for-the-code-node-in-public-beta "Permanent link")

We're introducing a significant performance upgrade to the Code node with our new Task runner system. This enhancement moves JavaScript code execution to a separate process, improving your workflow execution speed while adding better isolation.

[![Task runners overview](https://docs.n8n.io/_images/hosting/configuration/task-runner-concept.png)](https://docs.n8n.io/_images/hosting/configuration/task-runner-concept.png) Task runners overview

Our benchmarks show up to 6x improvement in workflow executions using Code nodes - from approximately 6 to 35 executions per second. All these improvements happen under the hood, keeping your Code node experience exactly the same.

The Task runner comes in two modes:

- Internal mode (default): Perfect for getting started, automatically managing task runners as child processes
- External mode: For advanced hosting scenarios requiring maximum isolation and security

Currently, this feature is opt-in and can be enabled using [environment variables](https://docs.n8n.io/hosting/configuration/environment-variables/task-runners/). Once stable, it will become the default execution method for Code nodes.

To start using Task runners today, [check out the docs](https://docs.n8n.io/hosting/configuration/task-runners/).

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_4 "Permanent link")

- [AI Transform node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.aitransform/): We improved the prompt for code generation to transform data
- [Code node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code/): We added a warning if `pairedItem` is absent or could not be auto mapped

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.70.2 [\#](https://docs.n8n.io/release-notes/#n8n1702 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.70.1...n8n@1.70.2) for this version.

**Release date:** 2024-12-04

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.70.1 [\#](https://docs.n8n.io/release-notes/#n8n1701 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.70.0...n8n@1.70.1) for this version.

**Release date:** 2024-11-29

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.70.0 [\#](https://docs.n8n.io/release-notes/#n8n1700 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.69.0...n8n@1.70.0) for this version.

**Release date:** 2024-11-27

This release contains node updates, performance improvements and bug fixes.

### New canvas in beta [\#](https://docs.n8n.io/release-notes/#new-canvas-in-beta "Permanent link")

The new canvas is now the default setting for all users. It should bring significant performance improvements and adds a handy minimap. As it is still a beta version you can still revert to the previous version with the three dot menu.

We're looking forward to your feedback. Should you encounter a bug, you will find a handy button to create an issue at the bottom of the new canvas as well.

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_5 "Permanent link")

- We added credential support for [Zabbix](https://docs.n8n.io/integrations/builtin/credentials/zabbix/) to the HTTP request node
- We added new OAuth2 credentials for [Microsoft SharePoint](https://docs.n8n.io/integrations/builtin/credentials/microsoft/)
- The [Slack node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.slack/#operations) now uses markdown for the approval message when using the `Send and Wait for Approval` operation

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_11 "Permanent link")

[feelgood-interface](https://github.com/feelgood-interface)

[adina-hub](https://github.com/adina-hub)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.68.1 [\#](https://docs.n8n.io/release-notes/#n8n1681 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.68.0...n8n@1.68.1) for this version.

**Release date:** 2024-11-26

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.69.2 [\#](https://docs.n8n.io/release-notes/#n8n1692 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.69.1...n8n@1.69.2) for this version.

**Release date:** 2024-11-26

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.69.1 [\#](https://docs.n8n.io/release-notes/#n8n1691 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.69.0...n8n@1.69.1) for this version.

**Release date:** 2024-11-25

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.69.0 [\#](https://docs.n8n.io/release-notes/#n8n1690 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.68.0...n8n@1.69.0) for this version.

**Release date:** 2024-11-20

This release contains a new feature, node improvements and bug fixes.

### Sub-workflow debugging [\#](https://docs.n8n.io/release-notes/#sub-workflow-debugging "Permanent link")

We made it much easier to debug sub-workflows by improving their accessibility from the parent workflow.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.68.0 [\#](https://docs.n8n.io/release-notes/#n8n1680 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.67.1...n8n@1.68.0) for this version.

**Release date:** 2024-11-13

This release contains node updates, performance improvements and many bug fixes.

#### New AI agent canvas chat [\#](https://docs.n8n.io/release-notes/#new-ai-agent-canvas-chat "Permanent link")

We revamped the chat experience for AI agents on the canvas. A neatly organized view instead of a modal hiding the nodes. You can now see the canvas, chat and logs at the same time when testing your workflow.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.67.1 [\#](https://docs.n8n.io/release-notes/#n8n1671 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.67.0...n8n@1.67.1) for this version.

**Release date:** 2024-11-07

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.67.0 [\#](https://docs.n8n.io/release-notes/#n8n1670 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.66.0...n8n@1.67.0) for this version.

**Release date:** 2024-11-06

This release contains node updates and bug fixes.

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_6 "Permanent link")

- [AI Transform](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.aitransform/): Improved usability
- [Anthropic Chat Model Node](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatanthropic/): Added Haiku 3.5 support
- [Convert to File](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.converttofile/): Added delimiter option for writing to CSV
- [Gmail Trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.gmailtrigger/): Added option to filter for draft messages
- [Intercom](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.intercom/): Credential can now be used in the HTTP Request node
- [Rapid7 InsightVM](https://docs.n8n.io/integrations/builtin/credentials/rapid7insightvm/): Added credential support

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.66.0 [\#](https://docs.n8n.io/release-notes/#n8n1660 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.65.2...n8n@1.66.0) for this version.

**Release date:** 2024-10-31

This release contains performance improvements, a node update and bug fixes.

### Node update [\#](https://docs.n8n.io/release-notes/#node-update "Permanent link")

- [Anthropic Chat Model](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatanthropic/): Added support for claude-3-5-sonnet-20241022

We made updates to how projects and workflow ownership are displayed making them easier to understand and navigate.

We further improved the performance logic of partial executions, leading to a smoother and more enjoyable building experience.

### New n8n canvas alpha [\#](https://docs.n8n.io/release-notes/#new-n8n-canvas-alpha "Permanent link")

We have enabled the alpha version of our new canvas. The canvas is the ‘drawing board’ of the n8n editor, and we’re working on a full rewrite. Your feedback and testing will help us improve it.
[Read all about it on our community forum](https://community.n8n.io/t/help-us-test-the-new-n8n-canvas-alpha/60070).

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.65.2 [\#](https://docs.n8n.io/release-notes/#n8n1652 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.65.1...n8n@1.65.2) for this version.

**Release date:** 2024-10-28

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.64.3 [\#](https://docs.n8n.io/release-notes/#n8n1643 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.64.2...n8n@1.64.3) for this version.

**Release date:** 2024-10-25

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.65.1 [\#](https://docs.n8n.io/release-notes/#n8n1651 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.65.0...n8n@1.65.1) for this version.

**Release date:** 2024-10-25

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.65.0 [\#](https://docs.n8n.io/release-notes/#n8n1650 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.64.1...n8n@1.65.0) for this version.

**Release date:** 2024-10-24

[Breaking change](https://github.com/n8n-io/n8n/blob/master/packages/cli/BREAKING-CHANGES.md)

What changed?
Queue polling via the environment variable `QUEUE_RECOVERY_INTERVAL` has been removed.

When is action necessary?
If you have set `QUEUE_RECOVERY_INTERVAL`, you can remove it as it no longer has any effect.

This release contains a new features, new nodes, node enhancements, and bug fixes.

### New node: n8n Form [\#](https://docs.n8n.io/release-notes/#new-node-n8n-form "Permanent link")

Use the [n8n Form node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.form/) to create user-facing forms with multiple pages. You can add other nodes with custom logic between to process user input. Start the workflow with a [n8n Form Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.formtrigger/).

[![A multi-page form with branching](https://docs.n8n.io/_images/integrations/builtin/core-nodes/n8n-nodes-base.form/example_image.png)](https://docs.n8n.io/_images/integrations/builtin/core-nodes/n8n-nodes-base.form/example_image.png) A multi-page form with branching

Additionally you can:

- Set default selections with query parameters
- Define the form with a JSON array of objects
- Show a completion screen and redirect to another URL

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_7 "Permanent link")

New nodes:

- [Google Business Profile](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googlebusinessprofile/) and [Google Business Profile Trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.googlebusinessprofiletrigger/): Use these to integrate Google Business Profile reviews and posts with your workflows

Enhanced nodes:

- [AI Agent](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/): Removed the requirement to add at least one tool
- [GitHub](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.github/): Added workflows as a resource operation
- [Structured Output Parser](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.outputparserstructured/): Added more user-friendly error messages

For additional security, we improved how we handle multi-factor authentication, hardened config file permissions and introduced JWT for the public API.

For better performance, we improved how partial executions are handled in loops.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_12 "Permanent link")

- [Idan Fishman](https://github.com/idanfishman)

## n8n@1.64.2 [\#](https://docs.n8n.io/release-notes/#n8n1642 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.64.1...n8n@1.64.2) for this version.

**Release date:** 2024-10-24

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.64.1 [\#](https://docs.n8n.io/release-notes/#n8n1641 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.64.0...n8n@1.64.1) for this version.

**Release date:** 2024-10-21

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.64.0 [\#](https://docs.n8n.io/release-notes/#n8n1640 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.63.4...n8n@1.64.0) for this version.

**Release date:** 2024-10-16

This release contains a new node, node enhancements, performance improvements and bug fixes.

### Enhanced node: Remove Duplicates [\#](https://docs.n8n.io/release-notes/#enhanced-node-remove-duplicates "Permanent link")

The [Remove Duplicates node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.removeduplicates/) got a major makeover with the addition of two new operations:

- Remove Items Processed in Previous Executions: Compare items in the current input to items from previous executions and remove duplicates
- Clear Deduplication History: Wipe the memory of items from previous executions.

This makes it easier to only process new items from any data source. For example, you can now more easily poll a Google sheet for new entries by `id` or remove duplicate orders from the same customer by comparing their `order date`. The great thing is, you can now do this within **and across** workflow runs.

### New node: Gong [\#](https://docs.n8n.io/release-notes/#new-node-gong "Permanent link")

The new node for [Gong](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.gong/) allows you to get users and calls to process them further in n8n. Very useful for sales related workflows.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_13 "Permanent link")

- [Sören Uhrbach](https://github.com/soerenuhrbach)

## n8n@1.63.4 [\#](https://docs.n8n.io/release-notes/#n8n1634 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.63.3...n8n@1.63.4) for this version.

**Release date:** 2024-10-15

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.62.6 [\#](https://docs.n8n.io/release-notes/#n8n1626 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.62.5...n8n@1.62.6) for this version.

**Release date:** 2024-10-15

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.63.3 [\#](https://docs.n8n.io/release-notes/#n8n1633 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.63.2...n8n@1.63.3) for this version.

**Release date:** 2024-10-15

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.63.2 [\#](https://docs.n8n.io/release-notes/#n8n1632 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.63.1...n8n@1.63.2) for this version.

**Release date:** 2024-10-11

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.62.5 [\#](https://docs.n8n.io/release-notes/#n8n1625 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.62.4...n8n@1.62.5) for this version.

**Release date:** 2024-10-11

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.63.1 [\#](https://docs.n8n.io/release-notes/#n8n1631 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.63.0...n8n@1.63.1) for this version.

**Release date:** 2024-10-11

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.62.4 [\#](https://docs.n8n.io/release-notes/#n8n1624 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.62.3...n8n@1.62.4) for this version.

**Release date:** 2024-10-11

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.63.0 [\#](https://docs.n8n.io/release-notes/#n8n1630 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.62.3...n8n@1.63.0) for this version.

**Release date:** 2024-10-09

[Breaking change](https://github.com/n8n-io/n8n/blob/master/packages/cli/BREAKING-CHANGES.md)

What changed?

- The worker server used to bind to IPv6 by default. It now binds to IPv4 by default.
- The worker server's `/healthz` used to report healthy status based on database and Redis checks. It now reports healthy status regardless of database and Redis status, and the database and Redis checks are part of `/healthz/readiness`.

When is action necessary?

- If you experience a port conflict error when starting a worker server using its default port, set a different port for the worker server with `QUEUE_HEALTH_CHECK_PORT`.
- If you are relying on database and Redis checks for worker health status, switch to checking `/healthz/readiness` instead of `/healthz`.

This release contains new features, node enhancements and bug fixes.

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_8 "Permanent link")

- [OpenAI](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-langchain.openai/): Added the option to choose between the default memory connector to provide memory to the assistant or to specify a thread ID
- [Gmail](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.gmail/) and [Slack](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.slack/): Added custom approval operations to have a human in the loop of a workflow

We have also optimized the [worker health checks](https://docs.n8n.io/hosting/logging-monitoring/monitoring/) (see breaking change above).

Each credential now has a seperate url you can link to. This makes sharing much easier.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_14 "Permanent link")

[Pemontto](https://github.com/pemontto)

## n8n@1.62.3 [\#](https://docs.n8n.io/release-notes/#n8n1623 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.62.2...n8n@1.62.3) for this version.

**Release date:** 2024-10-08

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.62.2 [\#](https://docs.n8n.io/release-notes/#n8n1622 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.62.1...n8n@1.62.2) for this version.

**Release date:** 2024-10-07

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.62.1 [\#](https://docs.n8n.io/release-notes/#n8n1621 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.61.0...n8n@1.62.1) for this version.

**Release date:** 2024-10-02

This release contains new features, node enhancements and bug fixes.

Skipped 1.62.0

We skipped 1.62.0 and went straight to 1.62.1 with an additional fix.

#### Additional nodes as tools [\#](https://docs.n8n.io/release-notes/#additional-nodes-as-tools "Permanent link")

We have made additional nodes usable with the [Tools AI Agent node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/tools-agent/).

Additionally, we have added a `$fromAI()` placeholder function to use with tools, allowing you to dynamically pass information from the models to the connected tools. This function works similarly to placeholders used elsewhere in n8n.

Both of these new features enable you to build even more powerful AI agents by drawing directly from the apps your business uses. This makes integrating LLMs into your business processes even easier than before.

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_9 "Permanent link")

- [Google BigQuery](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googlebigquery/): Added option to return numeric values as integers and not strings
- [HTTP Request](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/): Added credential support for Sysdig
- [Invoice Ninja](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.invoiceninja/): Additional query params for getAll requests
- [Question and Answer Chain](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainretrievalqa/): Added the option to use a custom prompt

Drag and drop insertion on cursor position from schema view is now also enabled for code, SQL and Html fields in nodes.

Customers with an enterprise license can now rate, tag and highlight execution data in the executions view. To use highlighting, add an [Execution Data Node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executiondata/) (or Code node) to the workflow to set [custom executions data](https://docs.n8n.io/workflows/executions/custom-executions-data/).

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_15 "Permanent link")

[Benjamin Roedell](https://github.com/benrobot)

[CodeShakingSheep](https://github.com/CodeShakingSheep)

[manuelbcd](https://github.com/manuelbcd)

[Miguel Prytoluk](https://github.com/mprytoluk)

## n8n@1.61.0 [\#](https://docs.n8n.io/release-notes/#n8n1610 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.60.1...n8n@1.61.0) for this version.

**Release date:** 2024-09-25

This release contains new features, node enhancements and bug fixes.

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_10 "Permanent link")

- [Brandfetch](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.brandfetch/): Updated to use the new API
- [Slack](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.slack/): Made adding or removing the workflow link to a message easier

Big datasets now render faster thanks to virtual scrolling and execution annotations are harder to delete.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.59.4 [\#](https://docs.n8n.io/release-notes/#n8n1594 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.59.3...n8n@1.59.4) for this version.

**Release date:** 2024-09-20

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.60.1 [\#](https://docs.n8n.io/release-notes/#n8n1601 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.60.0...n8n@1.60.1) for this version.

**Release date:** 2024-09-20

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.60.0 [\#](https://docs.n8n.io/release-notes/#n8n1600 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.59.3...n8n@1.60.0) for this version.

**Release date:** 2024-09-18

This release contains new features, node enhancements and bug fixes.

#### Queue metrics for workers [\#](https://docs.n8n.io/release-notes/#queue-metrics-for-workers "Permanent link")

You can now [expose and consume metrics from your workers](https://docs.n8n.io/hosting/configuration/configuration-examples/prometheus/). The worker instances have the same metrics available as the main instance(s) and can be configured with [environment variables](https://docs.n8n.io/hosting/configuration/environment-variables/endpoints/).

You can now customize the maximum file size when uploading files within forms to webhooks. The [environment variable to set](https://docs.n8n.io/hosting/configuration/environment-variables/endpoints/) for this is `N8N_FORMDATA_FILE_SIZE_MAX`. The default setting is 200MiB.

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_11 "Permanent link")

Enhanced nodes:

- [Invoice Ninja](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.invoiceninja/): Added actions for bank transactions
- [OpenAI](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-langchain.openai/): Added O1 models to the model select

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_16 "Permanent link")

[CodeShakingSheep](https://github.com/CodeShakingSheep)

## n8n@1.59.3 [\#](https://docs.n8n.io/release-notes/#n8n1593 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.59.2...n8n@1.59.3) for this version.

**Release date:** 2024-09-18

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.59.2 [\#](https://docs.n8n.io/release-notes/#n8n1592 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.59.1...n8n@1.59.2) for this version.

**Release date:** 2024-09-17

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.59.1 [\#](https://docs.n8n.io/release-notes/#n8n1591 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.59.0...n8n@1.59.1) for this version.

**Release date:** 2024-09-16

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.58.2 [\#](https://docs.n8n.io/release-notes/#n8n1582 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.58.1...n8n@1.58.2) for this version.

**Release date:** 2024-09-12

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.59.0 [\#](https://docs.n8n.io/release-notes/#n8n1590 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.58.1...n8n@1.59.0) for this version.

**Release date:** 2024-09-11

Chat Trigger

If you are using the Chat Trigger in "Embedded Chat" mode, with authentication turned on, you could see errors connecting to n8n if the authentication on the sending/embedded side is mis-configured.

This release contains bug fixes and feature enhancements.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_17 "Permanent link")

[oscarpedrero](https://github.com/oscarpedrero)

## n8n@1.58.1 [\#](https://docs.n8n.io/release-notes/#n8n1581 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.58.0...n8n@1.58.1) for this version.

**Release date:** 2024-09-06

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.58.0 [\#](https://docs.n8n.io/release-notes/#n8n1580 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.57.0...n8n@1.58.0) for this version.

**Release date:** 2024-09-05

This release contains new features, bug fixes and feature enhancements.

#### New node: PGVector Vector Store [\#](https://docs.n8n.io/release-notes/#new-node-pgvector-vector-store "Permanent link")

This release adds the PGVector Vector Store node. Use this node to interact with the PGVector tables in your PostgreSQL database. You can insert, get, and retrieve documents from a vector table to provide them to a retriever connected to a chain.

#### See active collaborators on workflows [\#](https://docs.n8n.io/release-notes/#see-active-collaborators-on-workflows "Permanent link")

We added collaborator avatars back to the workflow canvas. You will see other users who are active on the workflow, preventing you from overriding each other's work.

[![Collaboration avatars](https://docs.n8n.io/_images/release-notes/Collaboration-avatar.png)](https://docs.n8n.io/_images/release-notes/Collaboration-avatar.png) Collaboration avatars

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.57.0 [\#](https://docs.n8n.io/release-notes/#n8n1570 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.56.2...n8n@1.57.0) for this version.

**Release date:** 2024-08-28

This release contains new features and bug fixes.

#### Improved execution queue handling [\#](https://docs.n8n.io/release-notes/#improved-execution-queue-handling "Permanent link")

We are [exposing new execution queue metrics](https://docs.n8n.io/hosting/configuration/configuration-examples/prometheus/) to give users more visibility of the queue length. This helps to inform decisions on horizontal scaling, based on queue status. We have also made querying executions faster.

#### New credentials for the HTTP Request node [\#](https://docs.n8n.io/release-notes/#new-credentials-for-the-http-request-node "Permanent link")

We added credential support for Datadog, Dynatrace, Elastic Security, Filescan, Iris, and Malcore to the HTTP Request node making it easier to use existing credentials.

We also made it easier to select workflows as tools when working with AI agents by implementing a new `workflow selector` parameter type.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_18 "Permanent link")

[Bram Kn](https://github.com/bramkn)

## n8n@1.56.2 [\#](https://docs.n8n.io/release-notes/#n8n1562 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.56.1...n8n@1.56.2) for this version.

**Release date:** 2024-08-26

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.56.1 [\#](https://docs.n8n.io/release-notes/#n8n1561 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.56.0...n8n@1.56.1) for this version.

**Release date:** 2024-08-23

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.56.0 [\#](https://docs.n8n.io/release-notes/#n8n1560 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.55.3...n8n@1.56.0) for this version.

**Release date:** 2024-08-21

This release contains node updates, security and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_19 "Permanent link")

[CodeShakingSheep](https://github.com/CodeShakingSheep)

[Oz Weiss](https://github.com/thewizarodofoz)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.55.3 [\#](https://docs.n8n.io/release-notes/#n8n1553 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.55.2...n8n@1.55.3) for this version.

**Release date:** 2024-08-16

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.55.2 [\#](https://docs.n8n.io/release-notes/#n8n1552 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.55.1...n8n@1.55.2) for this version.

**Release date:** 2024-08-16

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.55.1 [\#](https://docs.n8n.io/release-notes/#n8n1551 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.55.0...n8n@1.55.1) for this version.

**Release date:** 2024-08-15

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.54.4 [\#](https://docs.n8n.io/release-notes/#n8n1544 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.54.3...n8n@1.54.4) for this version.

**Release date:** 2024-08-15

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.54.3 [\#](https://docs.n8n.io/release-notes/#n8n1543 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.54.2...n8n@1.54.3) for this version.

**Release date:** 2024-08-15

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.54.2 [\#](https://docs.n8n.io/release-notes/#n8n1542 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.54.1...n8n@1.54.2) for this version.

**Release date:** 2024-08-14

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.55.0 [\#](https://docs.n8n.io/release-notes/#n8n1550 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.54.1...n8n@1.55.0) for this version.

**Release date:** 2024-08-14

[Breaking change](https://github.com/n8n-io/n8n/blob/master/packages/cli/BREAKING-CHANGES.md)

The N8N_BLOCK_FILE_ACCESS_TO_N8N_FILES environment variable now also blocks access to n8n's static cache directory at ~/.cache/n8n/public.

If you are writing to or reading from a file at n8n's static cache directory via a node, e.g. Read/Write Files from Disk, please update your node to use a different path.

This release contains a new feature, a new node, a node update and bug fixes.

#### Override the npm registry [\#](https://docs.n8n.io/release-notes/#override-the-npm-registry "Permanent link")

This release adds the option to override the npm registry for installing community packages. This is a paid feature.

We now also prevent npm downloading community packages from a compromised npm registry by explicitly using --registry in all npm install commands.

#### New node: AI Transform [\#](https://docs.n8n.io/release-notes/#new-node-ai-transform "Permanent link")

This release adds the [AI Transform node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.aitransform/). Use the AI Transform node to generate code snippets based on your prompt. The AI is context-aware, understanding the workflow’s nodes and their data types. The node is only available on [Cloud plans](https://docs.n8n.io/manage-cloud/overview/).

#### New node: Okta [\#](https://docs.n8n.io/release-notes/#new-node-okta "Permanent link")

This release adds the [Okta node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.okta/). Use the Okta node to automate work in Okta and integrate Okta with other applications. n8n has built-in support for a wide range of Okta features, which includes creating, updating, and deleting users.

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_12 "Permanent link")

Enhanced node:

- [MySQL](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.mysql/)

This release also adds the new schema view for the expression editor modal.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.54.1 [\#](https://docs.n8n.io/release-notes/#n8n1541 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.54.0...n8n@1.54.1) for this version.

**Release date:** 2024-08-13

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.53.2 [\#](https://docs.n8n.io/release-notes/#n8n1532 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.53.1...n8n@1.53.2) for this version.

**Release date:** 2024-08-08

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.54.0 [\#](https://docs.n8n.io/release-notes/#n8n1540 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.53.1...n8n@1.54.0) for this version.

**Release date:** 2024-08-07

This release contains new features, node enhancements, bug fixes and updates to our API.

### API update [\#](https://docs.n8n.io/release-notes/#api-update "Permanent link")

Our [public REST API](https://docs.n8n.io/api/) now supports additional operations:

- Create, delete, and edit roles for users
- Create, read, update and delete projects

Find the details in the [API reference](https://docs.n8n.io/api/api-reference/).

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_20 "Permanent link")

[CodeShakingSheep](https://github.com/CodeShakingSheep)

[Javier Ferrer González](https://github.com/JavierCane)

[Mickaël Andrieu](https://github.com/mickaelandrieu)

[Oz Weiss](https://github.com/thewizarodofoz)

[Pemontto](https://github.com/pemontto)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.45.2 [\#](https://docs.n8n.io/release-notes/#n8n1452 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.45.1...n8n@1.45.2) for this version.

**Release date:** 2024-08-06

This release contains a bug fix.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.53.1 [\#](https://docs.n8n.io/release-notes/#n8n1531 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.53.0...n8n@1.53.1) for this version.

**Release date:** 2024-08-02

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.53.0 [\#](https://docs.n8n.io/release-notes/#n8n1530 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.52.2...n8n@1.53.0) for this version.

**Release date:** 2024-07-31

This release contains new features, new nodes, node enhancements, bug fixes and updates to our API.

#### Added Google Cloud Platform Secrets Manager support [\#](https://docs.n8n.io/release-notes/#added-google-cloud-platform-secrets-manager-support "Permanent link")

This release adds [Google Cloud Platform Secrets Manager](https://docs.n8n.io/external-secrets/) to the list of external secret stores. We already support AWS secrets, Azure Key Vault, Infisical and HashiCorp Vault. External secret stores are available under an enterprise license.

#### New node: Information Extractor [\#](https://docs.n8n.io/release-notes/#new-node-information-extractor "Permanent link")

This release adds the [Information Extractor node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.information-extractor/). The node is specifically tailored for information extraction tasks. It uses Structured Output Parser under the hood, but provides a simpler way to extract information from text in a structured JSON form.

#### New node: Sentiment Analysis [\#](https://docs.n8n.io/release-notes/#new-node-sentiment-analysis "Permanent link")

This release adds the [Sentiment Analysis node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.sentimentanalysis/). The node leverages LLMs to analyze and categorize the sentiment of input text. Users can easily integrate this node into their workflows to perform sentiment analysis on text data. The node is flexible enough to handle various use cases, from basic positive/negative classification to more nuanced sentiment categories.

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_13 "Permanent link")

Enhanced nodes:

- [Calendly Trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.calendlytrigger/)
- [HTTP Request](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/)
- [n8n Form Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.formtrigger/)
- [Shopify](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.shopify/)

### API update [\#](https://docs.n8n.io/release-notes/#api-update_1 "Permanent link")

Our [public REST API](https://docs.n8n.io/api/) now supports additional operations:

- Create, read, and delete for variables
- Filtering workflows by project
- Transferring workflows

Find the details in the [API reference](https://docs.n8n.io/api/api-reference/).

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_21 "Permanent link")

[feelgood-interface](https://github.com/feelgood-interface)

[Oz Weiss](https://github.com/thewizarodofoz)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.52.2 [\#](https://docs.n8n.io/release-notes/#n8n1522 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.52.1...n8n@1.52.2) for this version.

**Release date:** 2024-07-31

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.52.1 [\#](https://docs.n8n.io/release-notes/#n8n1521 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.52.0...n8n@1.52.1) for this version.

**Release date:** 2024-07-26

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.51.2 [\#](https://docs.n8n.io/release-notes/#n8n1512 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.51.1...n8n@1.51.2) for this version.

**Release date:** 2024-07-26

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.52.0 [\#](https://docs.n8n.io/release-notes/#n8n1520 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.51.1...n8n@1.52.0) for this version.

**Release date:** 2024-07-25

[Breaking change](https://github.com/n8n-io/n8n/blob/master/packages/cli/BREAKING-CHANGES.md)

Prometheus metrics enabled via N8N_METRICS_INCLUDE_DEFAULT_METRICS and N8N_METRICS_INCLUDE_API_ENDPOINTS were fixed to include the default n8n\_ prefix.

If you are using Prometheus metrics from these categories and are using a non-empty prefix, please update those metrics to match their new prefixed names.

This release contains new features, node enhancements and bug fixes.

#### Added Azure Key Vault support [\#](https://docs.n8n.io/release-notes/#added-azure-key-vault-support "Permanent link")

This release adds [Azure Key Vault](https://docs.n8n.io/external-secrets/) to the list of external secret stores. We already support AWS secrets, Infisical and HashiCorp Vault and are working on Google Secrets Manager. External secret stores are available under an enterprise license.

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_14 "Permanent link")

Enhanced nodes:

- [Pinecone Vector Store](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstorepinecone/)
- [Supabase Vector Store](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoresupabase/)
- [Send Email](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.sendemail/)

Deprecated nodes:

- OpenAI Model: You can use the OpenAI Chat Model instead
- Google Palm Chat Model: You can use Google Vertex or Gemini instead
- Google Palm Model: You can use Google Vertex or Gemini instead

## n8n@1.51.1 [\#](https://docs.n8n.io/release-notes/#n8n1511 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.51.0...n8n@1.51.1) for this version.

**Release date:** 2024-07-23

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.50.2 [\#](https://docs.n8n.io/release-notes/#n8n1502 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.50.1...n8n@1.50.2) for this version.

**Release date:** 2024-07-23

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.51.0 [\#](https://docs.n8n.io/release-notes/#n8n1510 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.50.1...n8n@1.51.0) for this version.

**Release date:** 2024-07-18

This release contains new nodes, node enhancements and bug fixes.

#### New node: Text Classifier [\#](https://docs.n8n.io/release-notes/#new-node-text-classifier "Permanent link")

This release adds the [Text Classifier node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.text-classifier/).

#### New node: Postgres Chat Memory [\#](https://docs.n8n.io/release-notes/#new-node-postgres-chat-memory "Permanent link")

This release adds the [Postgres Chat Memory node](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.memorypostgreschat/).

#### New node: Google Vertex Chat Model [\#](https://docs.n8n.io/release-notes/#new-node-google-vertex-chat-model "Permanent link")

This release adds the [Google Vertex Chat Model node](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatgooglevertex/).

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_15 "Permanent link")

- Enhanced nodes: Asana

## n8n@1.50.1 [\#](https://docs.n8n.io/release-notes/#n8n1501 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.50.0...n8n@1.50.1) for this version.

**Release date:** 2024-07-16

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.50.0 [\#](https://docs.n8n.io/release-notes/#n8n1500 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.49.0...n8n@1.50.0) for this version.

**Release date:** 2024-07-10

This release contains node enhancements and bug fixes.

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_16 "Permanent link")

- Enhanced nodes: Chat Trigger, Google Cloud Firestore, Qdrant Vector Store, Splunk, Telegram
- Deprecated node: Orbit (product shut down)

### Beta Feature Removal [\#](https://docs.n8n.io/release-notes/#beta-feature-removal "Permanent link")

The Ask AI beta feature for the HTTP Request node has been removed from this version

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_22 "Permanent link")

[Stanley Yoshinori Takamatsu](https://github.com/stanleytakamatsu)

[CodeShakingSheep](https://github.com/CodeShakingSheep)

[jeanpaul](https://github.com/jeanpaul)

[adrian-martinez-onestic](https://github.com/adrian-martinez-onestic)

[Malki Davis](https://github.com/mxdavis)

## n8n@1.49.0 [\#](https://docs.n8n.io/release-notes/#n8n1490 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.48.3...n8n@1.49.0) for this version.

**Release date:** 2024-07-03

This release contains a new node, node enhancements, and bug fixes.

### Node updates [\#](https://docs.n8n.io/release-notes/#node-updates_17 "Permanent link")

- New node added: [Vector Store Tool](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolvectorstore/) for the AI Agent
- Enhanced nodes: Zep Cloud Memory, Copper, Embeddings Cohere, GitHub, Merge, Zammad

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_23 "Permanent link")

[Jochem](https://github.com/jvdweerthof)

[KhDu](https://github.com/KhDu)

[Nico Weichbrodt](https://github.com/envy)

[Pavlo Paliychuk](https://github.com/paul-paliychuk)

## n8n@1.48.3 [\#](https://docs.n8n.io/release-notes/#n8n1483 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.48.2...n8n@1.48.3) for this version.

**Release date:** 2024-07-03

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.47.3 [\#](https://docs.n8n.io/release-notes/#n8n1473 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.47.2...n8n@1.47.3) for this version.

**Release date:** 2024-07-03

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.48.2 [\#](https://docs.n8n.io/release-notes/#n8n1482 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.48.1...n8n@1.48.2) for this version.

**Release date:** 2024-07-01

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.47.2 [\#](https://docs.n8n.io/release-notes/#n8n1472 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.47.1...n8n@1.47.2) for this version.

**Release date:** 2024-07-01

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.48.1 [\#](https://docs.n8n.io/release-notes/#n8n1481 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.48.0...n8n@1.48.1) for this version.

**Release date:** 2024-06-27

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.48.0 [\#](https://docs.n8n.io/release-notes/#n8n1480 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.47.1...n8n@1.48.0) for this version.

**Release date:** 2024-06-27

This release contains bug fixes and feature enhancements.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_24 "Permanent link")

[KubeAl](https://github.com/KubeAl)

## n8n@1.47.1 [\#](https://docs.n8n.io/release-notes/#n8n1471 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.47.0...n8n@1.47.1) for this version.

**Release date:** 2024-06-26

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.47.0 [\#](https://docs.n8n.io/release-notes/#n8n1470 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.46.0...n8n@1.47.0) for this version.

**Release date:** 2024-06-20

Breaking change

Calling `$(...).last()` (or `(...).first()` or `$(...).all()`) without arguments now returns the last item (or first or all items) of the output that connects two nodes. Previously, it returned the item/items of the first output of that node. Refer to the [breaking changes log](https://github.com/n8n-io/n8n/blob/master/packages/cli/BREAKING-CHANGES.md#1470) for details.

This release contains bug fixes, feature enhancements, a new node, node enhancements and performance improvements.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

#### New node: HTTP request tool [\#](https://docs.n8n.io/release-notes/#new-node-http-request-tool "Permanent link")

This release adds the HTTP request tool. You can use it with an AI agent as a tool to collect information from a website or API. Refer to the [HTTP request tool](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolhttprequest/) for details.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_25 "Permanent link")

[Daniel](https://github.com/daniel-alba17)

[ekadin-mtc](https://github.com/ekadin-mtc)

[Eric Francis](https://github.com/EricFrancis12)

[Josh Sorenson](https://github.com/joshsorenson)

Mohammad Alsmadi
[Nikolai T. Jensen](https://github.com/ch0wm3in)

[n8n-ninja](https://github.com/n8n-ninja)

[pebosi](https://github.com/pebosi)

[Taylor Hoffmann](https://github.com/TaylorHo)

## n8n@1.45.1 [\#](https://docs.n8n.io/release-notes/#n8n1451 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.45.0...n8n@1.45.1) for this version.

**Release date:** 2024-06-12

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.46.0 [\#](https://docs.n8n.io/release-notes/#n8n1460 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.45.0...n8n@1.46.0) for this version.

**Release date:** 2024-06-12

This release contains feature enhancements, node enhancements, and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_26 "Permanent link")

[Jean Khawand](https://github.com/jeankhawand)

[pemontto](https://github.com/pemontto)

[Valentin Coppin](https://github.com/valimero)

## n8n@1.44.2 [\#](https://docs.n8n.io/release-notes/#n8n1442 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.44.1...n8n@1.44.2) for this version.

**Release date:** 2024-06-12

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.42.2 [\#](https://docs.n8n.io/release-notes/#n8n1422 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.42.1...n8n@1.42.2) for this version.

**Release date:** 2024-06-10

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.45.0 [\#](https://docs.n8n.io/release-notes/#n8n1450 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.44.1...n8n@1.45.0) for this version.

**Release date:** 2024-06-06

This release contains new features, node enhancements, and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.44.1 [\#](https://docs.n8n.io/release-notes/#n8n1441 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.44.0...n8n@1.44.1) for this version.

**Release date:** 2024-06-03

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.44.0 [\#](https://docs.n8n.io/release-notes/#n8n1440 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.43.1...n8n@1.44.0) for this version.

**Release date:** 2024-05-30

This release contains new features, node enhancements, and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.43.1 [\#](https://docs.n8n.io/release-notes/#n8n1431 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.43.0...n8n@1.43.1) for this version.

**Release date:** 2024-05-28

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.43.0 [\#](https://docs.n8n.io/release-notes/#n8n1430 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.42.1...n8n@1.43.0) for this version.

**Release date:** 2024-05-22

This release contains new features, node enhancements, and bug fixes.

Backup recommended

Although this release doesn't include a breaking change, it is a significant update including database migrations. n8n recommends backing up your data before updating to this version.

Credential sharing required for manual executions

Instance owners and admins: you will see changes if you try to manually execute a workflow where the credentials aren't shared with you. Manual workflow executions now use the same permissions checks as production executions, meaning you can't do a manual execution of a workflow if you don't have access to the credentials. Previously, owners and admins could do manual executions without credentials being shared with them. To resolve this, the credential creator needs to [share the credential](https://docs.n8n.io/credentials/credential-sharing/) with you.

#### New feature: Projects [\#](https://docs.n8n.io/release-notes/#new-feature-projects "Permanent link")

With projects and roles, you can give your team access to collections of workflows and credentials, rather than having to share each workflow and credential individually. Simultaneously, you tighten security by limiting access to people on the relevant team.

Refer to the [RBAC](https://docs.n8n.io/user-management/rbac/) documentation for information on creating projects and using roles.

The number of projects and role types vary depending on your plan. Refer to [Pricing](https://n8n.io/pricing/) for details.

#### New node: Slack Trigger [\#](https://docs.n8n.io/release-notes/#new-node-slack-trigger "Permanent link")

This release adds a trigger node for Slack. Refer to the [Slack Trigger documentation](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.slacktrigger/) for details.

### Other highlights [\#](https://docs.n8n.io/release-notes/#other-highlights "Permanent link")

- Improved [memory support for OpenAI assistants](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-langchain.openai/).

### Rolling back to a previous version [\#](https://docs.n8n.io/release-notes/#rolling-back-to-a-previous-version "Permanent link")

If you update to this version, then decide you need to role back:

Self-hosted n8n:

1. Delete any RBAC projects you created.
2. Revert the database migrations using `n8n db:revert`.

Cloud: contact [help@n8n.io](mailto:help@n8n.io).

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_27 "Permanent link")

[Ayato Hayashi](https://github.com/hayashi-ay)

[Daniil Zobov](https://github.com/ddzobov)

[Guilherme Barile](https://github.com/GuilhermeBarile)

[Romain MARTINEAU](https://github.com/RJiraya)

## n8n@1.42.1 [\#](https://docs.n8n.io/release-notes/#n8n1421 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.42.0...n8n@1.42.1) for this version.

**Release date:** 2024-05-20

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.41.1 [\#](https://docs.n8n.io/release-notes/#n8n1411 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.41.0...n8n@1.41.1) for this version.

**Release date:** 2024-05-16

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.42.0 [\#](https://docs.n8n.io/release-notes/#n8n1420 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.41.0...n8n@1.42.0) for this version.

**Release date:** 2024-05-15

This release contains new features, node enhancements, and bug fixes.

Note that this release removes the AI error debugger. We're working on a new and improved version.

#### New feature: Tools Agent [\#](https://docs.n8n.io/release-notes/#new-feature-tools-agent "Permanent link")

This release adds a new option to the Agent node: the [Tools Agent](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/tools-agent/).

This agent has an enhanced ability to work with tools, and can ensure a standard output format. This is now the recommended default agent.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_28 "Permanent link")

[Mike Quinlan](https://github.com/mjquinlan2000)

[guangwu](https://github.com/testwill)

## n8n@1.41.0 [\#](https://docs.n8n.io/release-notes/#n8n1410 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.40.0...n8n@1.41.0) for this version.

**Release date:** 2024-05-08

This release contains new features, node enhancements, and bug fixes.

Note that this release temporarily disables the AI error helper.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_29 "Permanent link")

[Florin Lungu](https://github.com/floryn90)

## n8n@1.40.0 [\#](https://docs.n8n.io/release-notes/#n8n1400 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.39.1...n8n@1.40.0) for this version.

**Release date:** 2024-05-02

Breaking change

Please note that this version contains a breaking change for instances using a Postgres database. The default value for the DB_POSTGRESDB_USER environment variable was switched from `root` to `postgres`. Refer to the [breaking changes log](https://github.com/n8n-io/n8n/blob/master/packages/cli/BREAKING-CHANGES.md#1400) for details.

This release contains new features, new nodes, node enhancements, and bug fixes.

#### New feature: Ask AI in the HTTP node [\#](https://docs.n8n.io/release-notes/#new-feature-ask-ai-in-the-http-node "Permanent link")

You can now ask AI to help create API requests in the HTTP Request node:

1. In the HTTP Request node, select **Ask AI**.
2. Enter the **Service** and **Request** you want to use. For example, to use the NASA API to get their picture of the day, enter `NASA` in **Service** and `get picture of the day` in **Request**.
3. Check the parameters: the AI tries to fill them out, but you may still need to adjust or correct the configuration.

Self-hosted users need to [enable AI features and provide their own API keys](https://docs.n8n.io/hosting/configuration/environment-variables/)

#### New node: Groq Chat Model [\#](https://docs.n8n.io/release-notes/#new-node-groq-chat-model "Permanent link")

This release adds the [Groq Chat Model node](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatgroq/).

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_30 "Permanent link")

[Alberto Pasqualetto](https://github.com/albertopasqualetto)

[Bram Kn](https://github.com/bramkn)

[CodeShakingSheep](https://github.com/CodeShakingSheep)

[Nicolas-nwb](https://github.com/Nicolas-nwb)

[pemontto](https://github.com/pemontto)

[pengqiseven](https://github.com/pengqiseven)

[webk](https://github.com/webkp)

[Yoshino-s](https://github.com/Yoshino-s)

## n8n@1.39.1 [\#](https://docs.n8n.io/release-notes/#n8n1391 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.39.0...n8n@1.39.1) for this version.

**Release date:** 2024-04-25

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.38.2 [\#](https://docs.n8n.io/release-notes/#n8n1382 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.38.1...n8n@1.38.2) for this version.

**Release date:** 2024-04-25

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.37.4 [\#](https://docs.n8n.io/release-notes/#n8n1374 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.37.3...n8n@1.37.4) for this version.

**Release date:** 2024-04-25

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.39.0 [\#](https://docs.n8n.io/release-notes/#n8n1390 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.38.1...n8n@1.39.0) for this version.

**Release date:** 2024-04-24

This release contains new nodes, node enhancements, and bug fixes.

#### New node: WhatsApp Trigger [\#](https://docs.n8n.io/release-notes/#new-node-whatsapp-trigger "Permanent link")

This release adds the [WhatsApp Trigger node](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.whatsapptrigger/).

#### Node enhancement: Multiple methods, one Webhook node [\#](https://docs.n8n.io/release-notes/#node-enhancement-multiple-methods-one-webhook-node "Permanent link")

The Webhook Trigger node can now handle calls to multiple HTTP methods. Refer to the [Webhook node documentation](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.webhook/common-issues/#listen-for-multiple-http-methods) for information on enabling this.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_31 "Permanent link")

[Bram Kn](https://github.com/bramkn)

## n8n@1.38.1 [\#](https://docs.n8n.io/release-notes/#n8n1381 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.38.0...n8n@1.38.1) for this version.

**Release date:** 2024-04-18

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.37.3 [\#](https://docs.n8n.io/release-notes/#n8n1373 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.37.2...n8n@1.37.3) for this version.

**Release date:** 2024-04-18

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.38.0 [\#](https://docs.n8n.io/release-notes/#n8n1380 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.37.2...n8n@1.38.0) for this version.

**Release date:** 2024-04-17

This release contains new nodes, bug fixes, and node enhancements.

#### New node: Google Gemini Chat Model [\#](https://docs.n8n.io/release-notes/#new-node-google-gemini-chat-model "Permanent link")

This release adds the [Google Gemini Chat Model sub-node](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatgooglegemini/).

#### New node: Embeddings Google Gemini [\#](https://docs.n8n.io/release-notes/#new-node-embeddings-google-gemini "Permanent link")

This release adds the [Google Gemini Embeddings sub-node](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingsgooglegemini/).

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_32 "Permanent link")

[Chengyou Liu](https://github.com/cyliu0)

[Francesco Mannino](https://github.com/manninofrancesco)

## n8n@1.37.2 [\#](https://docs.n8n.io/release-notes/#n8n1372 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.37.1...n8n@1.37.2) for this version.

**Release date:** 2024-04-17

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.36.4 [\#](https://docs.n8n.io/release-notes/#n8n1364 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.36.3...n8n@1.36.4) for this version.

**Release date:** 2024-04-15

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.36.3 [\#](https://docs.n8n.io/release-notes/#n8n1363 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.36.2...n8n@1.36.3) for this version.

**Release date:** 2024-04-12

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.37.1 [\#](https://docs.n8n.io/release-notes/#n8n1371 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.37.0...n8n@1.37.1) for this version.

**Release date:** 2024-04-11

Breaking change

Please note that this version contains a breaking change for self-hosted n8n. It removes the `--file` flag for the `execute` CLI command. If you have scripts relying on the `--file` flag, update them to first import the workflow and then execute it using the `--id` flag. Refer to [CLI commands](https://docs.n8n.io/hosting/cli-commands/) for more information on CLI options.

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.36.2 [\#](https://docs.n8n.io/release-notes/#n8n1362 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.36.1...n8n@1.36.2) for this version.

**Release date:** 2024-04-11

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.37.0 [\#](https://docs.n8n.io/release-notes/#n8n1370 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.36.1...n8n@1.37.0) for this version.

**Release date:** 2024-04-10

Breaking change

Please note that this version contains a breaking change for self-hosted n8n. It removes the `--file` flag for the `execute` CLI command. If you have scripts relying on the `--file` flag, update them to first import the workflow and then execute it using the `--id` flag. Refer to [CLI commands](https://docs.n8n.io/hosting/cli-commands/) for more information on CLI options.

This release contains a new node, improvements to error handling and messaging, node enhancements, and bug fixes.

#### New node: JWT [\#](https://docs.n8n.io/release-notes/#new-node-jwt "Permanent link")

This release adds the [JWT core node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.jwt/).

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_33 "Permanent link")

[Miguel Prytoluk](https://github.com/mprytoluk)

## n8n@1.36.1 [\#](https://docs.n8n.io/release-notes/#n8n1361 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.36.0...n8n@1.36.1) for this version.

**Release date:** 2024-04-04

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.36.0 [\#](https://docs.n8n.io/release-notes/#n8n1360 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.35.0...n8n@1.36.0) for this version.

**Release date:** 2024-04-03

This release contains new nodes, enhancements and bug fixes.

#### New node: Salesforce Trigger node [\#](https://docs.n8n.io/release-notes/#new-node-salesforce-trigger-node "Permanent link")

This release adds the [Salesforce Trigger node](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.salesforcetrigger/).

#### New node: Twilio Trigger node [\#](https://docs.n8n.io/release-notes/#new-node-twilio-trigger-node "Permanent link")

This release adds the [Twilio Trigger node](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.twiliotrigger/).

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.35.0 [\#](https://docs.n8n.io/release-notes/#n8n1350 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.34.2...n8n@1.35.0) for this version.

**Release date:** 2024-03-28

This release contains enhancements and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.34.2 [\#](https://docs.n8n.io/release-notes/#n8n1342 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.34.1...n8n@1.34.2) for this version.

**Release date:** 2024-03-26

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.34.1 [\#](https://docs.n8n.io/release-notes/#n8n1341 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.34.0...n8n@1.34.1) for this version.

**Release date:** 2024-03-25

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.34.0 [\#](https://docs.n8n.io/release-notes/#n8n1340 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.33.1...n8n@1.34.0) for this version.

**Release date:** 2024-03-20

This release contains new features, new nodes, and bug fixes.

#### New node: Microsoft OneDrive Trigger node [\#](https://docs.n8n.io/release-notes/#new-node-microsoft-onedrive-trigger-node "Permanent link")

This release adds the [Microsoft OneDrive Trigger node](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.microsoftonedrivetrigger/). You can now trigger workflows on file and folder creation and update events.

#### New data transformation functions [\#](https://docs.n8n.io/release-notes/#new-data-transformation-functions "Permanent link")

This release introduces new [data transformation functions](https://docs.n8n.io/code/builtin/data-transformation-functions/):

**String**

|                                      |                                                                                                                                                                                     |
| ------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>3<br>4<br>5<br>6<br>` | `<br>toDateTime() //replaces toDate(). toDate() is retained for backwards compatability.<br>parseJson()<br>extractUrlPath()<br>toBoolean()<br>base64Encode()<br>base64Decode()<br>` |

**Number**

|                  |                                       |
| ---------------- | ------------------------------------- |
| `<br>1<br>2<br>` | `<br>toDateTime()<br>toBoolean()<br>` |

**Object**

|             |                          |
| ----------- | ------------------------ |
| `<br>1<br>` | `<br>toJsonString()<br>` |

**Array**

|             |                          |
| ----------- | ------------------------ |
| `<br>1<br>` | `<br>toJsonString()<br>` |

**Date & DateTime**

|                  |                                   |
| ---------------- | --------------------------------- |
| `<br>1<br>2<br>` | `<br>toDateTime()<br>toInt()<br>` |

**Boolean**

|             |                   |
| ----------- | ----------------- |
| `<br>1<br>` | `<br>toInt()<br>` |

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_34 "Permanent link")

[Bram Kn](https://github.com/bramkn)

[pemontto](https://github.com/pemontto)

## n8n@1.33.1 [\#](https://docs.n8n.io/release-notes/#n8n1331 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.33.0...n8n@1.33.1) for this version.

**Release date:** 2024-03-15

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.32.2 [\#](https://docs.n8n.io/release-notes/#n8n1322 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.32.1...n8n@1.32.2) for this version.

**Release date:** 2024-03-15

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.33.0 [\#](https://docs.n8n.io/release-notes/#n8n1330 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.32.1...n8n@1.33.0) for this version.

**Release date:** 2024-03-13

This release contains new features, node enhancements, and bug fixes.

#### Support for Claude 3 [\#](https://docs.n8n.io/release-notes/#support-for-claude-3 "Permanent link")

This release adds support for Claude 3 to the [Anthropic Chat Model](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatanthropic/) node.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_35 "Permanent link")

[gumida](https://github.com/gumida)

[Ayato Hayashi](https://github.com/hayashi-ay)

[Jordan](https://github.com/jordanburke)

[MC Naveen](https://github.com/mcnaveen)

## n8n@1.32.1 [\#](https://docs.n8n.io/release-notes/#n8n1321 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.32.0...n8n@1.32.1) for this version.

**Release date:** 2024-03-07

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.31.2 [\#](https://docs.n8n.io/release-notes/#n8n1312 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.31.1...n8n@1.31.2) for this version.

**Release date:** 2024-03-07

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.32.0 [\#](https://docs.n8n.io/release-notes/#n8n1320 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.31.1...n8n@1.32.0) for this version.

**Release date:** 2024-03-06

This release contains new features, node enhancements, performance improvements, and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.31.1 [\#](https://docs.n8n.io/release-notes/#n8n1311 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.31.0...n8n@1.31.1) for this version.

**Release date:** 2024-03-06

Breaking changes

Please note that this version contains a breaking change. HTTP connections to the editor will fail on domains other than localhost. You can read more about it [here](https://github.com/n8n-io/n8n/blob/master/packages/cli/BREAKING-CHANGES.md#1320).

This is a bug fix release and it contains a breaking change.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.31.0 [\#](https://docs.n8n.io/release-notes/#n8n1310 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.30.0...n8n@1.31.0) for this version.

**Release date:** 2024-02-28

This release contains new features, new nodes, node enhancements and bug fixes.

#### New nodes: Microsoft Outlook trigger and Ollama embeddings [\#](https://docs.n8n.io/release-notes/#new-nodes-microsoft-outlook-trigger-and-ollama-embeddings "Permanent link")

This release adds two new nodes.

- [Microsoft Outlook Trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.microsoftoutlooktrigger/)
- [Ollama Embeddings](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingsollama/)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.30.1 [\#](https://docs.n8n.io/release-notes/#n8n1301 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.30.0...n8n@1.30.1) for this version.

**Release date:** 2024-02-23

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.30.0 [\#](https://docs.n8n.io/release-notes/#n8n1300 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.29.1...n8n@1.30.0) for this version.

**Release date:** 2024-02-21

This release contains new features, node enhancements, and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.29.1 [\#](https://docs.n8n.io/release-notes/#n8n1291 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.29.0...n8n@1.29.1) for this version.

**Release date:** 2024-02-16

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.29.0 [\#](https://docs.n8n.io/release-notes/#n8n1290 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.28.0...n8n@1.29.0) for this version.

**Release date:** 2024-02-15

This release contains new features, node enhancements, and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### New features [\#](https://docs.n8n.io/release-notes/#new-features "Permanent link")

#### OpenAI node overhaul [\#](https://docs.n8n.io/release-notes/#openai-node-overhaul "Permanent link")

This release includes a new version of the [OpenAI node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-langchain.openai/), adding more operations, including support for working with assistants.

Other highlights:

- Support for AI events in [log streaming](https://docs.n8n.io/log-streaming/).
- Added support for workflow tags in the [public API](https://docs.n8n.io/api/).

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_36 "Permanent link")

[Bruno Inec](https://github.com/sweenu)

[Jesús Burgers](https://github.com/jburgers-chakray)

## n8n@1.27.3 [\#](https://docs.n8n.io/release-notes/#n8n1273 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.27.2...n8n@1.27.3) for this version.

**Release date:** 2024-02-15

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.28.0 [\#](https://docs.n8n.io/release-notes/#n8n1280 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.27.2...n8n@1.28.0) for this version.

**Release date:** 2024-02-07

This release contains new features, new nodes, node enhancements and bug fixes.

#### New nodes: Azure OpenAI chat model and embeddings [\#](https://docs.n8n.io/release-notes/#new-nodes-azure-openai-chat-model-and-embeddings "Permanent link")

This release adds two new nodes to work with [Azure OpenAI](https://azure.microsoft.com/en-gb/products/ai-services/openai-service/) in your advanced AI workflows:

- [Embeddings Azure OpenAI](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingsazureopenai/)
- [Azure OpenAI Chat Model](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatazureopenai/)

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_37 "Permanent link")

[Andrea Ascari](https://github.com/ascariandrea)

## n8n@1.27.2 [\#](https://docs.n8n.io/release-notes/#n8n1272 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.27.1...n8n@1.27.2) for this version.

**Release date:** 2024-02-02

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.27.1 [\#](https://docs.n8n.io/release-notes/#n8n1271 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.26.0...n8n@1.27.1) for this version.

**Release date:** 2024-01-31

This release contains new features, node enhancements, and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.27.0 [\#](https://docs.n8n.io/release-notes/#n8n1270 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.26.0...n8n@1.27.0) for this version.

**Release date:** 2024-01-31

Breaking change

This release removes `own` mode for self-hosted n8n. You must now use `EXECUTIONS_MODE` and set to either `regular` or `queue`. Refer to [Queue mode](https://docs.n8n.io/hosting/scaling/queue-mode/) for information on configuring queue mode.

Skip this release

Please upgrade directly to 1.27.1.

This release contains node enhancements and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.26.0 [\#](https://docs.n8n.io/release-notes/#n8n1260 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.25.1...n8n@1.26.0) for this version.

**Release date:** 2024-01-24

This release contains new features, node enhancements, and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_38 "Permanent link")

[Daniel Schröder](https://github.com/schroedan)

[Nihaal Sangha](https://github.com/nihaals)

## n8n@1.25.1 [\#](https://docs.n8n.io/release-notes/#n8n1251 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.25.0...n8n@1.25.1) for this version.

**Release date:** 2024-01-22

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_39 "Permanent link")

[Nihaal Sangha](https://github.com/nihaals)

## n8n@1.25.0 [\#](https://docs.n8n.io/release-notes/#n8n1250 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.24.1...n8n@1.25.0) for this version.

**Release date:** 2024-01-17

This release contains a new node, feature improvements, and bug fixes.

#### New node: Chat Memory Manager [\#](https://docs.n8n.io/release-notes/#new-node-chat-memory-manager "Permanent link")

The [Chat Memory Manager](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.memorymanager/) node replaces the Chat Messages Retriever node. It manages chat message memories within your AI workflows.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.24.1 [\#](https://docs.n8n.io/release-notes/#n8n1241 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.24.0...n8n@1.24.1) for this version.

**Release date:** 2024-01-16

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.22.6 [\#](https://docs.n8n.io/release-notes/#n8n1226 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.22.5...n8n@1.22.6) for this version.

**Release date:** 2024-01-10

This is a bug fix release. It includes important fixes for the HTTP Request and monday.com nodes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.24.0 [\#](https://docs.n8n.io/release-notes/#n8n1240 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.23.0...n8n@1.24.0) for this version.

**Release date:** 2024-01-10

This release contains new nodes for advanced AI, node enhancements, new features, performance enhancements, and bug fixes.

#### Chat trigger [\#](https://docs.n8n.io/release-notes/#chat-trigger "Permanent link")

n8n has created a new [Chat Trigger node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.chattrigger/). The new node provides a chat interface that you can make publicly available, with customization and authentication options.

#### Mistral Cloud Chat and Embeddings [\#](https://docs.n8n.io/release-notes/#mistral-cloud-chat-and-embeddings "Permanent link")

This release introduces two new nodes to support [Mistral AI](https://mistral.ai/):

- [Mistral Cloud Chat Model](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatmistralcloud/)
- [Embeddings Mistral Cloud](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingsmistralcloud/)

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_40 "Permanent link")

[Anush](https://github.com/Anush008)

[Eric Koleda](https://github.com/ekoleda-codaio)

[Mason Geloso](https://github.com/MasonGeloso)

[vacitbaydarman](https://github.com/vacitbaydarman)

## n8n@1.22.5 [\#](https://docs.n8n.io/release-notes/#n8n1225 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.22.4...n8n@1.22.5) for this version.

**Release date:** 2024-01-09

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.23.0 [\#](https://docs.n8n.io/release-notes/#n8n1230 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.22.4...n8n@1.23.0) for this version.

**Release date:** 2024-01-03

This release contains new nodes, node enhancements, new features, and bug fixes.

#### New nodes and improved experience for working with files [\#](https://docs.n8n.io/release-notes/#new-nodes-and-improved-experience-for-working-with-files "Permanent link")

This release includes a major overhaul of nodes relating to files (binary data).

There are now three key nodes dedicated to handling binary data files:

- [Read/Write Files from Disk](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.readwritefile/) to read and write files from/to the machine where n8n is running.
- [Convert to File](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.converttofile/) to take input data and output it as a file.
- [Extract From File](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.extractfromfile/) to get data from a binary format and convert it to JSON.

n8n has moved support for iCalendar, PDF, and spreadsheet formats into these nodes, and removed the iCalendar, Read PDF, and Spreadsheet File nodes. There are still standalone nodes for [HTML](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.html/) and [XML](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.xml/).

#### New node: Qdrant vector store [\#](https://docs.n8n.io/release-notes/#new-node-qdrant-vector-store "Permanent link")

This release adds support for [Qdrant](https://qdrant.tech/) with the Qdrant vector store node.

Read n8n's [Qdrant vector store node documentation](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreqdrant/)

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_41 "Permanent link")

[Aaron Gutierrez](https://github.com/aarongut)

[Advaith Gundu](https://github.com/geodic)

[Anush](https://github.com/Anush008)

[Bin](https://github.com/soulhat)

[Nihaal Sangha](https://github.com/nihaals)

## n8n@1.22.4 [\#](https://docs.n8n.io/release-notes/#n8n1224 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.22.3...n8n@1.22.4) for this version.

**Release date:** 2024-01-03

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.22.3 [\#](https://docs.n8n.io/release-notes/#n8n1223 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.22.2...n8n@1.22.3) for this version.

**Release date:** 2023-12-27

Upgrade directly to 1.22.4

Due to issues with this release, upgrade directly to 1.22.4.

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.22.2 [\#](https://docs.n8n.io/release-notes/#n8n1222 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.22.1...n8n@1.22.2) for this version.

**Release date:** 2023-12-27

Upgrade directly to 1.22.4

Due to issues with this release, upgrade directly to 1.22.4.

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.22.1 [\#](https://docs.n8n.io/release-notes/#n8n1221 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.22.0...n8n@1.22.1) for this version.

**Release date:** 2023-12-21

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.22.0 [\#](https://docs.n8n.io/release-notes/#n8n1220 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.21.1...n8n@1.22.0) for this version.

**Release date:** 2023-12-21

This release contains node enhancements, new features, performance improvements, and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.18.4 [\#](https://docs.n8n.io/release-notes/#n8n1184 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.18.3...n8n@1.18.4) for this version.

**Release date:** 2023-12-19

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.21.1 [\#](https://docs.n8n.io/release-notes/#n8n1211 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.20.0...n8n@1.21.1) for this version.

**Release date:** 2023-12-15

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.18.3 [\#](https://docs.n8n.io/release-notes/#n8n1183 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.18.2...n8n@1.18.3) for this version.

**Release date:** 2023-12-15

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.21.0 [\#](https://docs.n8n.io/release-notes/#n8n1210 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.20.0...n8n@1.21.0) for this version.

**Release date:** 2023-12-13

This release contains new features and nodes, node enhancements, and bug fixes.

#### New user role: Admin [\#](https://docs.n8n.io/release-notes/#new-user-role-admin "Permanent link")

This release introduces a third account type: admin. This role is available on pro and enterprise plans. Admins have similar permissions to instance owners.

[Read more about user roles](https://docs.n8n.io/user-management/account-types/)

#### New data transformation nodes [\#](https://docs.n8n.io/release-notes/#new-data-transformation-nodes "Permanent link")

This release replaces the Item Lists node with a collection of nodes for data transformation tasks:

- [Aggregate](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.aggregate/): take separate items, or portions of them, and group them together into individual items.
- [Limit](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.aggregate/): remove items beyond a defined maximum number.
- [Remove Duplicates](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.removeduplicates/): identify and delete items that are identical across all fields or a subset of fields.
- [Sort](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.sort/): organize lists of in a desired ordering, or generate a random selection.
- [Split Out](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.splitout/): separate a single data item containing a list into multiple items.
- [Summarize](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.summarize/): aggregate items together, in a manner similar to Excel pivot tables.

#### Increased sharing permissions for owners and admins [\#](https://docs.n8n.io/release-notes/#increased-sharing-permissions-for-owners-and-admins "Permanent link")

Instance owners and users with the admin role can now see and share all workflows and credentials. They can't view sensitive credential information.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.20.0 [\#](https://docs.n8n.io/release-notes/#n8n1200 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.19.5...n8n@1.20.0) for this version.

**Release date:** 2023-12-06

This release contains bug fixes, node enhancements, and ongoing new feature work.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_42 "Permanent link")

[Andrey Starostin](https://github.com/mayorandrew)

## n8n@1.19.5 [\#](https://docs.n8n.io/release-notes/#n8n1195 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.19.4...n8n@1.19.5) for this version.

**Release date:** 2023-12-05

This is a bug fix release.

Breaking change

This release removes the TensorFlow Embeddings node.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.18.2 [\#](https://docs.n8n.io/release-notes/#n8n1182 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.18.1...n8n@1.18.2) for this version.

**Release date:** 2023-12-05

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.19.4 [\#](https://docs.n8n.io/release-notes/#n8n1194 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.19.0...n8n@1.19.4) for this version.

**Release date:** 2023-12-01

Missing ARM v7 support

This version doesn't support ARM v7. n8n is working on fixing this in future releases.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.19.0 [\#](https://docs.n8n.io/release-notes/#n8n1190 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.18.0...n8n@1.19.0) for this version.

**Release date:** 2023-11-29

Upgrade directly to 1.19.4

Due to issues with this release, upgrade directly to 1.19.4.

This release contains new features, node enhancements, and bug fixes.

#### LangChain general availability [\#](https://docs.n8n.io/release-notes/#langchain-general-availability "Permanent link")

This release adds LangChain support to the main n8n version. Refer to [LangChain](https://docs.n8n.io/advanced-ai/langchain/overview/) for more information on how to build AI tools in n8n, the new nodes n8n has introduced, and related learning resources.

#### Show avatars of users working on the same workflow [\#](https://docs.n8n.io/release-notes/#show-avatars-of-users-working-on-the-same-workflow "Permanent link")

This release improves the experience of users collaborating on workflows. You can now see who else is editing at the same time as you.

## n8n@1.18.1 [\#](https://docs.n8n.io/release-notes/#n8n1181 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.18.0...n8n@1.18.1) for this version.

**Release date:** 2023-11-30

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.18.0 [\#](https://docs.n8n.io/release-notes/#n8n1180 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.17.1...n8n@1.18.0) for this version.

**Release date:** 2023-11-22

This release contains new features and bug fixes.

#### Template creator hub [\#](https://docs.n8n.io/release-notes/#template-creator-hub "Permanent link")

Built a template you want to share? This release introduces the n8n Creator hub. Refer to the [creator hub Notion doc](https://www.notion.so/n8n-Creator-hub-7bd2cbe0fce0449198ecb23ff4a2f76f) for more information on this project.

#### Node input and output search filter [\#](https://docs.n8n.io/release-notes/#node-input-and-output-search-filter "Permanent link")

Cloud Pro and Enterprise users can now search and filter the input and output data in nodes. Refer to [Data filtering](https://docs.n8n.io/data/data-filtering/) for more information.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.17.1 [\#](https://docs.n8n.io/release-notes/#n8n1171 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.17.0...n8n@1.17.1) for this version.

**Release date:** 2023-11-17

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.17.0 [\#](https://docs.n8n.io/release-notes/#n8n1170 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.16.0...n8n@1.17.0) for this version.

**Release date:** 2023-11-15

This release contains node enhancements and bug fixes.

#### Sticky Note Colors [\#](https://docs.n8n.io/release-notes/#sticky-note-colors "Permanent link")

You can now select background colors for sticky notes.

#### Discord Node Overhaul [\#](https://docs.n8n.io/release-notes/#discord-node-overhaul "Permanent link")

An overhaul of the Discord node, improving the UI making it easier to configure, improving error handling, and fixing issues.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_43 "Permanent link")

[antondollmaier](https://github.com/antondollmaier)

[teomane](https://github.com/teomane)

## n8n@1.16.0 [\#](https://docs.n8n.io/release-notes/#n8n1160 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.15.2...n8n@1.16.0) for this version.

**Release date:** 2023-11-08

This release contains node enhancements and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.15.2 [\#](https://docs.n8n.io/release-notes/#n8n1152 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.15.1...n8n@1.15.2) for this version.

**Release date:** 2023-11-07

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.15.1 [\#](https://docs.n8n.io/release-notes/#n8n1151 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.14.2...n8n@1.15.1) for this version.

**Release date:** 2023-11-02

This release contains new features, node enhancements, and bug fixes.

#### Workflow history [\#](https://docs.n8n.io/release-notes/#workflow-history "Permanent link")

This release introduces workflow history: view and load previous versions of your workflows.

Workflow history is available in Enterprise n8n, and with limited history for Cloud Pro.

Learn more in the [Workflow history](https://docs.n8n.io/workflows/history/) documentation.

#### Dark mode [\#](https://docs.n8n.io/release-notes/#dark-mode "Permanent link")

_Almost_ in time for Halloween: this release introduces dark mode.

To enable dark mode:

1. Select **Settings** \> **Personal**.
2. Under **Personalisation**, change **Theme** to **Dark theme**.

#### Optional error output for nodes [\#](https://docs.n8n.io/release-notes/#optional-error-output-for-nodes "Permanent link")

All nodes apart from sub-nodes and trigger nodes have a new optional output: **Error**. Use this to add steps to handle node errors.

#### Pagination support added to HTTP Request node [\#](https://docs.n8n.io/release-notes/#pagination-support-added-to-http-request-node "Permanent link")

The HTTP Request node now supports an pagination. Read the [node docs](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/) for information and examples.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_44 "Permanent link")

[Yoshino-s](https://github.com/Yoshino-s)

## n8n@1.14.2 [\#](https://docs.n8n.io/release-notes/#n8n1142 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.14.1...n8n@1.14.2) for this version.

**Release date:** 2023-10-26

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.14.1 [\#](https://docs.n8n.io/release-notes/#n8n1141 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.14.0...n8n@1.14.1) for this version.

**Release date:** 2023-10-26

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.14.0 [\#](https://docs.n8n.io/release-notes/#n8n1140 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.13.0...n8n@1.14.0) for this version.

**Release date:** 2023-10-25

This release contains node enhancements and bug fixes.

#### Switch node supports more outputs [\#](https://docs.n8n.io/release-notes/#switch-node-supports-more-outputs "Permanent link")

The [Switch node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.switch/) now supports an unlimited number of outputs.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.13.0 [\#](https://docs.n8n.io/release-notes/#n8n1130 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.12.2...n8n@1.13.0) for this version.

**Release date:** 2023-10-25

This release contains new features, feature enhancements, and bug fixes.

Upgrade directly to 1.14.0

This release failed to publish to npm. Upgrade directly to 1.14.0.

#### RSS Feed Trigger node [\#](https://docs.n8n.io/release-notes/#rss-feed-trigger-node "Permanent link")

This releases introduces a new node, the [RSS Feed Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.rssfeedreadtrigger/). Use this node to start a workflow when a new RSS feed item is published.

#### Facebook Lead Ads Trigger node [\#](https://docs.n8n.io/release-notes/#facebook-lead-ads-trigger-node "Permanent link")

This releases add another new node, the [Facebook Lead Ads Trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.facebookleadadstrigger/). Use this node to trigger a workflow when you get a new lead.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.12.2 [\#](https://docs.n8n.io/release-notes/#n8n1122 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.12.1...n8n@1.12.2) for this version.

**Release date:** 2023-10-24

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_45 "Permanent link")

[Burak Akgün](https://github.com/mbakgun)

## n8n@1.12.1 [\#](https://docs.n8n.io/release-notes/#n8n1121 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.12.0...n8n@1.12.1) for this version.

**Release date:** 2023-10-23

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_46 "Permanent link")

[Léo Martinez](https://github.com/martinezleoml)

## n8n@1.11.2 [\#](https://docs.n8n.io/release-notes/#n8n1112 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.11.1...n8n@1.11.2) for this version.

**Release date:** 2023-10-23

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_47 "Permanent link")

[Inga](https://github.com/inga-lovinde)

[pemontto](https://github.com/pemontto)

## n8n@1.12.0 [\#](https://docs.n8n.io/release-notes/#n8n1120 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.11.1...n8n@1.12.0) for this version.

**Release date:** 2023-10-18

This release contains new features, node enhancements, and bug fixes.

#### Form Trigger node [\#](https://docs.n8n.io/release-notes/#form-trigger-node "Permanent link")

This releases introduces a new node, the [n8n Form Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.formtrigger/). Use this node to start a workflow based on a user submitting a form. It provides a configurable form interface.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_48 "Permanent link")

[Damian Karzon](https://github.com/dkarzon)

[Inga](https://github.com/inga-lovinde)

[pemontto](https://github.com/pemontto)

## n8n@1.11.1 [\#](https://docs.n8n.io/release-notes/#n8n1111 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.11.0...n8n@1.11.1) for this version.

**Release date:** 2023-10-13

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.11.0 [\#](https://docs.n8n.io/release-notes/#n8n1110 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.10.1...n8n@1.11.0) for this version.

**Release date:** 2023-10-11

This release contains new features and bug fixes.

#### External storage for binary files [\#](https://docs.n8n.io/release-notes/#external-storage-for-binary-files "Permanent link")

Self-hosted users can now use an external service to store binary data. Learn more in [External storage](https://docs.n8n.io/hosting/scaling/external-storage/).

If you're using n8n Cloud and are interested in this feature, please [contact n8n](https://n8n-community.typeform.com/to/y9X2YuGa).

#### Item Lists node supports binary data [\#](https://docs.n8n.io/release-notes/#item-lists-node-supports-binary-data "Permanent link")

The Item Lists node now supports splitting and concatenating binary data inputs. This means you no longer need to use code to split a collection of files into multiple items.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.10.1 [\#](https://docs.n8n.io/release-notes/#n8n1101 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.10.0...n8n@1.10.1) for this version.

**Release date:** 2023-10-11

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.9.3 [\#](https://docs.n8n.io/release-notes/#n8n193 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.9.2...n8n@1.9.3) for this version.

**Release date:** 2023-10-10

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.9.2 [\#](https://docs.n8n.io/release-notes/#n8n192 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.9.1...n8n@1.9.2) for this version.

**Release date:** 2023-10-09

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.10.0 [\#](https://docs.n8n.io/release-notes/#n8n1100 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.9.1...n8n@1.10.0) for this version.

**Release date:** 2023-10-05

This release contains bug fixes and preparatory work for new features.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.9.1 [\#](https://docs.n8n.io/release-notes/#n8n191 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.9.0...n8n@1.9.1) for this version.

**Release date:** 2023-10-04

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## LangChain in n8n (beta) [\#](https://docs.n8n.io/release-notes/#langchain-in-n8n-beta "Permanent link")

**Release date:** 2023-10-04

This release introduces support for building with LangChain in n8n.

With n8n's LangChain nodes you can build AI-powered functionality within your workflows. The LangChain nodes are configurable, meaning you can choose your preferred agent, LLM, memory, and other components. Alongside the LangChain nodes, you can connect any n8n node as normal: this means you can integrate your LangChain logic with other data sources and services.

Read more:

- This is a beta release, and not yet available in the main product. Follow the instructions in [Access LangChain in n8n](https://docs.n8n.io/advanced-ai/langchain/overview/) to try it out. Self-hosted and Cloud options are available.
- Learn how LangChain concepts map to n8n nodes in [LangChain concepts in n8n](https://docs.n8n.io/advanced-ai/langchain/langchain-n8n/).
- Browse n8n's new [Cluster nodes](https://docs.n8n.io/integrations/builtin/cluster-nodes/). This is a new set of node types that allows for multiple nodes to work together to configure each other.

## n8n@1.9.0 [\#](https://docs.n8n.io/release-notes/#n8n190 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.8.2...n8n@1.9.0) for this version.

**Release date:** 2023-09-28

This release contains new features, performance improvements, and bug fixes.

#### Tournament [\#](https://docs.n8n.io/release-notes/#tournament "Permanent link")

This releases replaces RiotTmpl, the templating language used in expressions, with n8n's own templating language, [Tournament](https://github.com/n8n-io/tournament). You can now use arrow functions in expressions.

#### `N8N_BINARY_DATA_TTL` and `EXECUTIONS_DATA_PRUNE_TIMEOUT` removed [\#](https://docs.n8n.io/release-notes/#n8n_binary_data_ttl-and-executions_data_prune_timeout-removed "Permanent link")

The environment variables `N8N_BINARY_DATA_TTL` and `EXECUTIONS_DATA_PRUNE_TIMEOUT` no longer have any effect and can be removed. Instead of relying on a TTL system for binary data, n8n cleans up binary data together with executions during pruning.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.8.2 [\#](https://docs.n8n.io/release-notes/#n8n182 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.8.1...n8n@1.8.2) for this version.

**Release date:** 2023-09-25

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.8.1 [\#](https://docs.n8n.io/release-notes/#n8n181 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.8.0...n8n@1.8.1) for this version.

**Release date:** 2023-09-21

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.8.0 [\#](https://docs.n8n.io/release-notes/#n8n180 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.7.1...n8n@1.8.0) for this version.

**Release date:** 2023-09-20

This release contains node enhancements and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.7.1 [\#](https://docs.n8n.io/release-notes/#n8n171 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.7.0...n8n@1.7.1) for this version.

**Release date:** 2023-09-14

This release contains bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.7.0 [\#](https://docs.n8n.io/release-notes/#n8n170 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.6.1...n8n@1.7.0) for this version.

**Release date:** 2023-09-13

This release contains node enhancements and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_49 "Permanent link")

[Quang-Linh LE](https://github.com/linktohack)

[MC Naveen](https://github.com/mcnaveen)

## n8n@1.6.1 [\#](https://docs.n8n.io/release-notes/#n8n161 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.6.0...n8n@1.6.1) for this version.

**Release date:** 2023-09-06

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.6.0 [\#](https://docs.n8n.io/release-notes/#n8n160 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.5.1...n8n@1.6.0) for this version.

**Release date:** 2023-09-06

This release contains bug fixes, new features, and node enhancements.

Upgrade directly to 1.6.1

Skip this version and upgrade directly to 1.6.1, which contains essential bug fixes.

#### TheHive 5 [\#](https://docs.n8n.io/release-notes/#thehive-5 "Permanent link")

This release introduces support for TheHive API version 5. This uses a new node and credentials:

- [TheHive 5 node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.thehive5/)
- [TheHive 5 Trigger node](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.thehive5trigger/)
- [TheHive 5 credentials](https://docs.n8n.io/integrations/builtin/credentials/thehive5/)

#### `N8N_PERSISTED_BINARY_DATA_TTL` removed [\#](https://docs.n8n.io/release-notes/#n8n_persisted_binary_data_ttl-removed "Permanent link")

The environment variables `N8N_PERSISTED_BINARY_DATA_TTL` no longer has any effect and can be removed. This legacy flag was originally introduced to support ephemeral executions (see [details](https://github.com/n8n-io/n8n/pull/7046)), which are no longer supported.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.5.1 [\#](https://docs.n8n.io/release-notes/#n8n151 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.5.0...n8n@1.5.1) for this version.

**Release date:** 2023-08-31

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.5.0 [\#](https://docs.n8n.io/release-notes/#n8n150 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.4.1...n8n@1.5.0) for this version.

**Release date:** 2023-08-31

This release contains new features, node enhancements, and bug fixes.

Upgrade directly to 1.5.1

Skip this version and upgrade directly to 1.5.1, which contains essential bug fixes.

### Highlights [\#](https://docs.n8n.io/release-notes/#highlights "Permanent link")

#### External secrets storage for credentials [\#](https://docs.n8n.io/release-notes/#external-secrets-storage-for-credentials "Permanent link")

Enterprise-tier accounts can now use external secrets vaults to manage credentials in n8n. This allows you to store credential information securely outside your n8n instance. n8n supports Infisical and HashiCorp Vault.

Refer to [External secrets](https://docs.n8n.io/external-secrets/) for guidance on enabling and using this feature.

#### Two-factor authentication [\#](https://docs.n8n.io/release-notes/#two-factor-authentication "Permanent link")

n8n now supports two-factor authentication (2FA) for self-hosted instances. n8n is working on bringing support to Cloud. Refer to [Two-factor authentication](https://docs.n8n.io/user-management/two-factor-auth/) for guidance on enabling and using it.

#### Debug executions [\#](https://docs.n8n.io/release-notes/#debug-executions "Permanent link")

Users on a paid n8n plan can now load data from previous executions into their current workflow. This is useful when debugging a failed execution.

Refer to [Debug executions](https://docs.n8n.io/workflows/executions/debug/) for guidance on using this feature.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.4.1 [\#](https://docs.n8n.io/release-notes/#n8n141 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.4.0...n8n@1.4.1) for this version.

**Release date:** 2023-08-29

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.4.0 [\#](https://docs.n8n.io/release-notes/#n8n140 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.3.1...n8n@1.4.0) for this version.

**Release date:** 2023-08-23

This release contains new features, node enhancements, and bug fixes.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_50 "Permanent link")

[pemontto](https://github.com/pemontto)

## n8n@1.3.1 [\#](https://docs.n8n.io/release-notes/#n8n131 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.3.0...n8n@1.3.1) for this version.

**Release date:** 2023-08-18

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.3.0 [\#](https://docs.n8n.io/release-notes/#n8n130 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.2.2...n8n@1.3.0) for this version.

**Release date:** 2023-08-16

This release contains new features and bug fixes.

### Highlights [\#](https://docs.n8n.io/release-notes/#highlights_1 "Permanent link")

#### Trial feature: AI support in the Code node [\#](https://docs.n8n.io/release-notes/#trial-feature-ai-support-in-the-code-node "Permanent link")

This release introduces limited support for using AI to generate code in the Code node. Initially this feature is only available on Cloud, and will gradually be rolled out, starting with about 20% of users.

Learn how to use the feature, including guidance on writing prompts, in [Generate code with ChatGPT](https://docs.n8n.io/code/ai-code/).

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_51 "Permanent link")

[Ian Gallagher](https://github.com/craSH)

[Xavier Calland](https://github.com/xavier-calland)

## n8n@1.2.2 [\#](https://docs.n8n.io/release-notes/#n8n122 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.2.1...n8n@1.2.2) for this version.

**Release date:** 2023-08-14

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.2.1 [\#](https://docs.n8n.io/release-notes/#n8n121 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.2.0...n8n@1.2.1) for this version.

**Release date:** 2023-08-09

This is a bug fix release.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.2.0 [\#](https://docs.n8n.io/release-notes/#n8n120 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.1.1...n8n@1.2.0) for this version.

**Release date:** 2023-08-09

This release contains new features, node enhancements, bug fixes, and performance improvements.

Upgrade directly to 1.2.1

When upgrading, skip this release and go directly to 1.2.1.

### Highlights [\#](https://docs.n8n.io/release-notes/#highlights_2 "Permanent link")

#### Credential support for SecOps services [\#](https://docs.n8n.io/release-notes/#credential-support-for-secops-services "Permanent link")

This release introduces support for setting up credentials in n8n for the following services:

- [AlienVault](https://docs.n8n.io/integrations/builtin/credentials/alienvault/)
- [Auth0 Management](https://docs.n8n.io/integrations/builtin/credentials/auth0management/)
- [Carbon Black API](https://docs.n8n.io/integrations/builtin/credentials/carbonblack/)
- [Cisco Meraki API](https://docs.n8n.io/integrations/builtin/credentials/ciscomeraki/)
- [Cisco Secure Endpoint](https://docs.n8n.io/integrations/builtin/credentials/ciscosecureendpoint/)
- [Cisco Umbrella API](https://docs.n8n.io/integrations/builtin/credentials/ciscoumbrella/)
- [CrowdStrike](https://docs.n8n.io/integrations/builtin/credentials/crowdstrike/)
- [F5 Big-IP](https://docs.n8n.io/integrations/builtin/credentials/f5bigip/)
- [Fortinet FortiGate](https://docs.n8n.io/integrations/builtin/credentials/fortigate/)
- [Hybrid Analysis](https://docs.n8n.io/integrations/builtin/credentials/hybridanalysis/)
- [Imperva WAF](https://docs.n8n.io/integrations/builtin/credentials/impervawaf/)
- [Kibana](https://docs.n8n.io/integrations/builtin/credentials/kibana/)
- [Microsoft Entra ID](https://docs.n8n.io/integrations/builtin/credentials/microsoftentra/)
- [Mist](https://docs.n8n.io/integrations/builtin/credentials/mist/)
- [Okta](https://docs.n8n.io/integrations/builtin/credentials/okta/)
- [OpenCTI](https://docs.n8n.io/integrations/builtin/credentials/opencti/)
- [QRadar](https://docs.n8n.io/integrations/builtin/credentials/qradar/)
- [Qualys](https://docs.n8n.io/integrations/builtin/credentials/qualys/)
- [Recorded Future](https://docs.n8n.io/integrations/builtin/credentials/recordedfuture/)
- [Sekoia](https://docs.n8n.io/integrations/builtin/credentials/sekoia/)
- [Shuffler](https://docs.n8n.io/integrations/builtin/credentials/shuffler/)
- [Trellix ePO](https://docs.n8n.io/integrations/builtin/credentials/trellixepo/)
- [VirusTotal](https://docs.n8n.io/integrations/builtin/credentials/virustotal/)
- [Zscaler ZIA](https://docs.n8n.io/integrations/builtin/credentials/zscalerzia/)

This makes it easier to do [Custom operations](https://docs.n8n.io/integrations/custom-operations/) with these services, using the [HTTP Request](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/) node.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.1.1 [\#](https://docs.n8n.io/release-notes/#n8n111 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.1.0...n8n@1.1.1) for this version.

**Release date:** 2023-07-27

This is a bug fix release.

Breaking changes

Please note that this version contains breaking changes if upgrading from a `0.x.x` version. For full details, refer to the [n8n v1.0 migration guide](https://docs.n8n.io/1-0-migration-checklist/).

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.1.0 [\#](https://docs.n8n.io/release-notes/#n8n110 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.0.5...n8n@1.1.0) for this version.

**Release date:** 2023-07-26

This release contains new features, bug fixes, and node enhancements.

Breaking changes

Please note that this version contains breaking changes if upgrading from a `0.x.x` version. For full details, refer to the [n8n v1.0 migration guide](https://docs.n8n.io/1-0-migration-checklist/).

### Highlights [\#](https://docs.n8n.io/release-notes/#highlights_3 "Permanent link")

#### Source control and environments [\#](https://docs.n8n.io/release-notes/#source-control-and-environments "Permanent link")

This release introduces source control and environments for enterprise users.

n8n uses Git-based source control to support environments. Linking your n8n instances to a Git repository lets you create multiple n8n environments, backed by Git branches.

Refer to [Source control and environments](https://docs.n8n.io/source-control-environments/) to learn more about the features and set up your environments.

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_52 "Permanent link")

[Adrián Martínez](https://github.com/adrian-martinez-vdshop)

[Alberto Pasqualetto](https://github.com/albertopasqualetto)

[Marten Steketee](https://github.com/Marten-S)

[perseus-algol](https://github.com/perseus-algol)

[Sandra Ashipala](https://github.com/sandramsc)

[ZergRael](https://github.com/ZergRael)

## n8n@1.0.5 [\#](https://docs.n8n.io/release-notes/#n8n105 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.0.4...n8n@1.0.5) for this version.

**Release date:** 2023-07-24

This is a bug fix release.

Breaking changes

Please note that this version contains breaking changes if upgrading from a `0.x.x` version. For full details, refer to the [n8n v1.0 migration guide](https://docs.n8n.io/1-0-migration-checklist/).

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

## n8n@1.0.4 [\#](https://docs.n8n.io/release-notes/#n8n104 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.0.3...n8n@1.0.4) for this version.

**Release date:** 2023-07-19

This is a bug fix release.

Breaking changes

Please note that this version contains breaking changes if upgrading from a `0.x.x` version. For full details, refer to the [n8n v1.0 migration guide](https://docs.n8n.io/1-0-migration-checklist/).

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_53 "Permanent link")

[Romain Dunand](https://github.com/airmoi)

[noctarius aka Christoph Engelbert](https://github.com/noctarius)

## n8n@1.0.3 [\#](https://docs.n8n.io/release-notes/#n8n103 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.0.2...n8n@1.0.3) for this version.

**Release date:** 2023-07-13

This release contains API enhancements and adds support for sending messages to forum threads in the Telegram node.

Breaking changes

Please note that this version contains breaking changes if upgrading from a `0.x.x` version. For full details, refer to the [n8n v1.0 migration guide](https://docs.n8n.io/1-0-migration-checklist/).

For full release details, refer to [Releases](https://github.com/n8n-io/n8n/releases) on GitHub.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_54 "Permanent link")

[Kirill](https://github.com/chrtkv)

## n8n@1.0.2 [\#](https://docs.n8n.io/release-notes/#n8n102 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.0.1...n8n@1.0.2) for this version.

**Release date:** 2023-07-05

This is a bug fix release.

Breaking changes

Please note that this version contains breaking changes if upgrading from a `0.x.x` version. For full details, refer to the [n8n v1.0 migration guide](https://docs.n8n.io/1-0-migration-checklist/).

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_55 "Permanent link")

[Romain Dunand](https://github.com/airmoi)

## n8n@1.0.1 [\#](https://docs.n8n.io/release-notes/#n8n101 "Permanent link")

View the [commits](https://github.com/n8n-io/n8n/compare/n8n@1.0.0...n8n@1.0.1) for this version.

**Release date:** 2023-07-05

Breaking changes

Please note that this version contains breaking changes. For full details, refer to the [n8n v1.0 migration guide](https://docs.n8n.io/1-0-migration-checklist/).

This is n8n's version one release.

For full details, refer to the [n8n v1.0 migration guide](https://docs.n8n.io/1-0-migration-checklist/).

### Highlights [\#](https://docs.n8n.io/release-notes/#highlights_4 "Permanent link")

#### Python support [\#](https://docs.n8n.io/release-notes/#python-support "Permanent link")

Although JavaScript remains the default language, you can now also select Python as an option in the [Code node](https://docs.n8n.io/code/code-node/) and even make use of [many Python modules](https://pyodide.org/en/stable/usage/packages-in-pyodide.html#packages-in-pyodide). Note that Python is unavailable in Code nodes added to a workflow before v1.0.

### Contributors [\#](https://docs.n8n.io/release-notes/#contributors_56 "Permanent link")

[Marten Steketee](https://github.com/Marten-S)

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Embed Prerequisites

[Skip to content](https://docs.n8n.io/embed/prerequisites/#prerequisites)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/embed/prerequisites.md "Edit this page")

# Prerequisites [\#](https://docs.n8n.io/embed/prerequisites/#prerequisites "Permanent link")

Feature availability

Embed requires an embed license. For more information about when to use Embed, as well as costs and licensing processes, refer to [Embed](https://n8n.io/embed/) on the n8n website.

The requirements provided here are an example based on n8n Cloud and are for illustrative purposes only. Your requirements may vary depending on the number of users, workflows, and executions. Contact n8n for more information.

| Component | Sizing                                   | Supported                   |
| --------- | ---------------------------------------- | --------------------------- |
| CPU/vCPU  | Minimum 10 CPU cycles, scaling as needed | Any public or private cloud |
| Database  | 512 MB - 4 GB SSD                        | SQLite or PostgreSQL        |
| Memory    | 320 MB - 2 GB                            |                             |

## CPU considerations [\#](https://docs.n8n.io/embed/prerequisites/#cpu-considerations "Permanent link")

n8n isn't CPU intensive so even small instances (of providers such as AWS and GCP) should be enough for most use cases. Usually, memory requirements supersede CPU requirements, so focus resources there when planning your infrastructure.

## Database considerations [\#](https://docs.n8n.io/embed/prerequisites/#database-considerations "Permanent link")

n8n uses its database to store [credentials](https://docs.n8n.io/glossary/#credential-n8n), past executions, and workflows.

A core feature of n8n is the flexibility to choose a database. All the supported databases have different advantages and disadvantages, which you have to consider individually and pick the one that best suits your needs. By default n8n creates an SQLite database if no database exists at the given location.

n8n recommends that every n8n instance have a dedicated database. This helps to prevent dependencies and potential performance degradation. If it isn't possible to provide a dedicated database for every n8n instance, n8n recommends making use of Postgres's schema feature.

For Postgres, the database must already exist on the DB-instance. The database user for the n8n process needs to have full permissions on all tables that they're using or creating. n8n creates and maintains the database schema.

### Best practices [\#](https://docs.n8n.io/embed/prerequisites/#best-practices "Permanent link")

- SSD storage.
- In containerized cloud environments, ensure that the volume is persisted and mounted when stopping/starting a container. If not, all data is lost.
- If using Postgres, don't use the `tablePrefix` configuration option. It will be deprecated in the near future.
- Pay attention to the changelog of new versions and consider reverting migrations before downgrading.
- Set up at least the basic database security and stability mechanisms such as IP allow lists and backups.

## Memory considerations [\#](https://docs.n8n.io/embed/prerequisites/#memory-considerations "Permanent link")

An n8n instance doesn't typically require large amounts of available memory. For example an n8n Cloud instance at idle requires ~100MB. It's the nature of your workflows and the data being processed that determines your memory requirements.

For example, while most nodes just pass data to the next node in the workflow, the [Code node](https://docs.n8n.io/code/code-node/) creates a pre-processing and post-processing copy of the data. When dealing will large binary files, this can consume all available resources.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Workflow Components Overview

[Skip to content](https://docs.n8n.io/workflows/components/#workflow-components)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/workflows/components/index.md "Edit this page")

# Workflow components [\#](https://docs.n8n.io/workflows/components/#workflow-components "Permanent link")

This section contains:

- [Nodes](https://docs.n8n.io/workflows/components/nodes/): integrations and operations.
- [Connections](https://docs.n8n.io/workflows/components/connections/): node connectors.
- [Sticky notes](https://docs.n8n.io/workflows/components/sticky-notes/): document your workflows.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=1445492758.1744299855&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509682~102788824~102803279~102813109~102887800~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=836060346)

## Processing Data with Code

[Skip to content](https://docs.n8n.io/data/code/#processing-data-with-code)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/data/code.md "Edit this page")

# Processing data with code [\#](https://docs.n8n.io/data/code/#processing-data-with-code "Permanent link")

## Function [\#](https://docs.n8n.io/data/code/#function "Permanent link")

A function is a block of code designed to perform a certain task. In n8n, you can write custom JavaScript or Python code snippets to add, remove, and update the data you receive from a node.

The [Code](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code/) node gives you access to the incoming data and you can manipulate it. With this node you can create any function you want using JavaScript code.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Splitting Workflows in n8n

[Skip to content](https://docs.n8n.io/flow-logic/splitting/#splitting-workflows-with-conditional-nodes)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/flow-logic/splitting.md "Edit this page")

# Splitting workflows with conditional nodes [\#](https://docs.n8n.io/flow-logic/splitting/#splitting-workflows-with-conditional-nodes "Permanent link")

Splitting uses the [IF](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.if/) or [Switch](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.switch/) nodes. It turns a single-branch workflow into a multi-branch workflow. This is a key piece of representing complex logic in n8n.

Compare these workflows:

[!["Diagram representing two workflows. One has three steps and follows a linear process, with a user submitting a bug, and the workflow emailing a support team. The second workflow starts the same way, but then splits depending on whether the user marked the issue as urgent. It then splits again depending on the user's support plan"](https://docs.n8n.io/_images/flow-logic/splitting/single-multi-branch-workflow.png)](https://docs.n8n.io/_images/flow-logic/splitting/single-multi-branch-workflow.png)

This is the power of splitting and conditional nodes in n8n.

Refer to the [IF](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.if/) or [Switch](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.switch/) documentation for usage details.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](about:blank)

## Custom API Operations

[Skip to content](https://docs.n8n.io/integrations/custom-operations/#custom-api-operations)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/integrations/custom-operations.md "Edit this page")

# Custom API operations [\#](https://docs.n8n.io/integrations/custom-operations/#custom-api-operations "Permanent link")

One of the most complex parts of setting up [API](https://docs.n8n.io/glossary/#api) calls is managing authentication. n8n provides [credentials](https://docs.n8n.io/glossary/#credential-n8n) support for operations and services beyond those supported by built-in nodes.

- Custom operations for existing nodes: n8n supplies hundreds of nodes to create workflows that link multiple products. However, some nodes don't include all the possible operations supported by a product's API. You can work around this by making a custom API call using the [HTTP Request](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/) node.
- Credential-only nodes: n8n includes credential-only nodes. These are integrations where n8n supports setting up credentials for use in the HTTP Request node, but doesn't provide a standalone node. You can find a credential-only node in the nodes panel, as you would for any other integration.

## Predefined credential types [\#](https://docs.n8n.io/integrations/custom-operations/#predefined-credential-types "Permanent link")

A predefined credential type is a credential that already exists in n8n. You can use predefined credential types instead of generic credentials in the HTTP Request node.

For example: you create an Asana credential, for use with the Asana node. Later, you want to perform an operation that isn't supported by the Asana node, using Asana's API. You can use your existing Asana credential in the HTTP Request node to perform the operation, without additional authentication setup.

### Using predefined credential types [\#](https://docs.n8n.io/integrations/custom-operations/#using-predefined-credential-types "Permanent link")

To use a predefined credential type:

1. Open your HTTP Request node, or add a new one to your workflow.
2. In **Authentication**, select **Predefined Credential Type**.
3. In **Credential Type**, select the API you want to use.
4. In **Credential for `<API name>`**, you can:
5. Select an existing credential for that platform, if available.
6. Select **Create New** to create a new credential.

### Credential scopes [\#](https://docs.n8n.io/integrations/custom-operations/#credential-scopes "Permanent link")

Some existing credential types have specific scopes: endpoints that they work with. n8n warns you about this when you select the credential type.

For example, follow the steps in [Using predefined credential types](https://docs.n8n.io/integrations/custom-operations/#using-predefined-credential-types), and select **Google Calendar OAuth2 API** as your **Credential Type**. n8n displays a box listing the two endpoints you can use this credential type with:

[![The scopes box](https://docs.n8n.io/_images/integrations/custom-operations/scopes.png)](https://docs.n8n.io/_images/integrations/custom-operations/scopes.png)

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=2066318.1744299855&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509682~102788824~102803279~102813109~102887800~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=917864270)

## n8n Built-in Methods

[Skip to content](https://docs.n8n.io/code/builtin/overview/#built-in-methods-and-variables)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/code/builtin/overview.md "Edit this page")

# Built-in methods and variables [\#](https://docs.n8n.io/code/builtin/overview/#built-in-methods-and-variables "Permanent link")

n8n provides built-in methods and variables for working with data and accessing n8n data. This section provides a reference of available methods and variables for use in [expressions](https://docs.n8n.io/glossary/#expression-n8n), with a short description.

Availability in the expressions editor and the Code node

Some methods and variables aren't available in the Code node. These aren't in the documentation.

All data transformation functions are only available in the expressions editor.

The [Cookbook](https://docs.n8n.io/code/) contains examples for some common tasks, including some [Code node only](https://docs.n8n.io/code/cookbook/code-node/) functions.

- [Current node input](https://docs.n8n.io/code/builtin/current-node-input/)
- [Output of other nodes](https://docs.n8n.io/code/builtin/output-other-nodes/)
- [Date and time](https://docs.n8n.io/code/builtin/date-time/)
- [JMESPath](https://docs.n8n.io/code/builtin/jmespath/)
- [HTTP node](https://docs.n8n.io/code/builtin/http-node-variables/)
- [LangChain Code node](https://docs.n8n.io/code/builtin/langchain-methods/)
- [n8n metadata](https://docs.n8n.io/code/builtin/n8n-metadata/)
- [Convenience methods](https://docs.n8n.io/code/builtin/convenience/)
- [Data transformation functions](https://docs.n8n.io/code/builtin/data-transformation-functions/)

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n CLI Commands

[Skip to content](https://docs.n8n.io/hosting/cli-commands/#cli-commands-for-n8n)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/hosting/cli-commands.md "Edit this page")

# CLI commands for n8n [\#](https://docs.n8n.io/hosting/cli-commands/#cli-commands-for-n8n "Permanent link")

n8n includes a CLI (command line interface), allowing you to perform actions using the CLI rather than the n8n editor. These include starting workflows, and exporting and importing workflows and credentials.

## Running CLI commands [\#](https://docs.n8n.io/hosting/cli-commands/#running-cli-commands "Permanent link")

You can use CLI commands with self-hosted n8n. Depending on how you choose to install n8n, there are differences in how to run the commands:

- npm: the `n8n` command is directly available. The documentation uses this in the examples below.
- Docker: the `n8n` command is available within your Docker container:

|             |                                                                          |
| ----------- | ------------------------------------------------------------------------ |
| `<br>1<br>` | `<br>docker exec -u node -it <n8n-container-name> <n8n-cli-command><br>` |

## Start a workflow [\#](https://docs.n8n.io/hosting/cli-commands/#start-a-workflow "Permanent link")

You can start workflows directly using the CLI.

Execute a saved workflow by its ID:

|             |                                 |
| ----------- | ------------------------------- |
| `<br>1<br>` | `<br>n8n execute --id <ID><br>` |

## Change the active status of a workflow [\#](https://docs.n8n.io/hosting/cli-commands/#change-the-active-status-of-a-workflow "Permanent link")

You can change the active status of a workflow using the CLI.

Restart required

These commands operate on your n8n database. If you execute them while n8n is running, the changes don't take effect until you restart n8n.

Set the active status of a workflow by its ID to false:

|             |                                                        |
| ----------- | ------------------------------------------------------ |
| `<br>1<br>` | `<br>n8n update:workflow --id=<ID> --active=false<br>` |

Set the active status of a workflow by its ID to true:

|             |                                                       |
| ----------- | ----------------------------------------------------- |
| `<br>1<br>` | `<br>n8n update:workflow --id=<ID> --active=true<br>` |

Set the active status to false for all the workflows:

|             |                                                    |
| ----------- | -------------------------------------------------- |
| `<br>1<br>` | `<br>n8n update:workflow --all --active=false<br>` |

Set the active status to true for all the workflows:

|             |                                                   |
| ----------- | ------------------------------------------------- |
| `<br>1<br>` | `<br>n8n update:workflow --all --active=true<br>` |

## Export workflows and credentials [\#](https://docs.n8n.io/hosting/cli-commands/#export-workflows-and-credentials "Permanent link")

You can export your workflows and credentials from n8n using the CLI.

Command flags:

| Flag        | Description                                                                                 |
| ----------- | ------------------------------------------------------------------------------------------- |
| --help      | Help prompt.                                                                                |
| --all       | Exports all workflows/credentials.                                                          |
| --backup    | Sets --all --pretty --separate for backups. You can optionally set --output.                |
| --id        | The ID of the workflow to export.                                                           |
| --output    | Outputs file name or directory if using separate files.                                     |
| --pretty    | Formats the output in an easier to read fashion.                                            |
| --separate  | Exports one file per workflow (useful for versioning). Must set a directory using --output. |
| --decrypted | Exports the credentials in a plain text format.                                             |

### Workflows [\#](https://docs.n8n.io/hosting/cli-commands/#workflows "Permanent link")

Export all your workflows to the standard output (terminal):

|             |                                     |
| ----------- | ----------------------------------- |
| `<br>1<br>` | `<br>n8n export:workflow --all<br>` |

Export a workflow by its ID and specify the output file name:

|             |                                                            |
| ----------- | ---------------------------------------------------------- |
| `<br>1<br>` | `<br>n8n export:workflow --id=<ID> --output=file.json<br>` |

Export all workflows to a specific directory in a single file:

|             |                                                                       |
| ----------- | --------------------------------------------------------------------- |
| `<br>1<br>` | `<br>n8n export:workflow --all --output=backups/latest/file.json<br>` |

Export all the workflows to a specific directory using the `--backup` flag (details above):

|             |                                                                 |
| ----------- | --------------------------------------------------------------- |
| `<br>1<br>` | `<br>n8n export:workflow --backup --output=backups/latest/<br>` |

### Credentials [\#](https://docs.n8n.io/hosting/cli-commands/#credentials "Permanent link")

Export all your credentials to the standard output (terminal):

|             |                                        |
| ----------- | -------------------------------------- |
| `<br>1<br>` | `<br>n8n export:credentials --all<br>` |

Export credentials by their ID and specify the output file name:

|             |                                                               |
| ----------- | ------------------------------------------------------------- |
| `<br>1<br>` | `<br>n8n export:credentials --id=<ID> --output=file.json<br>` |

Export all credentials to a specific directory in a single file:

|             |                                                                          |
| ----------- | ------------------------------------------------------------------------ |
| `<br>1<br>` | `<br>n8n export:credentials --all --output=backups/latest/file.json<br>` |

Export all the credentials to a specific directory using the `--backup` flag (details above):

|             |                                                                    |
| ----------- | ------------------------------------------------------------------ |
| `<br>1<br>` | `<br>n8n export:credentials --backup --output=backups/latest/<br>` |

Export all the credentials in plain text format. You can use this to migrate from one installation to another that has a different secret key in the configuration file.

Sensitive information

All sensitive information is visible in the files.

|             |                                                                                    |
| ----------- | ---------------------------------------------------------------------------------- |
| `<br>1<br>` | `<br>n8n export:credentials --all --decrypted --output=backups/decrypted.json<br>` |

## Import workflows and credentials [\#](https://docs.n8n.io/hosting/cli-commands/#import-workflows-and-credentials "Permanent link")

You can import your workflows and credentials from n8n using the CLI.

Update the IDs

When exporting workflows and credentials, n8n also exports their IDs. If you have workflows and credentials with the same IDs in your existing database, they will be overwritten. To avoid this, delete or change the IDs before importing.

Available flags:

| Flag        | Description                                                                                |
| ----------- | ------------------------------------------------------------------------------------------ |
| --help      | Help prompt.                                                                               |
| --input     | Input file name or directory if you use --separate.                                        |
| --projectId | Import the workflow or credential to the specified project. Can't be used with `--userId`. |
| --separate  | Imports `*.json` files from directory provided by --input.                                 |
| --userId    | Import the workflow or credential to the specified user. Can't be used with `--projectId`. |

Migrating to SQLite

n8n limits workflow and credential names to 128 characters, but SQLite doesn't enforce size limits.

This might result in errors like **Data too long for column name** during the import process.

In this case, you can edit the names from the n8n interface and export again, or edit the JSON file directly before importing.

### Workflows [\#](https://docs.n8n.io/hosting/cli-commands/#workflows_1 "Permanent link")

Import workflows from a specific file:

|             |                                                 |
| ----------- | ----------------------------------------------- |
| `<br>1<br>` | `<br>n8n import:workflow --input=file.json<br>` |

Import all the workflow files as JSON from the specified directory:

|             |                                                                  |
| ----------- | ---------------------------------------------------------------- |
| `<br>1<br>` | `<br>n8n import:workflow --separate --input=backups/latest/<br>` |

### Credentials [\#](https://docs.n8n.io/hosting/cli-commands/#credentials_1 "Permanent link")

Import credentials from a specific file:

|             |                                                    |
| ----------- | -------------------------------------------------- |
| `<br>1<br>` | `<br>n8n import:credentials --input=file.json<br>` |

Import all the credentials files as JSON from the specified directory:

|             |                                                                     |
| ----------- | ------------------------------------------------------------------- |
| `<br>1<br>` | `<br>n8n import:credentials --separate --input=backups/latest/<br>` |

## License [\#](https://docs.n8n.io/hosting/cli-commands/#license "Permanent link")

### Clear [\#](https://docs.n8n.io/hosting/cli-commands/#clear "Permanent link")

Clear your existing license from n8n's database and reset n8n to default features:

|             |                             |
| ----------- | --------------------------- |
| `<br>1<br>` | `<br>n8n license:clear<br>` |

If your license includes [floating entitlements](https://docs.n8n.io/glossary/#entitlement-n8n), running this command will also attempt to release them back to the pool, making them available for other instances.

### Info [\#](https://docs.n8n.io/hosting/cli-commands/#info "Permanent link")

Display information about the existing license:

|             |                            |
| ----------- | -------------------------- |
| `<br>1<br>` | `<br>n8n license:info<br>` |

## User management [\#](https://docs.n8n.io/hosting/cli-commands/#user-management "Permanent link")

You can reset user management using the n8n CLI. This returns user management to its pre-setup state. It removes all user accounts.

Use this if you forget your password, and don't have SMTP set up to do password resets by email.

|             |                                     |
| ----------- | ----------------------------------- |
| `<br>1<br>` | `<br>n8n user-management:reset<br>` |

### Disable MFA for a user [\#](https://docs.n8n.io/hosting/cli-commands/#disable-mfa-for-a-user "Permanent link")

If a user loses their recovery codes you can disable MFA for a user with this command. The user will then be able to log back in to set up MFA again.

|             |                                                       |
| ----------- | ----------------------------------------------------- |
| `<br>1<br>` | `<br>n8n mfa:disable --email=johndoe@example.com<br>` |

### Disable LDAP [\#](https://docs.n8n.io/hosting/cli-commands/#disable-ldap "Permanent link")

You can reset the LDAP settings using the command below.

|             |                          |
| ----------- | ------------------------ |
| `<br>1<br>` | `<br>n8n ldap:reset<br>` |

## Security audit [\#](https://docs.n8n.io/hosting/cli-commands/#security-audit "Permanent link")

You can run a [security audit](https://docs.n8n.io/hosting/securing/security-audit/) on your n8n instance, to detect common security issues.

|             |                     |
| ----------- | ------------------- |
| `<br>1<br>` | `<br>n8n audit<br>` |

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Code Node Usage

[Skip to content](https://docs.n8n.io/code/code-node/#using-the-code-node)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/code/code-node.md "Edit this page")

# Using the Code node [\#](https://docs.n8n.io/code/code-node/#using-the-code-node "Permanent link")

Use the Code node to write custom JavaScript or Python and run it as a step in your workflow.

Coding in n8n

This page gives usage information about the Code node. For more guidance on coding in n8n, refer to the [Code](https://docs.n8n.io/code/) section. It includes:

- Reference documentation on [Built-in methods and variables](https://docs.n8n.io/code/builtin/overview/)
- Guidance on [Handling dates](https://docs.n8n.io/code/cookbook/luxon/) and [Querying JSON](https://docs.n8n.io/code/cookbook/jmespath/)
- A growing collection of examples in the [Cookbook](https://docs.n8n.io/code/cookbook/code-node/)

Examples and templates

For usage examples and templates to help you get started, refer to n8n's [Code integrations](https://n8n.io/integrations/code/) page.

Function and Function Item nodes

The Code node replaces the Function and Function Item nodes from version 0.198.0. If you're using an older version of n8n, you can still view the [Function node documentation](https://github.com/n8n-io/n8n-docs/blob/67935ad2528e2e30d7984ea917e4af2910a096ec/docs/integrations/builtin/core-nodes/n8n-nodes-base.function.md) and [Function Item node documentation](https://github.com/n8n-io/n8n-docs/blob/67935ad2528e2e30d7984ea917e4af2910a096ec/docs/integrations/builtin/core-nodes/n8n-nodes-base.functionItem.md).

## Usage [\#](https://docs.n8n.io/code/code-node/#usage "Permanent link")

How to use the Code node.

### Choose a mode [\#](https://docs.n8n.io/code/code-node/#choose-a-mode "Permanent link")

There are two modes:

- **Run Once for All Items**: this is the default. When your workflow runs, the code in the code node executes once, regardless of how many input items there are.
- **Run Once for Each Item**: choose this if you want your code to run for every input item.

## JavaScript [\#](https://docs.n8n.io/code/code-node/#javascript "Permanent link")

The Code node supports Node.js.

### Supported JavaScript features [\#](https://docs.n8n.io/code/code-node/#supported-javascript-features "Permanent link")

The Code node supports:

- Promises. Instead of returning the items directly, you can return a promise which resolves accordingly.
- Writing to your browser console using `console.log`. This is useful for debugging and troubleshooting your workflows.

### External libraries [\#](https://docs.n8n.io/code/code-node/#external-libraries "Permanent link")

If you self-host n8n, you can import and use built-in and external npm modules in the Code node. To learn how to enable external modules, refer to the [Enable modules in Code node](https://docs.n8n.io/hosting/configuration/configuration-examples/modules-in-code-node/) guide.

If you use n8n Cloud, you can't import external npm modules. n8n makes two modules available for you:

- [crypto Node.js module](https://nodejs.org/docs/latest-v18.x/api/crypto.html)
- [moment npm package](https://www.npmjs.com/package/moment)

### Built-in methods and variables [\#](https://docs.n8n.io/code/code-node/#built-in-methods-and-variables "Permanent link")

n8n provides built-in methods and variables for working with data and accessing n8n data. Refer to [Built-in methods and variables](https://docs.n8n.io/code/builtin/overview/) for more information.

The syntax to use the built-in methods and variables is `$variableName` or `$methodName()`. Type `$` in the Code node or expressions editor to see a list of suggested methods and variables.

### Keyboard shortcuts [\#](https://docs.n8n.io/code/code-node/#keyboard-shortcuts "Permanent link")

The Code node editing environment supports time-saving and useful keyboard shortcuts for a range of operations from autocompletion to code-folding and using multiple-cursors. A full list can be found in the [list of keyboard shortcuts](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code/keyboard-shortcuts/).

## Python [\#](https://docs.n8n.io/code/code-node/#python "Permanent link")

n8n added Python support in version 1.0. It doesn't include a Python executable. Instead, n8n provides Python support using [Pyodide](https://pyodide.org/en/stable/), which is a port of CPython to WebAssembly. This limits the available Python packages to the [Packages included with Pyodide](https://pyodide.org/en/stable/usage/packages-in-pyodide.html#packages-in-pyodide). n8n downloads the package automatically the first time you use it.

Slower than JavaScript

The Code node takes longer to process Python than JavaScript. This is due to the extra compilation steps.

### Built-in methods and variables [\#](https://docs.n8n.io/code/code-node/#built-in-methods-and-variables_1 "Permanent link")

n8n provides built-in methods and variables for working with data and accessing n8n data. Refer to [Built-in methods and variables](https://docs.n8n.io/code/builtin/overview/) for more information.

The syntax to use the built-in methods and variables is `_variableName` or `_methodName()`. Type `_` in the Code node to see a list of suggested methods and variables.

### Keyboard shortcuts [\#](https://docs.n8n.io/code/code-node/#keyboard-shortcuts_1 "Permanent link")

The Code node editing environment supports time-saving and useful keyboard shortcuts for a range of operations from autocompletion to code-folding and using multiple-cursors. A full list can be found in the [list of keyboard shortcuts](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code/keyboard-shortcuts/).

## File system and HTTP requests [\#](https://docs.n8n.io/code/code-node/#file-system-and-http-requests "Permanent link")

You can't access the file system or make HTTP requests. Use the following nodes instead:

- [Read/Write File From Disk](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.readwritefile/)
- [HTTP Request](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/)

## Coding in n8n [\#](https://docs.n8n.io/code/code-node/#coding-in-n8n "Permanent link")

There are two places where you can use code in n8n: the Code node and the expressions editor. When using either area, there are some key concepts you need to know, as well as some built-in methods and variables to help with common tasks.

### Key concepts [\#](https://docs.n8n.io/code/code-node/#key-concepts "Permanent link")

When working with the Code node, you need to understand the following concepts:

- [Data structure](https://docs.n8n.io/data/data-structure/): understand the data you receive in the Code node, and requirements for outputting data from the node.
- [Item linking](https://docs.n8n.io/data/data-mapping/data-item-linking/): learn how data items work, and how to link to items from previous nodes. You need to handle item linking in your code when the number of input and output items doesn't match.

### Built-in methods and variables [\#](https://docs.n8n.io/code/code-node/#built-in-methods-and-variables_2 "Permanent link")

n8n includes built-in methods and variables. These provide support for:

- Accessing specific item data
- Accessing data about workflows, executions, and your n8n environment
- Convenience variables to help with data and time

Refer to [Built-in methods and variables](https://docs.n8n.io/code/builtin/overview/) for more information.

## Use AI in the Code node [\#](https://docs.n8n.io/code/code-node/#use-ai-in-the-code-node "Permanent link")

Feature availability

AI assistance in the Code node is available to Cloud users. It isn't available in self-hosted n8n.

AI generated code overwrites your code

If you've already written some code on the **Code** tab, the AI generated code will replace it. n8n recommends using AI as a starting point to create your initial code, then editing it as needed.

To use ChatGPT to generate code in the Code node:

1. In the Code node, set **Language** to **JavaScript**.
2. Select the **Ask AI** tab.
3. Write your query.
4. Select **Generate Code**. n8n sends your query to ChatGPT, then displays the result in the **Code** tab.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=1608822330.1744299865&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509683~102788824~102803279~102813109~102887800~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=1347055191)

[iframe](about:blank)

## Update self-hosted n8n

[Skip to content](https://docs.n8n.io/hosting/installation/updating/#update-self-hosted-n8n)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/hosting/installation/updating.md "Edit this page")

# Update self-hosted n8n [\#](https://docs.n8n.io/hosting/installation/updating/#update-self-hosted-n8n "Permanent link")

It's important to keep your n8n version up to date. This ensures you get the latest features and fixes.

Some tips when updating:

- Update frequently: this avoids having to jump multiple versions at once, reducing the risk of a disruptive update. Try to update at least once a month.
- Check the [Release notes](https://docs.n8n.io/release-notes/) for breaking changes.
- Use [Environments](https://docs.n8n.io/source-control-environments/) to create a test version of your instance. Test the update there first.

For instructions on how to update, refer to the documentation for your installation method:

- [Installed with npm](https://docs.n8n.io/hosting/installation/npm/)
- [Installed with Docker](https://docs.n8n.io/hosting/installation/docker/)

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Sub-workflows in n8n

[Skip to content](https://docs.n8n.io/flow-logic/subworkflows/#sub-workflows)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/flow-logic/subworkflows.md "Edit this page")

# Sub-workflows [\#](https://docs.n8n.io/flow-logic/subworkflows/#sub-workflows "Permanent link")

You can call one workflow from another workflow. This allows you to build modular, microservice-like workflows. It can also help if your workflow grows large enough to encounter [memory issues](https://docs.n8n.io/hosting/scaling/memory-errors/). Creating sub-workflows uses the [Execute Workflow](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflow/) and [Execute Sub-workflow Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflowtrigger/) nodes.

## Set up and use a sub-workflow [\#](https://docs.n8n.io/flow-logic/subworkflows/#set-up-and-use-a-sub-workflow "Permanent link")

This section walks through setting up both the parent workflow and sub-workflow.

### Create the sub-workflow [\#](https://docs.n8n.io/flow-logic/subworkflows/#create-the-sub-workflow "Permanent link")

1. Create a new workflow.

Create sub-workflows from existing workflows

You can optionally create a sub-workflow directly from an existing parent workflow using the [Execute Sub-workflow](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflow/) node. In the node, select the **Database** and **From list** options and select **Create a sub-workflow** in the list.

2. **Optional**: configure which workflows can call the sub-workflow:
1. Select the **Options**![Options menu](https://docs.n8n.io/_images/common-icons/three-dot-options-menu.png) menu > **Settings**. n8n opens the **Workflow settings** modal.
1. Change the **This workflow can be called by** setting. Refer to [Workflow settings](https://docs.n8n.io/workflows/settings/) for more information on configuring your workflows.
1. Add the **Execute Sub-workflow** trigger node (if you are searching under trigger nodes, this is also titled **When Executed by Another Workflow**).
1. Set the **Input data mode** to choose how you will define the sub-workflow's input data:
   - **Define using fields below**: Choose this mode to define individual input names and data types that the calling workflow needs to provide.
   - **Define using JSON example**: Choose this mode to provide an example JSON object that demonstrates the expected input items and their types.
   - **Accept all data**: Choose this mode to accept all data unconditionally. The sub-workflow won't define any required input items. This sub-workflow must handle any input inconsistencies or missing values.
1. Add other nodes as needed to build your sub-workflow functionality.
1. Save the sub-workflow.

Sub-workflow mustn't contain errors

If there are errors in the sub-workflow, the parent workflow can't trigger it.

Load data into sub-workflow before building

This requires the ability to [load data from previous executions](https://docs.n8n.io/workflows/executions/debug/), which is available on n8n Cloud and registered Community plans.

If you want to load data into your sub-workflow to use while building it:

1. Create the sub-workflow and add the **Execute Sub-workflow Trigger**.
2. Set the node's **Input data mode** to **Accept all data** or define the input items using fields or JSON if they're already known.
3. In the sub-workflow [settings](https://docs.n8n.io/workflows/settings/), set **Save successful production executions** to **Save**.
4. Skip ahead to setting up the parent workflow, and run it.
5. Follow the steps to [load data from previous executions](https://docs.n8n.io/workflows/executions/debug/).
6. Adjust the **Input data mode** to match the input sent by the parent workflow if necessary.

You can now pin example data in the trigger node, enabling you to work with real data while configuring the rest of the workflow.

### Call the sub-workflow [\#](https://docs.n8n.io/flow-logic/subworkflows/#call-the-sub-workflow "Permanent link")

1. Open the workflow where you want to call the sub-workflow.
2. Add the **Execute Sub-workflow** node.
3. In the **Execute Sub-workflow** node, set the sub-workflow you want to call. You can choose to call the workflow by ID, load a workflow from a local file, add workflow JSON as a parameter in the node, or target a workflow by URL.

Find your workflow ID

Your sub-workflow's ID is the alphanumeric string at the end of its URL.

4. Fill in the required input items defined by the sub-workflow.

5. Save your workflow.

When your workflow executes, it will send data to the sub-workflow, and run it.

You can follow the execution flow from the parent workflow to the sub-workflow by opening the Execute Sub-workflow node and selecting the **View sub-execution** link. Likewise, the sub-workflow's execution contains a link back to the parent workflow's execution to navigate in the other direction.

## How data passes between workflows [\#](https://docs.n8n.io/flow-logic/subworkflows/#how-data-passes-between-workflows "Permanent link")

As an example, imagine you have an Execute Sub-workflow node in **Workflow A**. The Execute Sub-workflow node calls another workflow called **Workflow B**:

1. The Execute Sub-workflow node passes the data to the Execute Sub-workflow Trigger node (titled "When executed by another node" in the canvas) of **Workflow B**.
2. The last node of **Workflow B** sends the data back to the Execute Sub-workflow node in **Workflow A**.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Installation Guide

[Skip to content](https://docs.n8n.io/hosting/installation/npm/#npm)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/hosting/installation/npm.md "Edit this page")

# npm [\#](https://docs.n8n.io/hosting/installation/npm/#npm "Permanent link")

npm is a quick way to get started with n8n on your local machine. You must have [Node.js](https://nodejs.org/en/) installed. n8n requires Node.js 18 or above.

Latest and Next versions

n8n releases a new minor version most weeks. The `latest` version is for production use. `next` is the most recent release. You should treat `next` as a beta: it may be unstable. To report issues, use the [forum](https://community.n8n.io/c/questions/12).

Current `latest`: 1.86.1

Current `next`: 1.88.0

## Try n8n with npx [\#](https://docs.n8n.io/hosting/installation/npm/#try-n8n-with-npx "Permanent link")

You can try n8n without installing it using npx.

From the terminal, run:

|             |                   |
| ----------- | ----------------- |
| `<br>1<br>` | `<br>npx n8n<br>` |

This command will download everything that's needed to start n8n. You can then access n8n and start building workflows by opening [http://localhost:5678](http://localhost:5678/).

## Install globally with npm [\#](https://docs.n8n.io/hosting/installation/npm/#install-globally-with-npm "Permanent link")

To install n8n globally, use npm:

|             |                              |
| ----------- | ---------------------------- |
| `<br>1<br>` | `<br>npm install n8n -g<br>` |

To install or update to a specific version of n8n use the `@` syntax to specify the version. For example:

|             |                                      |
| ----------- | ------------------------------------ |
| `<br>1<br>` | `<br>npm install -g n8n@0.126.1<br>` |

To install `next`:

|             |                                   |
| ----------- | --------------------------------- |
| `<br>1<br>` | `<br>npm install -g n8n@next<br>` |

After the installation, start n8n by running:

|                       |                                    |
| --------------------- | ---------------------------------- |
| `<br>1<br>2<br>3<br>` | `<br>n8n<br># or<br>n8n start<br>` |

### Next steps [\#](https://docs.n8n.io/hosting/installation/npm/#next-steps "Permanent link")

Try out n8n using the [Quickstarts](https://docs.n8n.io/try-it-out/).

## Updating [\#](https://docs.n8n.io/hosting/installation/npm/#updating "Permanent link")

To update your n8n instance to the `latest` version, run:

|             |                             |
| ----------- | --------------------------- |
| `<br>1<br>` | `<br>npm update -g n8n<br>` |

To install the `next` version:

|             |                                   |
| ----------- | --------------------------------- |
| `<br>1<br>` | `<br>npm install -g n8n@next<br>` |

## n8n with tunnel [\#](https://docs.n8n.io/hosting/installation/npm/#n8n-with-tunnel "Permanent link")

Danger

Use this for local development and testing. It isn't safe to use it in production.

To use webhooks for trigger nodes of external services like GitHub, n8n has to be reachable from the web. n8n runs a [tunnel service](https://github.com/localtunnel/localtunnel) that can redirect requests from n8n's servers to your local n8n instance.

Start n8n with `--tunnel` by running:

|             |                              |
| ----------- | ---------------------------- |
| `<br>1<br>` | `<br>n8n start --tunnel<br>` |

## Reverting an upgrade [\#](https://docs.n8n.io/hosting/installation/npm/#reverting-an-upgrade "Permanent link")

Install the older version that you want to go back to.

If the upgrade involved a database migration:

1. Check the feature documentation and release notes to see if there are any manual changes you need to make.
2. Run `n8n db:revert` on your current version to roll back the database. If you want to revert more than one database migration, you need to repeat this process.

## Windows troubleshooting [\#](https://docs.n8n.io/hosting/installation/npm/#windows-troubleshooting "Permanent link")

If you are experiencing issues running n8n on Windows, make sure your Node.js environment is correctly set up. Follow Microsoft's guide to [Install NodeJS on Windows](https://learn.microsoft.com/en-us/windows/dev-environment/javascript/nodejs-on-windows).

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=1810622584.1744299865&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102015666~102509683~102788824~102803279~102813109~102887800~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=82872545)

## Export and Import Workflows

[Skip to content](https://docs.n8n.io/workflows/export-import/#export-and-import-workflows)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/workflows/export-import.md "Edit this page")

# Export and import workflows [\#](https://docs.n8n.io/workflows/export-import/#export-and-import-workflows "Permanent link")

n8n saves workflows in JSON format. You can export your workflows as JSON files or import JSON files into your n8n library.
You can export and import workflows in several ways.

Sharing credentials

Exported workflow JSON files include [credential](https://docs.n8n.io/glossary/#credential-n8n) names and IDs. While IDs aren't sensitive, the names could be, depending on how you name your credentials. HTTP Request nodes may contain authentication headers when imported from cURL. Remove or anonymize this information from the JSON file before sharing to protect your credentials.

## Copy-Paste [\#](https://docs.n8n.io/workflows/export-import/#copy-paste "Permanent link")

You can copy and paste a workflow or parts of it by selecting the nodes you want to copy to the clipboard ( `Ctrl + c` or `cmd +c`) and pasting it ( `Ctrl + v` or `cmd + v`) into the Editor UI.

To select all nodes or a group of nodes, click and drag:
[![Select a group of nodes](https://docs.n8n.io/_images/workflows/export-import/selectingnodes.gif)](https://docs.n8n.io/_images/workflows/export-import/selectingnodes.gif)

## From the Editor UI menu [\#](https://docs.n8n.io/workflows/export-import/#from-the-editor-ui-menu "Permanent link")

From the top navigation bar, select the three dots in the upper right ![Workflow menu icon](https://docs.n8n.io/_images/common-icons/three-dots-horizontal.png) to see the following options:

[![Import/Export menu](https://docs.n8n.io/_images/courses/level-one/chapter-six/l1-c6-import-export-menu.png)](https://docs.n8n.io/_images/courses/level-one/chapter-six/l1-c6-import-export-menu.png) _Import & Export workflows menu_

- **Download**: Downloads your current workflow as a JSON file to your computer.
- **Import from URL**: Imports workflow JSON from a URL, for example, [this workflow JSON file on GitHub](https://raw.githubusercontent.com/n8n-io/demo-setup/main/n8n/backup/workflows/srOnR8PAY3u4RSwb.json).
- **Import from File**: Imports a workflow as a JSON file from your computer.

## From the command line [\#](https://docs.n8n.io/workflows/export-import/#from-the-command-line "Permanent link")

- Export: See the [full list of commands](https://docs.n8n.io/hosting/cli-commands/#export-workflows-and-credentials) for exporting workflows or credentials.
- Import: See the [full list of commands](https://docs.n8n.io/hosting/cli-commands/#import-workflows-and-credentials) for importing workflows or credentials.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Built-in Methods

[Skip to content](https://docs.n8n.io/code/cookbook/builtin/#examples-using-n8ns-built-in-methods-and-variables)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/code/cookbook/builtin/index.md "Edit this page")

# Examples using n8n's built-in methods and variables [\#](https://docs.n8n.io/code/cookbook/builtin/#examples-using-n8ns-built-in-methods-and-variables "Permanent link")

n8n provides built-in methods and variables for working with data and accessing n8n data. This section provides usage examples.

- [execution](https://docs.n8n.io/code/cookbook/builtin/execution/)
- [getWorkflowStaticData](https://docs.n8n.io/code/cookbook/builtin/get-workflow-static-data/)
- [Retrieve linked items from earlier in the workflow](https://docs.n8n.io/code/cookbook/builtin/itemmatching/)
- [(node-name).all](https://docs.n8n.io/code/cookbook/builtin/all/)
- [vars](https://docs.n8n.io/code/cookbook/builtin/vars/)

## Related resources [\#](https://docs.n8n.io/code/cookbook/builtin/#related-resources "Permanent link")

- [Built-in methods and variables reference](https://docs.n8n.io/code/builtin/overview/)
- [Expressions](https://docs.n8n.io/code/expressions/)
- [Code node](https://docs.n8n.io/code/code-node/)

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Workflow Templates

[Skip to content](https://docs.n8n.io/embed/workflow-templates/#workflow-templates)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/embed/workflow-templates.md "Edit this page")

# Workflow templates [\#](https://docs.n8n.io/embed/workflow-templates/#workflow-templates "Permanent link")

Feature availability

Embed requires an embed license. For more information about when to use Embed, as well as costs and licensing processes, refer to [Embed](https://n8n.io/embed/) on the n8n website.

n8n provides a library of workflow [templates](https://docs.n8n.io/glossary/#template-n8n). When embedding n8n, you can:

- Continue to use n8n's workflow templates library (this is the default behavior)
- Disable workflow templates
- Create your own workflow templates library

## Disable workflow templates [\#](https://docs.n8n.io/embed/workflow-templates/#disable-workflow-templates "Permanent link")

In your environment variables, set `N8N_TEMPLATES_ENABLED` to false.

## Use your own workflow templates library [\#](https://docs.n8n.io/embed/workflow-templates/#use-your-own-workflow-templates-library "Permanent link")

In your environment variables, set `N8N_TEMPLATES_HOST` to the base URL of your API.

### Endpoints [\#](https://docs.n8n.io/embed/workflow-templates/#endpoints "Permanent link")

Your API must provide the same endpoints and data structure as n8n's.

The endpoints are:

| Method | Path                           |
| ------ | ------------------------------ |
| GET    | /templates/workflows/ `<id>`   |
| GET    | /templates/search              |
| GET    | /templates/collections/ `<id>` |
| GET    | /templates/collections         |
| GET    | /templates/categories          |
| GET    | /health                        |

### Query parameters [\#](https://docs.n8n.io/embed/workflow-templates/#query-parameters "Permanent link")

The `/templates/search` endpoint accepts the following query parameters:

| Parameter  | Type                                         | Description                                      |
| ---------- | -------------------------------------------- | ------------------------------------------------ |
| `page`     | integer                                      | The page of results to return                    |
| `rows`     | integer                                      | The maximum number of results to return per page |
| `category` | comma-separated list of strings (categories) | The categories to search within                  |
| `search`   | string                                       | The search query                                 |

The `/templates/collections` endpoint accepts the following query parameters:

| Parameter  | Type                                         | Description                     |
| ---------- | -------------------------------------------- | ------------------------------- |
| `category` | comma-separated list of strings (categories) | The categories to search within |
| `search`   | string                                       | The search query                |

### Data schema [\#](https://docs.n8n.io/embed/workflow-templates/#data-schema "Permanent link")

You can explore the data structure of the items in the response object returned by endpoints here:

Show `workflow` item data schema

| Workflow item data schema|
|||
| `<br>  1<br>  2<br>  3<br>  4<br>  5<br>  6<br>  7<br>  8<br>  9<br> 10<br> 11<br> 12<br> 13<br> 14<br> 15<br> 16<br> 17<br> 18<br> 19<br> 20<br> 21<br> 22<br> 23<br> 24<br> 25<br> 26<br> 27<br> 28<br> 29<br> 30<br> 31<br> 32<br> 33<br> 34<br> 35<br> 36<br> 37<br> 38<br> 39<br> 40<br> 41<br> 42<br> 43<br> 44<br> 45<br> 46<br> 47<br> 48<br> 49<br> 50<br> 51<br> 52<br> 53<br> 54<br> 55<br> 56<br> 57<br> 58<br> 59<br> 60<br> 61<br> 62<br> 63<br> 64<br> 65<br> 66<br> 67<br> 68<br> 69<br> 70<br> 71<br> 72<br> 73<br> 74<br> 75<br> 76<br> 77<br> 78<br> 79<br> 80<br> 81<br> 82<br> 83<br> 84<br> 85<br> 86<br> 87<br> 88<br> 89<br> 90<br> 91<br> 92<br> 93<br> 94<br> 95<br> 96<br> 97<br> 98<br> 99<br>100<br>101<br>102<br>103<br>104<br>105<br>106<br>107<br>108<br>109<br>110<br>111<br>112<br>113<br>114<br>115<br>116<br>117<br>118<br>119<br>120<br>121<br>122<br>123<br>124<br>125<br>126<br>127<br>128<br>129<br>130<br>131<br>132<br>133<br>134<br>135<br>136<br>137<br>138<br>139<br>140<br>141<br>142<br>143<br>144<br>145<br>146<br>147<br>148<br>149<br>150<br>151<br>152<br>153<br>154<br>155<br>156<br>157<br>158<br>159<br>160<br>161<br>162<br>163<br>164<br>165<br>166<br>167<br>168<br>169<br>170<br>171<br>172<br>173<br>174<br>175<br>176<br>177<br>178<br>179<br>180<br>181<br>182<br>183<br>184<br>185<br>186<br>187<br>188<br>189<br>190<br>191<br>192<br>193<br>194<br>195<br>196<br>197<br>198<br>199<br>200<br>201<br>202<br>203<br>204<br>205<br>206<br>207<br>` | `<br>{<br>  "$schema": "http://json-schema.org/draft-07/schema#",<br>  "title": "Generated schema for Root",<br>  "type": "object",<br>  "properties": {<br>    "id": {<br>      "type": "number"<br>    },<br>    "name": {<br>      "type": "string"<br>    },<br>    "totalViews": {<br>      "type": "number"<br>    },<br>    "price": {},<br>    "purchaseUrl": {},<br>    "recentViews": {<br>      "type": "number"<br>    },<br>    "createdAt": {<br>      "type": "string"<br>    },<br>    "user": {<br>      "type": "object",<br>      "properties": {<br>        "username": {<br>          "type": "string"<br>        },<br>        "verified": {<br>          "type": "boolean"<br>        }<br>      },<br>      "required": [<br>        "username",<br>        "verified"<br>      ]<br>    },<br>    "nodes": {<br>      "type": "array",<br>      "items": {<br>        "type": "object",<br>        "properties": {<br>          "id": {<br>            "type": "number"<br>          },<br>          "icon": {<br>            "type": "string"<br>          },<br>          "name": {<br>            "type": "string"<br>          },<br>          "codex": {<br>            "type": "object",<br>            "properties": {<br>              "data": {<br>                "type": "object",<br>                "properties": {<br>                  "details": {<br>                    "type": "string"<br>                  },<br>                  "resources": {<br>                    "type": "object",<br>                    "properties": {<br>                      "generic": {<br>                        "type": "array",<br>                        "items": {<br>                          "type": "object",<br>                          "properties": {<br>                            "url": {<br>                              "type": "string"<br>                            },<br>                            "icon": {<br>                              "type": "string"<br>                            },<br>                            "label": {<br>                              "type": "string"<br>                            }<br>                          },<br>                          "required": [<br>                            "url",<br>                            "label"<br>                          ]<br>                        }<br>                      },<br>                      "primaryDocumentation": {<br>                        "type": "array",<br>                        "items": {<br>                          "type": "object",<br>                          "properties": {<br>                            "url": {<br>                              "type": "string"<br>                            }<br>                          },<br>                          "required": [<br>                            "url"<br>                          ]<br>                        }<br>                      }<br>                    },<br>                    "required": [<br>                      "primaryDocumentation"<br>                    ]<br>                  },<br>                  "categories": {<br>                    "type": "array",<br>                    "items": {<br>                      "type": "string"<br>                    }<br>                  },<br>                  "nodeVersion": {<br>                    "type": "string"<br>                  },<br>                  "codexVersion": {<br>                    "type": "string"<br>                  }<br>                },<br>                "required": [<br>                  "categories"<br>                ]<br>              }<br>            }<br>          },<br>          "group": {<br>            "type": "string"<br>          },<br>          "defaults": {<br>            "type": "object",<br>            "properties": {<br>              "name": {<br>                "type": "string"<br>              },<br>              "color": {<br>                "type": "string"<br>              }<br>            },<br>            "required": [<br>              "name"<br>            ]<br>          },<br>          "iconData": {<br>            "type": "object",<br>            "properties": {<br>              "icon": {<br>                "type": "string"<br>              },<br>              "type": {<br>                "type": "string"<br>              },<br>              "fileBuffer": {<br>                "type": "string"<br>              }<br>            },<br>            "required": [<br>              "type"<br>            ]<br>          },<br>          "displayName": {<br>            "type": "string"<br>          },<br>          "typeVersion": {<br>            "type": "number"<br>          },<br>          "nodeCategories": {<br>            "type": "array",<br>            "items": {<br>              "type": "object",<br>              "properties": {<br>                "id": {<br>                  "type": "number"<br>                },<br>                "name": {<br>                  "type": "string"<br>                }<br>              },<br>              "required": [<br>                "id",<br>                "name"<br>              ]<br>            }<br>          }<br>        },<br>        "required": [<br>          "id",<br>          "icon",<br>          "name",<br>          "codex",<br>          "group",<br>          "defaults",<br>          "iconData",<br>          "displayName",<br>          "typeVersion"<br>        ]<br>      }<br>    }<br>  },<br>  "required": [<br>    "id",<br>    "name",<br>    "totalViews",<br>    "price",<br>    "purchaseUrl",<br>    "recentViews",<br>    "createdAt",<br>    "user",<br>    "nodes"<br>  ]<br>}<br>` |

Show `category` item data schema

| Category item data schema                                                                              |
| ------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>` | `<br>{<br>  "$schema": "http://json-schema.org/draft-07/schema#",<br>  "type": "object",<br>  "properties": {<br>    "id": {<br>      "type": "number"<br>    },<br>    "name": {<br>      "type": "string"<br>    }<br>  },<br>  "required": [<br>    "id",<br>    "name"<br>  ]<br>}<br>` |

Show `collection` item data schema

| Collection item data schema                                                                                                                                                                                                                                                                |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ ||
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>` | `<br>{<br>  "$schema": "http://json-schema.org/draft-07/schema#",<br>  "type": "object",<br>  "properties": {<br>    "id": {<br>      "type": "number"<br>    },<br>    "rank": {<br>      "type": "number"<br>    },<br>    "name": {<br>      "type": "string"<br>    },<br>    "totalViews": {},<br>    "createdAt": {<br>      "type": "string"<br>    },<br>    "workflows": {<br>      "type": "array",<br>      "items": {<br>        "type": "object",<br>        "properties": {<br>          "id": {<br>            "type": "number"<br>          }<br>        },<br>        "required": [<br>          "id"<br>        ]<br>      }<br>    },<br>    "nodes": {<br>      "type": "array",<br>      "items": {}<br>    }<br>  },<br>  "required": [<br>    "id",<br>    "rank",<br>    "name",<br>    "totalViews",<br>    "createdAt",<br>    "workflows",<br>    "nodes"<br>  ]<br>}<br>` |

You can also interactively explore n8n's API endpoints:

[https://api.n8n.io/templates/categories](https://api.n8n.io/templates/categories)

[https://api.n8n.io/templates/collections](https://api.n8n.io/templates/collections)

[https://api.n8n.io/templates/search](https://api.n8n.io/templates/search)

[https://api.n8n.io/health](https://api.n8n.io/health)

You can [contact us](mailto:help@n8n.io) for more support.

## Add your workflows to the n8n library [\#](https://docs.n8n.io/embed/workflow-templates/#add-your-workflows-to-the-n8n-library "Permanent link")

You can submit your workflows to n8n's template library.

n8n is working on a creator program, and developing a marketplace of templates. This is an ongoing project, and details are likely to change.

Refer to [n8n Creator hub](https://www.notion.so/n8n/n8n-Creator-hub-7bd2cbe0fce0449198ecb23ff4a2f76f) for information on how to submit templates and become a creator.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Scaling n8n

[Skip to content](https://docs.n8n.io/hosting/scaling/overview/#scaling-n8n)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/hosting/scaling/overview.md "Edit this page")

# Scaling n8n [\#](https://docs.n8n.io/hosting/scaling/overview/#scaling-n8n "Permanent link")

When running n8n at scale, with a large number of users, workflows, or executions, you need to change your n8n configuration to ensure good performance.

n8n can run in different [modes](https://docs.n8n.io/hosting/scaling/queue-mode/) depending on your needs. The `queue` mode provides the best scalability. Refer to [Queue mode](https://docs.n8n.io/hosting/scaling/queue-mode/) for configuration details.

You can configure data saving and pruning to improve database performance. Refer to [Execution data](https://docs.n8n.io/hosting/scaling/execution-data/) for details.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Data Mapping Guide

[Skip to content](https://docs.n8n.io/data/data-mapping/#data-mapping)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/data/data-mapping/index.md "Edit this page")

# Data mapping [\#](https://docs.n8n.io/data/data-mapping/#data-mapping "Permanent link")

Data mapping means referencing data from previous nodes.

This section contains guidance on:

- Mapping data in most scenarios: [Data mapping in the UI](https://docs.n8n.io/data/data-mapping/data-mapping-ui/) and [Data mapping in expression](https://docs.n8n.io/data/data-mapping/data-mapping-expressions/)
- How to handle [item linking](https://docs.n8n.io/data/data-mapping/data-item-linking/) when using the Code node or building your own nodes.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Credentials Library

[Skip to content](https://docs.n8n.io/integrations/builtin/credentials/#credentials-library)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/integrations/builtin/credentials/index.md "Edit this page")

# Credentials library [\#](https://docs.n8n.io/integrations/builtin/credentials/#credentials-library "Permanent link")

This section contains step-by-step information about authenticating the different nodes in n8n.

To learn more about creating, managing, and sharing credentials, refer to [Manage credentials](https://docs.n8n.io/credentials/).

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Workflow Waiting Logic

[Skip to content](https://docs.n8n.io/flow-logic/waiting/#waiting)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/flow-logic/waiting.md "Edit this page")

# Waiting [\#](https://docs.n8n.io/flow-logic/waiting/#waiting "Permanent link")

Waiting allows you to pause a workflow mid-execution, then resume where the workflow left off, with the same data. This is useful if you need to rate limit your calls to a service, or wait for an external event to complete. You can wait for a specified duration, or until a webhook fires.

Making a workflow wait uses the [Wait](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.wait/) node. Refer to the node documentation for usage details.

n8n provides a workflow template with a basic example of [Rate limiting and waiting for external events](https://n8n.io/workflows/1749-rate-limiting-and-waiting-for-external-events/).

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n API Reference

[edit.link.title](https://github.com/n8n-io/n8n-docs/edit/main/docs/api/api-reference.md "edit.link.title")

- User
  - getRetrieve all users
  - postCreate multiple users
  - getGet user by ID/Email
  - delDelete a user
  - patchChange a user's global role
- Audit
  - postGenerate an audit
- Execution
  - getRetrieve all executions
  - getRetrieve an execution
  - delDelete an execution
- Workflow
  - postCreate a workflow
  - getRetrieve all workflows
  - getRetrieves a workflow
  - delDelete a workflow
  - putUpdate a workflow
  - postActivate a workflow
  - postDeactivate a workflow
  - putTransfer a workflow to another project.
  - putTransfer a credential to another project.
  - getGet workflow tags
  - putUpdate tags of a workflow
- Credential
  - postCreate a credential
  - delDelete credential by ID
  - getShow credential data schema
- Tags
  - postCreate a tag
  - getRetrieve all tags
  - getRetrieves a tag
  - delDelete a tag
  - putUpdate a tag
- SourceControl
  - postPull changes from the remote repository
- Variables
  - postCreate a variable
  - getRetrieve variables
  - delDelete a variable
- Projects
  - postCreate a project
  - getRetrieve projects
  - delDelete a project
- Project
  - putUpdate a project

[API docs by Redocly](https://redocly.com/redoc/)

# n8n Public API (1.1.1)

Download OpenAPI specification: [Download](https://docs.n8n.io/api/v1/openapi.yml)

E-mail: [hello@n8n.io](mailto:hello@n8n.io)License: [Sustainable Use License](https://github.com/n8n-io/n8n/blob/master/LICENSE.md)[Terms of Service](https://n8n.io/legal/terms)

n8n Public API

[n8n API documentation](https://docs.n8n.io/api/)

## [tag/User](https://docs.n8n.io/api/api-reference/#tag/User) User

Operations about users

## [tag/User/paths/~1users/get](https://docs.n8n.io/api/api-reference/#tag/User/paths/~1users/get) Retrieve all users

Retrieve all users from your instance. Only available for the instance owner.

##### Authorizations:

_ApiKeyAuth_

##### query Parameters

|             |                                                                                                                                                                                                                       |
| ----------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| limit       | number <= 250 <br>Default: 100<br>Example: limit=100<br>The maximum number of items to return.                                                                                                                        |
| cursor      | string<br>Paginate by setting the cursor parameter to the nextCursor attribute returned by the previous request's response. Default value fetches the first "page" of the collection. See pagination for more detail. |
| includeRole | boolean<br>Default: false<br>Example: includeRole=true<br>Whether to include the user's role or not.                                                                                                                  |
| projectId   | string<br>Example: projectId=VmwOO9HeTEj20kxM                                                                                                                                                                         |

### Responses

**200**

Operation successful.

**401**

Unauthorized

get/users

https://docs.n8n.io/api/v1/users

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"data": [\
{\
"id": "123e4567-e89b-12d3-a456-426614174000",\
"email": "john.doe@company.com",\
"firstName": "john",\
"lastName": "Doe",\
"isPending": true,\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z",\
"role": "owner"}],
"nextCursor": "MTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDA"}`

## [tag/User/paths/~1users/post](https://docs.n8n.io/api/api-reference/#tag/User/paths/~1users/post) Create multiple users

Create one or more users.

##### Authorizations:

_ApiKeyAuth_

##### Request Body schema: application/json required

Array of users to be created.

Array

|                   |                                              |
| ----------------- | -------------------------------------------- |
| email<br>required | string <email>                               |
| role              | string<br>Enum:"global:admin""global:member" |

### Responses

**200**

Operation successful.

**401**

Unauthorized

**403**

Forbidden

post/users

https://docs.n8n.io/api/v1/users

### Request samples

- Payload

Content type

application/json

Copy
Expand all Collapse all

`[\
{\
"email": "user@example.com",\
"role": "global:admin"}]`

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"user": {
"id": "string",
"email": "string",
"inviteAcceptUrl": "string",
"emailSent": true},
"error": "string"}`

## [tag/User/paths/~1users~1{id}/get](https://docs.n8n.io/api/api-reference/#tag/User/paths/~1users~1{id}/get) Get user by ID/Email

Retrieve a user from your instance. Only available for the instance owner.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                                                      |
| -------------- | ---------------------------------------------------- |
| id<br>required | string <identifier> <br>The ID or email of the user. |

##### query Parameters

|             |                                                                                                      |
| ----------- | ---------------------------------------------------------------------------------------------------- |
| includeRole | boolean<br>Default: false<br>Example: includeRole=true<br>Whether to include the user's role or not. |

### Responses

**200**

Operation successful.

**401**

Unauthorized

get/users/{id}

https://docs.n8n.io/api/v1/users/{id}

### Response samples

- 200

Content type

application/json

Copy

`{
"id": "123e4567-e89b-12d3-a456-426614174000",
"email": "john.doe@company.com",
"firstName": "john",
"lastName": "Doe",
"isPending": true,
"createdAt": "2019-08-24T14:15:22Z",
"updatedAt": "2019-08-24T14:15:22Z",
"role": "owner"}`

## [tag/User/paths/~1users~1{id}/delete](https://docs.n8n.io/api/api-reference/#tag/User/paths/~1users~1{id}/delete) Delete a user

Delete a user from your instance.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                                                      |
| -------------- | ---------------------------------------------------- |
| id<br>required | string <identifier> <br>The ID or email of the user. |

### Responses

**204**

Operation successful.

**401**

Unauthorized

**403**

Forbidden

**404**

The specified resource was not found.

delete/users/{id}

https://docs.n8n.io/api/v1/users/{id}

## [tag/User/paths/~1users~1{id}~1role/patch](https://docs.n8n.io/api/api-reference/#tag/User/paths/~1users~1{id}~1role/patch) Change a user's global role

Change a user's global role

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                                                      |
| -------------- | ---------------------------------------------------- |
| id<br>required | string <identifier> <br>The ID or email of the user. |

##### Request Body schema: application/json required

New role for the user

|                         |                                              |
| ----------------------- | -------------------------------------------- |
| newRoleName<br>required | string<br>Enum:"global:admin""global:member" |

### Responses

**200**

Operation successful.

**401**

Unauthorized

**403**

Forbidden

**404**

The specified resource was not found.

patch/users/{id}/role

https://docs.n8n.io/api/v1/users/{id}/role

### Request samples

- Payload

Content type

application/json

Copy

`{
"newRoleName": "global:admin"}`

## [tag/Audit](https://docs.n8n.io/api/api-reference/#tag/Audit) Audit

Operations about security audit

## [tag/Audit/paths/~1audit/post](https://docs.n8n.io/api/api-reference/#tag/Audit/paths/~1audit/post) Generate an audit

Generate a security audit for your n8n instance.

##### Authorizations:

_ApiKeyAuth_

##### Request Body schema: application/json optional

|                   |        |
| ----------------- | ------ |
| additionalOptions | object |

### Responses

**200**

Operation successful.

**401**

Unauthorized

**500**

Internal server error.

post/audit

https://docs.n8n.io/api/v1/audit

### Request samples

- Payload

Content type

application/json

Copy
Expand all Collapse all

`{
"additionalOptions": {
"daysAbandonedWorkflow": 0,
"categories": [\
"credentials"]}}`

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"Credentials Risk Report": {
"risk": "credentials",
"sections": [\
{\
"title": "Credentials not used in any workflow",\
"description": "These credentials are not used in any workflow. Keeping unused credentials in your instance is an unneeded security risk.",\
"recommendation": "Consider deleting these credentials if you no longer need them.",\
"location": [\
{\
"kind": "credential",\
"id": "1",\
"name": "My Test Account"}]}]},
"Database Risk Report": {
"risk": "database",
"sections": [\
{\
"title": "Expressions in \"Execute Query\" fields in SQL nodes",\
"description": "This SQL node has an expression in the \"Query\" field of an \"Execute Query\" operation. Building a SQL query with an expression may lead to a SQL injection attack.",\
"recommendation": "Consider using the \"Query Parameters\" field to pass parameters to the query",\
"or validating the input of the expression in the "Query" field.": null,\
"location": [\
{\
"kind": "node",\
"workflowId": "1",\
"workflowName": "My Workflow",\
"nodeId": "51eb5852-ce0b-4806-b4ff-e41322a4041a",\
"nodeName": "MySQL",\
"nodeType": "n8n-nodes-base.mySql"}]}]},
"Filesystem Risk Report": {
"risk": "filesystem",
"sections": [\
{\
"title": "Nodes that interact with the filesystem",\
"description": "This node reads from and writes to any accessible file in the host filesystem. Sensitive file content may be manipulated through a node operation.",\
"recommendation": "Consider protecting any sensitive files in the host filesystem",\
"or refactoring the workflow so that it does not require host filesystem interaction.": null,\
"location": [\
{\
"kind": "node",\
"workflowId": "1",\
"workflowName": "My Workflow",\
"nodeId": "51eb5852-ce0b-4806-b4ff-e41322a4041a",\
"nodeName": "Ready Binary file",\
"nodeType": "n8n-nodes-base.readBinaryFile"}]}]},
"Nodes Risk Report": {
"risk": "nodes",
"sections": [\
{\
"title": "Community nodes",\
"description": "This node is sourced from the community. Community nodes are not vetted by the n8n team and have full access to the host system.",\
"recommendation": "Consider reviewing the source code in any community nodes installed in this n8n instance",\
"and uninstalling any community nodes no longer used.": null,\
"location": [\
{\
"kind": "community",\
"nodeType": "n8n-nodes-test.test",\
"packageUrl": "https://www.npmjs.com/package/n8n-nodes-test"}]}]},
"Instance Risk Report": {
"risk": "execution",
"sections": [\
{\
"title": "Unprotected webhooks in instance",\
"description": "These webhook nodes have the \"Authentication\" field set to \"None\" and are not directly connected to a node to validate the payload. Every unprotected webhook allows your workflow to be called by any third party who knows the webhook URL.",\
"recommendation": "Consider setting the \"Authentication\" field to an option other than \"None\"",\
"or validating the payload with one of the following nodes.": null,\
"location": [\
{\
"kind": "community",\
"nodeType": "n8n-nodes-test.test",\
"packageUrl": "https://www.npmjs.com/package/n8n-nodes-test"}]}]}}`

## [tag/Execution](https://docs.n8n.io/api/api-reference/#tag/Execution) Execution

Operations about executions

## [tag/Execution/paths/~1executions/get](https://docs.n8n.io/api/api-reference/#tag/Execution/paths/~1executions/get) Retrieve all executions

Retrieve all executions from your instance.

##### Authorizations:

_ApiKeyAuth_

##### query Parameters

|             |                                                                                                                                                                                                                       |
| ----------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| includeData | boolean<br>Whether or not to include the execution's detailed data.                                                                                                                                                   |
| status      | string<br>Enum:"error""success""waiting"<br>Status to filter the executions by.                                                                                                                                       |
| workflowId  | string<br>Example: workflowId=1000<br>Workflow to filter the executions by.                                                                                                                                           |
| projectId   | string<br>Example: projectId=VmwOO9HeTEj20kxM                                                                                                                                                                         |
| limit       | number <= 250 <br>Default: 100<br>Example: limit=100<br>The maximum number of items to return.                                                                                                                        |
| cursor      | string<br>Paginate by setting the cursor parameter to the nextCursor attribute returned by the previous request's response. Default value fetches the first "page" of the collection. See pagination for more detail. |

### Responses

**200**

Operation successful.

**401**

Unauthorized

**404**

The specified resource was not found.

get/executions

https://docs.n8n.io/api/v1/executions

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"data": [\
{\
"id": 1000,\
"data": { },\
"finished": true,\
"mode": "cli",\
"retryOf": 0,\
"retrySuccessId": "2",\
"startedAt": "2019-08-24T14:15:22Z",\
"stoppedAt": "2019-08-24T14:15:22Z",\
"workflowId": "1000",\
"waitTill": "2019-08-24T14:15:22Z",\
"customData": { }}],
"nextCursor": "MTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDA"}`

## [tag/Execution/paths/~1executions~1{id}/get](https://docs.n8n.io/api/api-reference/#tag/Execution/paths/~1executions~1{id}/get) Retrieve an execution

Retrieve an execution from your instance.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                                    |
| -------------- | ---------------------------------- |
| id<br>required | number<br>The ID of the execution. |

##### query Parameters

|             |                                                                     |
| ----------- | ------------------------------------------------------------------- |
| includeData | boolean<br>Whether or not to include the execution's detailed data. |

### Responses

**200**

Operation successful.

**401**

Unauthorized

**404**

The specified resource was not found.

get/executions/{id}

https://docs.n8n.io/api/v1/executions/{id}

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"id": 1000,
"data": { },
"finished": true,
"mode": "cli",
"retryOf": 0,
"retrySuccessId": "2",
"startedAt": "2019-08-24T14:15:22Z",
"stoppedAt": "2019-08-24T14:15:22Z",
"workflowId": "1000",
"waitTill": "2019-08-24T14:15:22Z",
"customData": { }}`

## [tag/Execution/paths/~1executions~1{id}/delete](https://docs.n8n.io/api/api-reference/#tag/Execution/paths/~1executions~1{id}/delete) Delete an execution

Deletes an execution from your instance.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                                    |
| -------------- | ---------------------------------- |
| id<br>required | number<br>The ID of the execution. |

### Responses

**200**

Operation successful.

**401**

Unauthorized

**404**

The specified resource was not found.

delete/executions/{id}

https://docs.n8n.io/api/v1/executions/{id}

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"id": 1000,
"data": { },
"finished": true,
"mode": "cli",
"retryOf": 0,
"retrySuccessId": "2",
"startedAt": "2019-08-24T14:15:22Z",
"stoppedAt": "2019-08-24T14:15:22Z",
"workflowId": "1000",
"waitTill": "2019-08-24T14:15:22Z",
"customData": { }}`

## [tag/Workflow](https://docs.n8n.io/api/api-reference/#tag/Workflow) Workflow

Operations about workflows

## [tag/Workflow/paths/~1workflows/post](https://docs.n8n.io/api/api-reference/#tag/Workflow/paths/~1workflows/post) Create a workflow

Create a workflow in your instance.

##### Authorizations:

_ApiKeyAuth_

##### Request Body schema: application/json required

Created workflow object.

|                         |                                      |
| ----------------------- | ------------------------------------ |
| name<br>required        | string                               |
| nodes<br>required       | Array of objects (node)              |
| connections<br>required | object                               |
| settings<br>required    | object (workflowSettings)            |
| staticData              | (string or null) or (object or null) |

### Responses

**200**

A workflow object

**400**

The request is invalid or provides malformed data.

**401**

Unauthorized

post/workflows

https://docs.n8n.io/api/v1/workflows

### Request samples

- Payload

Content type

application/json

Copy
Expand all Collapse all

`{
"name": "Workflow 1",
"nodes": [\
{\
"id": "0f5532f9-36ba-4bef-86c7-30d607400b15",\
"name": "Jira",\
"webhookId": "string",\
"disabled": true,\
"notesInFlow": true,\
"notes": "string",\
"type": "n8n-nodes-base.Jira",\
"typeVersion": 1,\
"executeOnce": false,\
"alwaysOutputData": false,\
"retryOnFail": false,\
"maxTries": 0,\
"waitBetweenTries": 0,\
"continueOnFail": false,\
"onError": "stopWorkflow",\
"position": [\
-100,\
80],\
"parameters": {\
"additionalProperties": { }},\
"credentials": {\
"jiraSoftwareCloudApi": {\
"id": "35",\
"name": "jiraApi"}}}],
"connections": {
"main": [\
{\
"node": "Jira",\
"type": "main",\
"index": 0}]},
"settings": {
"saveExecutionProgress": true,
"saveManualExecutions": true,
"saveDataErrorExecution": "all",
"saveDataSuccessExecution": "all",
"executionTimeout": 3600,
"errorWorkflow": "VzqKEW0ShTXA5vPj",
"timezone": "America/New_York",
"executionOrder": "v1"},
"staticData": {
"lastId": 1}}`

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"id": "2tUt1wbLX592XDdX",
"name": "Workflow 1",
"active": true,
"createdAt": "2019-08-24T14:15:22Z",
"updatedAt": "2019-08-24T14:15:22Z",
"nodes": [\
{\
"id": "0f5532f9-36ba-4bef-86c7-30d607400b15",\
"name": "Jira",\
"webhookId": "string",\
"disabled": true,\
"notesInFlow": true,\
"notes": "string",\
"type": "n8n-nodes-base.Jira",\
"typeVersion": 1,\
"executeOnce": false,\
"alwaysOutputData": false,\
"retryOnFail": false,\
"maxTries": 0,\
"waitBetweenTries": 0,\
"continueOnFail": false,\
"onError": "stopWorkflow",\
"position": [\
-100,\
80],\
"parameters": {\
"additionalProperties": { }},\
"credentials": {\
"jiraSoftwareCloudApi": {\
"id": "35",\
"name": "jiraApi"}},\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}],
"connections": {
"main": [\
{\
"node": "Jira",\
"type": "main",\
"index": 0}]},
"settings": {
"saveExecutionProgress": true,
"saveManualExecutions": true,
"saveDataErrorExecution": "all",
"saveDataSuccessExecution": "all",
"executionTimeout": 3600,
"errorWorkflow": "VzqKEW0ShTXA5vPj",
"timezone": "America/New_York",
"executionOrder": "v1"},
"staticData": {
"lastId": 1},
"tags": [\
{\
"id": "2tUt1wbLX592XDdX",\
"name": "Production",\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}]}`

## [tag/Workflow/paths/~1workflows/get](https://docs.n8n.io/api/api-reference/#tag/Workflow/paths/~1workflows/get) Retrieve all workflows

Retrieve all workflows from your instance.

##### Authorizations:

_ApiKeyAuth_

##### query Parameters

|                   |                                                                                                                                                                                                                       |
| ----------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| active            | boolean<br>Example: active=true                                                                                                                                                                                       |
| tags              | string<br>Example: tags=test,production                                                                                                                                                                               |
| name              | string<br>Example: name=My Workflow                                                                                                                                                                                   |
| projectId         | string<br>Example: projectId=VmwOO9HeTEj20kxM                                                                                                                                                                         |
| excludePinnedData | boolean<br>Example: excludePinnedData=true<br>Set this to avoid retrieving pinned data                                                                                                                                |
| limit             | number <= 250 <br>Default: 100<br>Example: limit=100<br>The maximum number of items to return.                                                                                                                        |
| cursor            | string<br>Paginate by setting the cursor parameter to the nextCursor attribute returned by the previous request's response. Default value fetches the first "page" of the collection. See pagination for more detail. |

### Responses

**200**

Operation successful.

**401**

Unauthorized

get/workflows

https://docs.n8n.io/api/v1/workflows

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"data": [\
{\
"id": "2tUt1wbLX592XDdX",\
"name": "Workflow 1",\
"active": true,\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z",\
"nodes": [\
{\
"id": "0f5532f9-36ba-4bef-86c7-30d607400b15",\
"name": "Jira",\
"webhookId": "string",\
"disabled": true,\
"notesInFlow": true,\
"notes": "string",\
"type": "n8n-nodes-base.Jira",\
"typeVersion": 1,\
"executeOnce": false,\
"alwaysOutputData": false,\
"retryOnFail": false,\
"maxTries": 0,\
"waitBetweenTries": 0,\
"continueOnFail": false,\
"onError": "stopWorkflow",\
"position": [\
-100,\
80],\
"parameters": {\
"additionalProperties": { }},\
"credentials": {\
"jiraSoftwareCloudApi": {\
"id": "35",\
"name": "jiraApi"}},\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}],\
"connections": {\
"main": [\
{\
"node": "Jira",\
"type": "main",\
"index": 0}]},\
"settings": {\
"saveExecutionProgress": true,\
"saveManualExecutions": true,\
"saveDataErrorExecution": "all",\
"saveDataSuccessExecution": "all",\
"executionTimeout": 3600,\
"errorWorkflow": "VzqKEW0ShTXA5vPj",\
"timezone": "America/New_York",\
"executionOrder": "v1"},\
"staticData": {\
"lastId": 1},\
"tags": [\
{\
"id": "2tUt1wbLX592XDdX",\
"name": "Production",\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}]}],
"nextCursor": "MTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDA"}`

## [tag/Workflow/paths/~1workflows~1{id}/get](https://docs.n8n.io/api/api-reference/#tag/Workflow/paths/~1workflows~1{id}/get) Retrieves a workflow

Retrieves a workflow.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                                   |
| -------------- | --------------------------------- |
| id<br>required | string<br>The ID of the workflow. |

##### query Parameters

|                   |                                                                                        |
| ----------------- | -------------------------------------------------------------------------------------- |
| excludePinnedData | boolean<br>Example: excludePinnedData=true<br>Set this to avoid retrieving pinned data |

### Responses

**200**

Operation successful.

**401**

Unauthorized

**404**

The specified resource was not found.

get/workflows/{id}

https://docs.n8n.io/api/v1/workflows/{id}

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"id": "2tUt1wbLX592XDdX",
"name": "Workflow 1",
"active": true,
"createdAt": "2019-08-24T14:15:22Z",
"updatedAt": "2019-08-24T14:15:22Z",
"nodes": [\
{\
"id": "0f5532f9-36ba-4bef-86c7-30d607400b15",\
"name": "Jira",\
"webhookId": "string",\
"disabled": true,\
"notesInFlow": true,\
"notes": "string",\
"type": "n8n-nodes-base.Jira",\
"typeVersion": 1,\
"executeOnce": false,\
"alwaysOutputData": false,\
"retryOnFail": false,\
"maxTries": 0,\
"waitBetweenTries": 0,\
"continueOnFail": false,\
"onError": "stopWorkflow",\
"position": [\
-100,\
80],\
"parameters": {\
"additionalProperties": { }},\
"credentials": {\
"jiraSoftwareCloudApi": {\
"id": "35",\
"name": "jiraApi"}},\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}],
"connections": {
"main": [\
{\
"node": "Jira",\
"type": "main",\
"index": 0}]},
"settings": {
"saveExecutionProgress": true,
"saveManualExecutions": true,
"saveDataErrorExecution": "all",
"saveDataSuccessExecution": "all",
"executionTimeout": 3600,
"errorWorkflow": "VzqKEW0ShTXA5vPj",
"timezone": "America/New_York",
"executionOrder": "v1"},
"staticData": {
"lastId": 1},
"tags": [\
{\
"id": "2tUt1wbLX592XDdX",\
"name": "Production",\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}]}`

## [tag/Workflow/paths/~1workflows~1{id}/delete](https://docs.n8n.io/api/api-reference/#tag/Workflow/paths/~1workflows~1{id}/delete) Delete a workflow

Deletes a workflow.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                                   |
| -------------- | --------------------------------- |
| id<br>required | string<br>The ID of the workflow. |

### Responses

**200**

Operation successful.

**401**

Unauthorized

**404**

The specified resource was not found.

delete/workflows/{id}

https://docs.n8n.io/api/v1/workflows/{id}

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"id": "2tUt1wbLX592XDdX",
"name": "Workflow 1",
"active": true,
"createdAt": "2019-08-24T14:15:22Z",
"updatedAt": "2019-08-24T14:15:22Z",
"nodes": [\
{\
"id": "0f5532f9-36ba-4bef-86c7-30d607400b15",\
"name": "Jira",\
"webhookId": "string",\
"disabled": true,\
"notesInFlow": true,\
"notes": "string",\
"type": "n8n-nodes-base.Jira",\
"typeVersion": 1,\
"executeOnce": false,\
"alwaysOutputData": false,\
"retryOnFail": false,\
"maxTries": 0,\
"waitBetweenTries": 0,\
"continueOnFail": false,\
"onError": "stopWorkflow",\
"position": [\
-100,\
80],\
"parameters": {\
"additionalProperties": { }},\
"credentials": {\
"jiraSoftwareCloudApi": {\
"id": "35",\
"name": "jiraApi"}},\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}],
"connections": {
"main": [\
{\
"node": "Jira",\
"type": "main",\
"index": 0}]},
"settings": {
"saveExecutionProgress": true,
"saveManualExecutions": true,
"saveDataErrorExecution": "all",
"saveDataSuccessExecution": "all",
"executionTimeout": 3600,
"errorWorkflow": "VzqKEW0ShTXA5vPj",
"timezone": "America/New_York",
"executionOrder": "v1"},
"staticData": {
"lastId": 1},
"tags": [\
{\
"id": "2tUt1wbLX592XDdX",\
"name": "Production",\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}]}`

## [tag/Workflow/paths/~1workflows~1{id}/put](https://docs.n8n.io/api/api-reference/#tag/Workflow/paths/~1workflows~1{id}/put) Update a workflow

Update a workflow.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                                   |
| -------------- | --------------------------------- |
| id<br>required | string<br>The ID of the workflow. |

##### Request Body schema: application/json required

Updated workflow object.

|                         |                                      |
| ----------------------- | ------------------------------------ |
| name<br>required        | string                               |
| nodes<br>required       | Array of objects (node)              |
| connections<br>required | object                               |
| settings<br>required    | object (workflowSettings)            |
| staticData              | (string or null) or (object or null) |

### Responses

**200**

Workflow object

**400**

The request is invalid or provides malformed data.

**401**

Unauthorized

**404**

The specified resource was not found.

put/workflows/{id}

https://docs.n8n.io/api/v1/workflows/{id}

### Request samples

- Payload

Content type

application/json

Copy
Expand all Collapse all

`{
"name": "Workflow 1",
"nodes": [\
{\
"id": "0f5532f9-36ba-4bef-86c7-30d607400b15",\
"name": "Jira",\
"webhookId": "string",\
"disabled": true,\
"notesInFlow": true,\
"notes": "string",\
"type": "n8n-nodes-base.Jira",\
"typeVersion": 1,\
"executeOnce": false,\
"alwaysOutputData": false,\
"retryOnFail": false,\
"maxTries": 0,\
"waitBetweenTries": 0,\
"continueOnFail": false,\
"onError": "stopWorkflow",\
"position": [\
-100,\
80],\
"parameters": {\
"additionalProperties": { }},\
"credentials": {\
"jiraSoftwareCloudApi": {\
"id": "35",\
"name": "jiraApi"}}}],
"connections": {
"main": [\
{\
"node": "Jira",\
"type": "main",\
"index": 0}]},
"settings": {
"saveExecutionProgress": true,
"saveManualExecutions": true,
"saveDataErrorExecution": "all",
"saveDataSuccessExecution": "all",
"executionTimeout": 3600,
"errorWorkflow": "VzqKEW0ShTXA5vPj",
"timezone": "America/New_York",
"executionOrder": "v1"},
"staticData": {
"lastId": 1}}`

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"id": "2tUt1wbLX592XDdX",
"name": "Workflow 1",
"active": true,
"createdAt": "2019-08-24T14:15:22Z",
"updatedAt": "2019-08-24T14:15:22Z",
"nodes": [\
{\
"id": "0f5532f9-36ba-4bef-86c7-30d607400b15",\
"name": "Jira",\
"webhookId": "string",\
"disabled": true,\
"notesInFlow": true,\
"notes": "string",\
"type": "n8n-nodes-base.Jira",\
"typeVersion": 1,\
"executeOnce": false,\
"alwaysOutputData": false,\
"retryOnFail": false,\
"maxTries": 0,\
"waitBetweenTries": 0,\
"continueOnFail": false,\
"onError": "stopWorkflow",\
"position": [\
-100,\
80],\
"parameters": {\
"additionalProperties": { }},\
"credentials": {\
"jiraSoftwareCloudApi": {\
"id": "35",\
"name": "jiraApi"}},\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}],
"connections": {
"main": [\
{\
"node": "Jira",\
"type": "main",\
"index": 0}]},
"settings": {
"saveExecutionProgress": true,
"saveManualExecutions": true,
"saveDataErrorExecution": "all",
"saveDataSuccessExecution": "all",
"executionTimeout": 3600,
"errorWorkflow": "VzqKEW0ShTXA5vPj",
"timezone": "America/New_York",
"executionOrder": "v1"},
"staticData": {
"lastId": 1},
"tags": [\
{\
"id": "2tUt1wbLX592XDdX",\
"name": "Production",\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}]}`

## [tag/Workflow/paths/~1workflows~1{id}~1activate/post](https://docs.n8n.io/api/api-reference/#tag/Workflow/paths/~1workflows~1{id}~1activate/post) Activate a workflow

Active a workflow.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                                   |
| -------------- | --------------------------------- |
| id<br>required | string<br>The ID of the workflow. |

### Responses

**200**

Workflow object

**401**

Unauthorized

**404**

The specified resource was not found.

post/workflows/{id}/activate

https://docs.n8n.io/api/v1/workflows/{id}/activate

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"id": "2tUt1wbLX592XDdX",
"name": "Workflow 1",
"active": true,
"createdAt": "2019-08-24T14:15:22Z",
"updatedAt": "2019-08-24T14:15:22Z",
"nodes": [\
{\
"id": "0f5532f9-36ba-4bef-86c7-30d607400b15",\
"name": "Jira",\
"webhookId": "string",\
"disabled": true,\
"notesInFlow": true,\
"notes": "string",\
"type": "n8n-nodes-base.Jira",\
"typeVersion": 1,\
"executeOnce": false,\
"alwaysOutputData": false,\
"retryOnFail": false,\
"maxTries": 0,\
"waitBetweenTries": 0,\
"continueOnFail": false,\
"onError": "stopWorkflow",\
"position": [\
-100,\
80],\
"parameters": {\
"additionalProperties": { }},\
"credentials": {\
"jiraSoftwareCloudApi": {\
"id": "35",\
"name": "jiraApi"}},\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}],
"connections": {
"main": [\
{\
"node": "Jira",\
"type": "main",\
"index": 0}]},
"settings": {
"saveExecutionProgress": true,
"saveManualExecutions": true,
"saveDataErrorExecution": "all",
"saveDataSuccessExecution": "all",
"executionTimeout": 3600,
"errorWorkflow": "VzqKEW0ShTXA5vPj",
"timezone": "America/New_York",
"executionOrder": "v1"},
"staticData": {
"lastId": 1},
"tags": [\
{\
"id": "2tUt1wbLX592XDdX",\
"name": "Production",\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}]}`

## [tag/Workflow/paths/~1workflows~1{id}~1deactivate/post](https://docs.n8n.io/api/api-reference/#tag/Workflow/paths/~1workflows~1{id}~1deactivate/post) Deactivate a workflow

Deactivate a workflow.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                                   |
| -------------- | --------------------------------- |
| id<br>required | string<br>The ID of the workflow. |

### Responses

**200**

Workflow object

**401**

Unauthorized

**404**

The specified resource was not found.

post/workflows/{id}/deactivate

https://docs.n8n.io/api/v1/workflows/{id}/deactivate

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"id": "2tUt1wbLX592XDdX",
"name": "Workflow 1",
"active": true,
"createdAt": "2019-08-24T14:15:22Z",
"updatedAt": "2019-08-24T14:15:22Z",
"nodes": [\
{\
"id": "0f5532f9-36ba-4bef-86c7-30d607400b15",\
"name": "Jira",\
"webhookId": "string",\
"disabled": true,\
"notesInFlow": true,\
"notes": "string",\
"type": "n8n-nodes-base.Jira",\
"typeVersion": 1,\
"executeOnce": false,\
"alwaysOutputData": false,\
"retryOnFail": false,\
"maxTries": 0,\
"waitBetweenTries": 0,\
"continueOnFail": false,\
"onError": "stopWorkflow",\
"position": [\
-100,\
80],\
"parameters": {\
"additionalProperties": { }},\
"credentials": {\
"jiraSoftwareCloudApi": {\
"id": "35",\
"name": "jiraApi"}},\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}],
"connections": {
"main": [\
{\
"node": "Jira",\
"type": "main",\
"index": 0}]},
"settings": {
"saveExecutionProgress": true,
"saveManualExecutions": true,
"saveDataErrorExecution": "all",
"saveDataSuccessExecution": "all",
"executionTimeout": 3600,
"errorWorkflow": "VzqKEW0ShTXA5vPj",
"timezone": "America/New_York",
"executionOrder": "v1"},
"staticData": {
"lastId": 1},
"tags": [\
{\
"id": "2tUt1wbLX592XDdX",\
"name": "Production",\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}]}`

## [tag/Workflow/paths/~1workflows~1{id}~1transfer/put](https://docs.n8n.io/api/api-reference/#tag/Workflow/paths/~1workflows~1{id}~1transfer/put) Transfer a workflow to another project.

Transfer a workflow to another project.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                                   |
| -------------- | --------------------------------- |
| id<br>required | string<br>The ID of the workflow. |

##### Request Body schema: application/json required

Destination project information for the workflow transfer.

|                                  |                                                              |
| -------------------------------- | ------------------------------------------------------------ |
| destinationProjectId<br>required | string<br>The ID of the project to transfer the workflow to. |

### Responses

**200**

Operation successful.

**400**

The request is invalid or provides malformed data.

**401**

Unauthorized

**404**

The specified resource was not found.

put/workflows/{id}/transfer

https://docs.n8n.io/api/v1/workflows/{id}/transfer

### Request samples

- Payload

Content type

application/json

Copy

`{
"destinationProjectId": "string"}`

## [tag/Workflow/paths/~1credentials~1{id}~1transfer/put](https://docs.n8n.io/api/api-reference/#tag/Workflow/paths/~1credentials~1{id}~1transfer/put) Transfer a credential to another project.

Transfer a credential to another project.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                                     |
| -------------- | ----------------------------------- |
| id<br>required | string<br>The ID of the credential. |

##### Request Body schema: application/json required

Destination project for the credential transfer.

|                                  |                                                                |
| -------------------------------- | -------------------------------------------------------------- |
| destinationProjectId<br>required | string<br>The ID of the project to transfer the credential to. |

### Responses

**200**

Operation successful.

**400**

The request is invalid or provides malformed data.

**401**

Unauthorized

**404**

The specified resource was not found.

put/credentials/{id}/transfer

https://docs.n8n.io/api/v1/credentials/{id}/transfer

### Request samples

- Payload

Content type

application/json

Copy

`{
"destinationProjectId": "string"}`

## [tag/Workflow/paths/~1workflows~1{id}~1tags/get](https://docs.n8n.io/api/api-reference/#tag/Workflow/paths/~1workflows~1{id}~1tags/get) Get workflow tags

Get workflow tags.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                                   |
| -------------- | --------------------------------- |
| id<br>required | string<br>The ID of the workflow. |

### Responses

**200**

List of tags

**400**

The request is invalid or provides malformed data.

**401**

Unauthorized

**404**

The specified resource was not found.

get/workflows/{id}/tags

https://docs.n8n.io/api/v1/workflows/{id}/tags

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`[\
{\
"id": "2tUt1wbLX592XDdX",\
"name": "Production",\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}]`

## [tag/Workflow/paths/~1workflows~1{id}~1tags/put](https://docs.n8n.io/api/api-reference/#tag/Workflow/paths/~1workflows~1{id}~1tags/put) Update tags of a workflow

Update tags of a workflow.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                                   |
| -------------- | --------------------------------- |
| id<br>required | string<br>The ID of the workflow. |

##### Request Body schema: application/json required

List of tags

Array

|                |        |
| -------------- | ------ |
| id<br>required | string |

### Responses

**200**

List of tags after add the tag

**400**

The request is invalid or provides malformed data.

**401**

Unauthorized

**404**

The specified resource was not found.

put/workflows/{id}/tags

https://docs.n8n.io/api/v1/workflows/{id}/tags

### Request samples

- Payload

Content type

application/json

Copy
Expand all Collapse all

`[\
{\
"id": "2tUt1wbLX592XDdX"}]`

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`[\
{\
"id": "2tUt1wbLX592XDdX",\
"name": "Production",\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}]`

## [tag/Credential](https://docs.n8n.io/api/api-reference/#tag/Credential) Credential

Operations about credentials

## [tag/Credential/paths/~1credentials/post](https://docs.n8n.io/api/api-reference/#tag/Credential/paths/~1credentials/post) Create a credential

Creates a credential that can be used by nodes of the specified type.

##### Authorizations:

_ApiKeyAuth_

##### Request Body schema: application/json required

Credential to be created.

|                  |        |
| ---------------- | ------ |
| name<br>required | string |
| type<br>required | string |
| data<br>required | object |

### Responses

**200**

Operation successful.

**401**

Unauthorized

**415**

Unsupported media type.

post/credentials

https://docs.n8n.io/api/v1/credentials

### Request samples

- Payload

Content type

application/json

Copy
Expand all Collapse all

`{
"name": "Joe's Github Credentials",
"type": "github",
"data": {
"token": "ada612vad6fa5df4adf5a5dsf4389adsf76da7s"}}`

### Response samples

- 200

Content type

application/json

Copy

`{
"id": "vHxaz5UaCghVYl9C",
"name": "John's Github account",
"type": "github",
"createdAt": "2022-04-29T11:02:29.842Z",
"updatedAt": "2022-04-29T11:02:29.842Z"}`

## [tag/Credential/operation/deleteCredential](https://docs.n8n.io/api/api-reference/#tag/Credential/operation/deleteCredential) Delete credential by ID

Deletes a credential from your instance. You must be the owner of the credentials

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                                                      |
| -------------- | ---------------------------------------------------- |
| id<br>required | string<br>The credential ID that needs to be deleted |

### Responses

**200**

Operation successful.

**401**

Unauthorized

**404**

The specified resource was not found.

delete/credentials/{id}

https://docs.n8n.io/api/v1/credentials/{id}

### Response samples

- 200

Content type

application/json

Copy

`{
"id": "R2DjclaysHbqn778",
"name": "Joe's Github Credentials",
"type": "github",
"createdAt": "2022-04-29T11:02:29.842Z",
"updatedAt": "2022-04-29T11:02:29.842Z"}`

## [tag/Credential/paths/~1credentials~1schema~1{credentialTypeName}/get](https://docs.n8n.io/api/api-reference/#tag/Credential/paths/~1credentials~1schema~1{credentialTypeName}/get) Show credential data schema

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                                |                                                                        |
| ------------------------------ | ---------------------------------------------------------------------- |
| credentialTypeName<br>required | string<br>The credential type name that you want to get the schema for |

### Responses

**200**

Operation successful.

**401**

Unauthorized

**404**

The specified resource was not found.

get/credentials/schema/{credentialTypeName}

https://docs.n8n.io/api/v1/credentials/schema/{credentialTypeName}

### Response samples

- 200

Content type

application/json

Example

freshdeskApislackOAuth2ApifreshdeskApi

Copy
Expand all Collapse all

`{
"additionalProperties": false,
"type": "object",
"properties": {
"apiKey": {
"type": "string"},
"domain": {
"type": "string"}},
"required": [\
"apiKey",\
"domain"]}`

## [tag/Tags](https://docs.n8n.io/api/api-reference/#tag/Tags) Tags

Operations about tags

## [tag/Tags/paths/~1tags/post](https://docs.n8n.io/api/api-reference/#tag/Tags/paths/~1tags/post) Create a tag

Create a tag in your instance.

##### Authorizations:

_ApiKeyAuth_

##### Request Body schema: application/json required

Created tag object.

|                  |        |
| ---------------- | ------ |
| name<br>required | string |

### Responses

**201**

A tag object

**400**

The request is invalid or provides malformed data.

**401**

Unauthorized

**409**

Conflict

post/tags

https://docs.n8n.io/api/v1/tags

### Request samples

- Payload

Content type

application/json

Copy

`{
"name": "Production"}`

### Response samples

- 201

Content type

application/json

Copy

`{
"id": "2tUt1wbLX592XDdX",
"name": "Production",
"createdAt": "2019-08-24T14:15:22Z",
"updatedAt": "2019-08-24T14:15:22Z"}`

## [tag/Tags/paths/~1tags/get](https://docs.n8n.io/api/api-reference/#tag/Tags/paths/~1tags/get) Retrieve all tags

Retrieve all tags from your instance.

##### Authorizations:

_ApiKeyAuth_

##### query Parameters

|        |                                                                                                                                                                                                                       |
| ------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| limit  | number <= 250 <br>Default: 100<br>Example: limit=100<br>The maximum number of items to return.                                                                                                                        |
| cursor | string<br>Paginate by setting the cursor parameter to the nextCursor attribute returned by the previous request's response. Default value fetches the first "page" of the collection. See pagination for more detail. |

### Responses

**200**

Operation successful.

**401**

Unauthorized

get/tags

https://docs.n8n.io/api/v1/tags

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"data": [\
{\
"id": "2tUt1wbLX592XDdX",\
"name": "Production",\
"createdAt": "2019-08-24T14:15:22Z",\
"updatedAt": "2019-08-24T14:15:22Z"}],
"nextCursor": "MTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDA"}`

## [tag/Tags/paths/~1tags~1{id}/get](https://docs.n8n.io/api/api-reference/#tag/Tags/paths/~1tags~1{id}/get) Retrieves a tag

Retrieves a tag.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                              |
| -------------- | ---------------------------- |
| id<br>required | string<br>The ID of the tag. |

### Responses

**200**

Operation successful.

**401**

Unauthorized

**404**

The specified resource was not found.

get/tags/{id}

https://docs.n8n.io/api/v1/tags/{id}

### Response samples

- 200

Content type

application/json

Copy

`{
"id": "2tUt1wbLX592XDdX",
"name": "Production",
"createdAt": "2019-08-24T14:15:22Z",
"updatedAt": "2019-08-24T14:15:22Z"}`

## [tag/Tags/paths/~1tags~1{id}/delete](https://docs.n8n.io/api/api-reference/#tag/Tags/paths/~1tags~1{id}/delete) Delete a tag

Deletes a tag.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                              |
| -------------- | ---------------------------- |
| id<br>required | string<br>The ID of the tag. |

### Responses

**200**

Operation successful.

**401**

Unauthorized

**403**

Forbidden

**404**

The specified resource was not found.

delete/tags/{id}

https://docs.n8n.io/api/v1/tags/{id}

### Response samples

- 200

Content type

application/json

Copy

`{
"id": "2tUt1wbLX592XDdX",
"name": "Production",
"createdAt": "2019-08-24T14:15:22Z",
"updatedAt": "2019-08-24T14:15:22Z"}`

## [tag/Tags/paths/~1tags~1{id}/put](https://docs.n8n.io/api/api-reference/#tag/Tags/paths/~1tags~1{id}/put) Update a tag

Update a tag.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                              |
| -------------- | ---------------------------- |
| id<br>required | string<br>The ID of the tag. |

##### Request Body schema: application/json required

Updated tag object.

|                  |        |
| ---------------- | ------ |
| name<br>required | string |

### Responses

**200**

Tag object

**400**

The request is invalid or provides malformed data.

**401**

Unauthorized

**404**

The specified resource was not found.

**409**

Conflict

put/tags/{id}

https://docs.n8n.io/api/v1/tags/{id}

### Request samples

- Payload

Content type

application/json

Copy

`{
"name": "Production"}`

### Response samples

- 200

Content type

application/json

Copy

`{
"id": "2tUt1wbLX592XDdX",
"name": "Production",
"createdAt": "2019-08-24T14:15:22Z",
"updatedAt": "2019-08-24T14:15:22Z"}`

## [tag/SourceControl](https://docs.n8n.io/api/api-reference/#tag/SourceControl) SourceControl

Operations about source control

## [tag/SourceControl/paths/~1source-control~1pull/post](https://docs.n8n.io/api/api-reference/#tag/SourceControl/paths/~1source-control~1pull/post) Pull changes from the remote repository

Requires the Source Control feature to be licensed and connected to a repository.

##### Authorizations:

_ApiKeyAuth_

##### Request Body schema: application/json required

Pull options

|           |         |
| --------- | ------- |
| force     | boolean |
| variables | object  |

### Responses

**200**

Import result

**400**

The request is invalid or provides malformed data.

**409**

Conflict

post/source-control/pull

https://docs.n8n.io/api/v1/source-control/pull

### Request samples

- Payload

Content type

application/json

Copy
Expand all Collapse all

`{
"force": true,
"variables": {
"foo": "bar"}}`

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"variables": {
"added": [\
"string"],
"changed": [\
"string"]},
"credentials": [\
{\
"id": "string",\
"name": "string",\
"type": "string"}],
"workflows": [\
{\
"id": "string",\
"name": "string"}],
"tags": {
"tags": [\
{\
"id": "string",\
"name": "string"}],
"mappings": [\
{\
"workflowId": "string",\
"tagId": "string"}]}}`

## [tag/Variables](https://docs.n8n.io/api/api-reference/#tag/Variables) Variables

Operations about variables

## [tag/Variables/paths/~1variables/post](https://docs.n8n.io/api/api-reference/#tag/Variables/paths/~1variables/post) Create a variable

Create a variable in your instance.

##### Authorizations:

_ApiKeyAuth_

##### Request Body schema: application/json required

Payload for variable to create.

|                   |        |
| ----------------- | ------ |
| key<br>required   | string |
| value<br>required | string |

### Responses

**201**

Operation successful.

**400**

The request is invalid or provides malformed data.

**401**

Unauthorized

post/variables

https://docs.n8n.io/api/v1/variables

### Request samples

- Payload

Content type

application/json

Copy

`{
"key": "string",
"value": "test"}`

## [tag/Variables/paths/~1variables/get](https://docs.n8n.io/api/api-reference/#tag/Variables/paths/~1variables/get) Retrieve variables

Retrieve variables from your instance.

##### Authorizations:

_ApiKeyAuth_

##### query Parameters

|        |                                                                                                                                                                                                                       |
| ------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| limit  | number <= 250 <br>Default: 100<br>Example: limit=100<br>The maximum number of items to return.                                                                                                                        |
| cursor | string<br>Paginate by setting the cursor parameter to the nextCursor attribute returned by the previous request's response. Default value fetches the first "page" of the collection. See pagination for more detail. |

### Responses

**200**

Operation successful.

**401**

Unauthorized

get/variables

https://docs.n8n.io/api/v1/variables

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"data": [\
{\
"id": "string",\
"key": "string",\
"value": "test",\
"type": "string"}],
"nextCursor": "MTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDA"}`

## [tag/Variables/paths/~1variables~1{id}/delete](https://docs.n8n.io/api/api-reference/#tag/Variables/paths/~1variables~1{id}/delete) Delete a variable

Delete a variable from your instance.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                |                                   |
| -------------- | --------------------------------- |
| id<br>required | string<br>The ID of the variable. |

### Responses

**204**

Operation successful.

**401**

Unauthorized

**404**

The specified resource was not found.

delete/variables/{id}

https://docs.n8n.io/api/v1/variables/{id}

## [tag/Projects](https://docs.n8n.io/api/api-reference/#tag/Projects) Projects

Operations about projects

## [tag/Projects/paths/~1projects/post](https://docs.n8n.io/api/api-reference/#tag/Projects/paths/~1projects/post) Create a project

Create a project in your instance.

##### Authorizations:

_ApiKeyAuth_

##### Request Body schema: application/json required

Payload for project to create.

|                  |        |
| ---------------- | ------ |
| name<br>required | string |

### Responses

**201**

Operation successful.

**400**

The request is invalid or provides malformed data.

**401**

Unauthorized

post/projects

https://docs.n8n.io/api/v1/projects

### Request samples

- Payload

Content type

application/json

Copy

`{
"name": "string"}`

## [tag/Projects/paths/~1projects/get](https://docs.n8n.io/api/api-reference/#tag/Projects/paths/~1projects/get) Retrieve projects

Retrieve projects from your instance.

##### Authorizations:

_ApiKeyAuth_

##### query Parameters

|        |                                                                                                                                                                                                                       |
| ------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| limit  | number <= 250 <br>Default: 100<br>Example: limit=100<br>The maximum number of items to return.                                                                                                                        |
| cursor | string<br>Paginate by setting the cursor parameter to the nextCursor attribute returned by the previous request's response. Default value fetches the first "page" of the collection. See pagination for more detail. |

### Responses

**200**

Operation successful.

**401**

Unauthorized

get/projects

https://docs.n8n.io/api/v1/projects

### Response samples

- 200

Content type

application/json

Copy
Expand all Collapse all

`{
"data": [\
{\
"id": "string",\
"name": "string",\
"type": "string"}],
"nextCursor": "MTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDA"}`

## [tag/Projects/paths/~1projects~1{projectId}/delete](https://docs.n8n.io/api/api-reference/#tag/Projects/paths/~1projects~1{projectId}/delete) Delete a project

Delete a project from your instance.

##### Authorizations:

_ApiKeyAuth_

##### path Parameters

|                       |                                  |
| --------------------- | -------------------------------- |
| projectId<br>required | string<br>The ID of the project. |

### Responses

**204**

Operation successful.

**401**

Unauthorized

**403**

Forbidden

**404**

The specified resource was not found.

delete/projects/{projectId}

https://docs.n8n.io/api/v1/projects/{projectId}

## [tag/Project](https://docs.n8n.io/api/api-reference/#tag/Project) Project

## [tag/Project/paths/~1projects~1{projectId}/put](https://docs.n8n.io/api/api-reference/#tag/Project/paths/~1projects~1{projectId}/put) Update a project

Update a project.

##### Authorizations:

_ApiKeyAuth_

##### Request Body schema: application/json required

Updated project object.

|                  |        |
| ---------------- | ------ |
| name<br>required | string |

### Responses

**204**

Operation successful.

**400**

The request is invalid or provides malformed data.

**401**

Unauthorized

**403**

Forbidden

**404**

The specified resource was not found.

put/projects/{projectId}

https://docs.n8n.io/api/v1/projects/{projectId}

### Request samples

- Payload

Content type

application/json

Copy

`{
"name": "string"}`

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=1272718634.1744288897&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509682~102788824~102803279~102813109~102887800~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=2015450160)

## n8n Level 1 Course

[Skip to content](https://docs.n8n.io/courses/level-one/#level-one-introduction)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/courses/level-one/index.md "Edit this page")

# Level one: Introduction [\#](https://docs.n8n.io/courses/level-one/#level-one-introduction "Permanent link")

Welcome to the **n8n Course Level 1**!

## Is this course right for me? [\#](https://docs.n8n.io/courses/level-one/#is-this-course-right-for-me "Permanent link")

This course introduces you to the fundamental concepts within n8n and develops your low-code automation expertise.

This course is for you if you:

- Are starting to use n8n for the first time.
- Are looking for some extra help creating your first workflow.
- Want to automate processes in your personal or working life.

This course introduces n8n concepts and demonstrates practical workflow building without assuming any prior familiarity with n8n. If you'd like to get a feel for the basics without as much explanation, consult our [quickstart guide](https://docs.n8n.io/try-it-out/tutorial-first-workflow/).

## What will I learn in this course? [\#](https://docs.n8n.io/courses/level-one/#what-will-i-learn-in-this-course "Permanent link")

We believe in learning by doing. You can expect some theoretical information about the basic concepts and components of n8n, followed by practice of building workflows step by step.

By the end of this course you will know:

- How to set up n8n and navigate the Editor UI.
- How n8n structures data.
- How to configure different node parameters and add credentials.
- When and how to use conditional logic in workflows.
- How to schedule and control workflows.
- How to import, download, and share workflows with others.

You will build two workflows:

- A two-node workflow to get articles from Hacker News
- A seven-node workflow to help your client get records from a data warehouse, filter them, make calculations, and notify team members about the results

## What do I need to get started? [\#](https://docs.n8n.io/courses/level-one/#what-do-i-need-to-get-started "Permanent link")

1. **n8n set up**: You can use [n8n Cloud](https://docs.n8n.io/manage-cloud/overview/) (or the [self-hosted version](https://docs.n8n.io/hosting/installation/docker/) if you have experience hosting services).
2. **A course user ID**: [Sign up here](https://n8n-community.typeform.com/to/PDEMrevI) to get your unique ID and other credentials you will need in the course.
3. Basic knowledge of JavaScript and [APIs](https://n8n.io/blog/what-are-apis-how-to-use-them-with-no-code/) would be helpful, but isn't necessary.
4. An [account on the n8n community forum](https://community.n8n.io/) if you wish to receive a profile badge and avatar upon successful completion.

## How long does the course take? [\#](https://docs.n8n.io/courses/level-one/#how-long-does-the-course-take "Permanent link")

Completing the course should take around **two hours**. You don't have to complete it in one go; feel free to take breaks and resume whenever you are ready.

## How do I complete the course? [\#](https://docs.n8n.io/courses/level-one/#how-do-i-complete-the-course "Permanent link")

There are two milestones in this course that test your knowledge of what you have learned in the lessons:

- Building the [main workflow](https://docs.n8n.io/courses/level-one/chapter-5/chapter-5.1/)
- Passing the [quiz](https://n8n-community.typeform.com/to/JMoBXeGA) at the end of the course

Check your progress

You can always **check your progress** throughout the course by entering your unique ID [here](https://internal.users.n8n.cloud/webhook/course-level-1/verify).

If you complete the milestones above, you will get [**a badge and an avatar**](https://community.n8n.io/badges/104/completed-n8n-course-level-1) in your forum profile. You can then share your profile and course verification ID to showcase your n8n skills to others.

[Let's get started!](https://docs.n8n.io/courses/level-one/chapter-1/)

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Cloud Overview

[Skip to content](https://docs.n8n.io/manage-cloud/overview/#n8n-cloud)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/manage-cloud/overview.md "Edit this page")

# n8n Cloud [\#](https://docs.n8n.io/manage-cloud/overview/#n8n-cloud "Permanent link")

n8n Cloud is n8n's hosted solution. It provides:

- No technical set up or maintenance for your n8n instance
- Continual uptime monitoring
- Managed OAuth for authentication
- One-click upgrades to the newest n8n versions

[Sign up for n8n Cloud](https://www.n8n.io/)

Russia and Belarus

n8n Cloud isn't available in Russia and Belarus. Refer to this blog post: [Update on n8n cloud accounts in Russia and Belarus](https://n8n.io/blog/update-on-n8n-cloud-accounts-in-russia-and-belarus/) for more information.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=1917389083.1744299870&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509683~102788824~102803279~102813109~102887799~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953~103055464&z=326283410)

## Securing n8n

[Skip to content](https://docs.n8n.io/hosting/securing/overview/#securing-n8n)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/hosting/securing/overview.md "Edit this page")

# Securing n8n [\#](https://docs.n8n.io/hosting/securing/overview/#securing-n8n "Permanent link")

Securing your n8n instance can take several forms.

At a high level, you can:

- Conduct a [security audit](https://docs.n8n.io/hosting/securing/security-audit/) to identify security risks.
- [Set up SSL](https://docs.n8n.io/hosting/securing/set-up-ssl/) to enforce secure connections.
- [Set up Single Sign-On](https://docs.n8n.io/hosting/securing/set-up-sso/) for user account management.
- Use [two-factor authentication (2FA)](https://docs.n8n.io/user-management/two-factor-auth/) for your users.

More granularly, consider blocking or opting out of features or data collection you don't want:

- [Disable the public API](https://docs.n8n.io/hosting/securing/disable-public-api/) if you aren't using it.
- [Opt out of data collection](https://docs.n8n.io/hosting/securing/telemetry-opt-out/) of the anonymous data n8n collects automatically.
- [Block certain nodes](https://docs.n8n.io/hosting/securing/blocking-nodes/) from being available to your users.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Cloud Concurrency

[Skip to content](https://docs.n8n.io/manage-cloud/concurrency/#cloud-concurrency)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/manage-cloud/concurrency.md "Edit this page")

# Cloud concurrency [\#](https://docs.n8n.io/manage-cloud/concurrency/#cloud-concurrency "Permanent link")

Only for n8n Cloud

This document discusses concurrency in n8n Cloud. Read [self-hosted n8n concurrency control](https://docs.n8n.io/hosting/scaling/concurrency-control/) to learn how concurrency works with self-hosted n8n instances.

Too many concurrent executions can cause performance degradation and unresponsiveness. To prevent this and improve instance stability, n8n sets concurrency limits for production executions in regular mode.

Any executions beyond the limits queue for later processing. These executions remain in the queue until concurrency capacity frees up, and are then processed in FIFO order.

## Concurrency limits [\#](https://docs.n8n.io/manage-cloud/concurrency/#concurrency-limits "Permanent link")

n8n limits the number of concurrent executions for Cloud instances according to their plan:

- Starter and Trial: 5
- Pro (10k workflow executions, 15 active workflows): 20
- Pro (50k workflow executions, 50 active workflows): 50
- Enterprise (in regular mode): 200

You can view the number of active executions and your plan's concurrency limit at the top of a project's or workflow's executions tab.

## Details [\#](https://docs.n8n.io/manage-cloud/concurrency/#details "Permanent link")

Some other details about concurrency to keep in mind:

- Concurrency control applies only to production executions: those started from a webhook or trigger node. It doesn't apply to any other kinds, such as manual executions, sub-workflow executions, or error executions.
- [Test evaluations](https://docs.n8n.io/glossary/#evaluation-n8n) do not count towards concurrency limits. Your test evaluation concurrency limit is equal to, but separate from, your plan's regular concurrency limit.
- You can't retry queued executions. Cancelling or deleting a queued execution also removes it from the queue.
- On instance startup, n8n resumes queued executions up to the concurrency limit and re-enqueues the rest.

## Comparison to queue mode [\#](https://docs.n8n.io/manage-cloud/concurrency/#comparison-to-queue-mode "Permanent link")

Feature availability

Queue mode is available for Cloud Enterprise plans. To enable it, [contact n8n](https://n8n-community.typeform.com/to/y9X2YuGa).

Concurrency in queue mode is a separate mechanism from concurrency in regular mode. In queue mode, the concurrency settings determine how many jobs each worker can run in parallel. In regular mode, concurrency limits apply to the entire instance.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Level 2 Course

[Skip to content](https://docs.n8n.io/courses/level-two/#level-two-introduction)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/courses/level-two/index.md "Edit this page")

# Level two: Introduction [\#](https://docs.n8n.io/courses/level-two/#level-two-introduction "Permanent link")

Welcome to the **n8n Course Level 2**!

## Is this course right for me? [\#](https://docs.n8n.io/courses/level-two/#is-this-course-right-for-me "Permanent link")

This course is for you if you:

- Want to automate somewhat complex business processes.
- Want to dive deeper into n8n after taking the [Level 1 course](https://docs.n8n.io/courses/level-one/).

## What will I learn in this course? [\#](https://docs.n8n.io/courses/level-two/#what-will-i-learn-in-this-course "Permanent link")

The focus in this course is on working with data. You will learn how to:

- Use the data structure of n8n correctly.
- Process different data types (for example, XML, HTML, date, time, and binary data).
- Merge data from different sources (for example, a database, spreadsheet, or CRM).
- Use functions and JavaScript code in the [Code node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code/).
- Deal with error workflows and workflow errors.

You will learn all this by completing short practical exercises after the theoretical explanations and building a business workflow following instructions.

## What do I need to get started? [\#](https://docs.n8n.io/courses/level-two/#what-do-i-need-to-get-started "Permanent link")

To follow along this course (at a comfortable pace) you will need the following:

- **n8n set up**: You can use the [self-hosted version](https://docs.n8n.io/hosting/installation/npm/) or [n8n Cloud](https://docs.n8n.io/manage-cloud/overview/).
- **A user ID**: [Sign up here](https://n8n-community.typeform.com/to/HQoQ7nXg) to get your unique ID and other credentials you will need in the course.
- **Basic n8n skills**: We strongly recommend taking the [Level 1 course](https://docs.n8n.io/courses/level-one/) before this one.
- **Basic JavaScript understanding**

## How long does the course take? [\#](https://docs.n8n.io/courses/level-two/#how-long-does-the-course-take "Permanent link")

Completing the course should take around **two hours**. You don't have to complete it in one go; feel free to take breaks and resume whenever you are ready.

## How do I complete the course? [\#](https://docs.n8n.io/courses/level-two/#how-do-i-complete-the-course "Permanent link")

There are two milestones in this course that test your knowledge of what you have learned in the lessons:

- Building the [main workflow](https://docs.n8n.io/courses/level-two/chapter-5/chapter-5.0/)
- Passing the [quiz](https://n8n-community.typeform.com/to/r9hDbytg) at the end of the course

You can always **check your progress** throughout the course by entering your unique ID [here](https://internal.users.n8n.cloud/webhook/course-level-2/verify).

If you successfully complete the milestones above, you will get [**a badge and an avatar**](https://community.n8n.io/badges/105/completed-n8n-course-level-2) in your forum profile. You can then share your profile and course verification ID to showcase your n8n skills to others.

[Let's get started!](https://docs.n8n.io/courses/level-two/chapter-1/)

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Query JSON with JMESPath

[Skip to content](https://docs.n8n.io/code/cookbook/jmespath/#query-json-with-jmespath)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/code/cookbook/jmespath.md "Edit this page")

# Query JSON with JMESPath [\#](https://docs.n8n.io/code/cookbook/jmespath/#query-json-with-jmespath "Permanent link")

[JMESPath](https://jmespath.org/) is a query language for JSON that you can use to extract and transform elements from a JSON document. For full details of how to use JMESPath, refer to the [JMESPath documentation](https://jmespath.org/tutorial.html).

## The `jmespath()` method [\#](https://docs.n8n.io/code/cookbook/jmespath/#the-jmespath-method "Permanent link")

n8n provides a custom method, `jmespath()`. Use this method to perform a search on a JSON object using the JMESPath query language.

The basic syntax is:

[JavaScript](https://docs.n8n.io/code/cookbook/jmespath/#__tabbed_1_1)[Python](https://docs.n8n.io/code/cookbook/jmespath/#__tabbed_1_2)

|             |                                           |
| ----------- | ----------------------------------------- |
| `<br>1<br>` | `<br>$jmespath(object, searchString)<br>` |

|             |                                           |
| ----------- | ----------------------------------------- |
| `<br>1<br>` | `<br>_jmespath(object, searchString)<br>` |

To help understand what the method does, here is the equivalent longer JavaScript:

|                  |                                                                                         |
| ---------------- | --------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>` | `<br>var jmespath = require('jmespath');<br>jmespath.search(object, searchString);<br>` |

Expressions must be single-line

The longer code example doesn't work in Expressions, as they must be single-line.

`object` is a JSON object, such as the output of a previous node. `searchString` is an expression written in the JMESPath query language. The [JMESPath Specification](https://jmespath.org/specification.html#jmespath-specification) provides a list of supported expressions, while their [Tutorial](https://jmespath.org/tutorial.html) and [Examples](https://jmespath.org/examples.html) provide interactive examples.

Search parameter order

The examples in the [JMESPath Specification](https://jmespath.org/specification.html#jmespath-specification) follow the pattern `search(searchString, object)`. The [JMESPath JavaScript library](https://github.com/jmespath/jmespath.js/), which n8n uses, supports `search(object, searchString)` instead. This means that when using examples from the JMESPath documentation, you may need to change the order of the search function parameters.

## Common tasks [\#](https://docs.n8n.io/code/cookbook/jmespath/#common-tasks "Permanent link")

This section provides examples for some common operations. More examples, and detailed guidance, are available in [JMESPath's own documentation](https://jmespath.org/tutorial.html).

When trying out these examples, you need to set the Code node **Mode** to **Run Once for Each Item**.

### Apply a JMESPath expression to a collection of elements with projections [\#](https://docs.n8n.io/code/cookbook/jmespath/#apply-a-jmespath-expression-to-a-collection-of-elements-with-projections "Permanent link")

From the [JMESPath projections documentation](https://jmespath.org/tutorial.html#projections):

> Projections are one of the key features of JMESPath. Use it to apply an expression to a collection of elements. JMESPath supports five kinds of projections:
>
> - List Projections
> - Slice Projections
> - Object Projections
> - Flatten Projections
> - Filter Projections

The following example shows basic usage of list, slice, and object projections. Refer to the [JMESPath projections documentation](https://jmespath.org/tutorial.html#projections) for detailed explanations of each projection type, and more examples.

Given this JSON from a webhook node:

|                                                                                                                                                                                                                                ||
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ ||
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>` | `<br>[<br>  {<br>    "headers": {<br>      "host": "n8n.instance.address",<br>      ...<br>    },<br>    "params": {},<br>    "query": {},<br>    "body": {<br>      "people": [<br>        {<br>          "first": "James",<br>          "last": "Green"<br>        },<br>        {<br>          "first": "Jacob",<br>          "last": "Jones"<br>        },<br>        {<br>          "first": "Jayden",<br>          "last": "Smith"<br>        }<br>      ],<br>      "dogs": {<br>        "Fido": {<br>          "color": "brown",<br>          "age": 7<br>        },<br>        "Spot": {<br>          "color": "black and white",<br>          "age": 5<br>        }<br>      }<br>    }<br>  }<br>]<br>` |

Retrieve a [list](https://jmespath.org/tutorial.html#list-and-slice-projections) of all the people's first names:

[Expressions (JavaScript)](https://docs.n8n.io/code/cookbook/jmespath/#__tabbed_2_1)[Code node (JavaScript)](https://docs.n8n.io/code/cookbook/jmespath/#__tabbed_2_2)[Code node (Python)](https://docs.n8n.io/code/cookbook/jmespath/#__tabbed_2_3)

|                  |                                                                                                     |
| ---------------- | --------------------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>` | `<br>{{$jmespath($json.body.people, "[*].first" )}}<br>// Returns ["James", "Jacob", "Jayden"]<br>` |

|                                                                                      |                                                                                                                                                                                                    |
| ------------------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>` | `<br>let firstNames = $jmespath($json.body.people, "[*].first" )<br>return {firstNames};<br>/* Returns:<br>[<br>	{<br>		"firstNames": [<br>			"James",<br>			"Jacob",<br>			"Jayden"<br>		]<br>	}<br>]<br>*/<br>` |

|                                                                                            |                                                                                                                                                                                                                  |
| ------------------------------------------------------------------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>` | `<br>firstNames = _jmespath(_json.body.people, "[*].first" )<br>return {"firstNames":firstNames}<br>"""<br>Returns:<br>[<br> 	{<br>		"firstNames": [<br>			"James",<br>			"Jacob",<br>			"Jayden"<br>		]<br>	}<br>]<br>"""<br>` |

Get a [slice](https://jmespath.org/tutorial.html#list-and-slice-projections) of the first names:

[Expressions (JavaScript)](https://docs.n8n.io/code/cookbook/jmespath/#__tabbed_3_1)[Code node (JavaScript)](https://docs.n8n.io/code/cookbook/jmespath/#__tabbed_3_2)[Code node (Python)](https://docs.n8n.io/code/cookbook/jmespath/#__tabbed_3_3)

|                  |                                                                                           |
| ---------------- | ----------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>` | `<br>{{$jmespath($json.body.people, "[:2].first")}}<br>// Returns ["James", "Jacob"]<br>` |

|                                                                                      |                                                                                                                                                                                                           |
| ------------------------------------------------------------------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>` | `<br>let firstTwoNames = $jmespath($json.body.people, "[:2].first");<br>return {firstTwoNames};<br>/* Returns:<br>[<br>	{<br>		"firstNames": [<br>			"James",<br>			"Jacob",<br>			"Jayden"<br>		]<br>	}<br>]<br>*/<br>` |

|                                                                                      |                                                                                                                                                                                                                 |
| ------------------------------------------------------------------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>` | `<br>firstTwoNames = _jmespath(_json.body.people, "[:2].first" )<br>return {"firstTwoNames":firstTwoNames}<br>"""<br>Returns:<br>[<br>	{<br>		"firstTwoNames": [<br>		"James",<br>		"Jacob"<br>		]<br>	}<br>]<br>"""<br>` |

Get a list of the dogs' ages using [object projections](https://jmespath.org/tutorial.html#object-projections):

[Expressions (JavaScript)](https://docs.n8n.io/code/cookbook/jmespath/#__tabbed_4_1)[Code node (JavaScript)](https://docs.n8n.io/code/cookbook/jmespath/#__tabbed_4_2)[Code node (Python)](https://docs.n8n.io/code/cookbook/jmespath/#__tabbed_4_3)

|                  |                                                                       |
| ---------------- | --------------------------------------------------------------------- |
| `<br>1<br>2<br>` | `<br>{{$jmespath($json.body.dogs, "*.age")}}<br>// Returns [7,5]<br>` |

|                                                                                |                                                                                                                                                               |
| ------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>` | `<br>let dogsAges = $jmespath($json.body.dogs, "*.age");<br>return {dogsAges};<br>/* Returns:<br>[<br>	{<br>		"dogsAges": [<br>			7,<br>			5<br>		]<br>	}<br>]<br>*/<br>` |

|                                                                                      |                                                                                                                                                                          |
| ------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>` | `<br>dogsAges = _jmespath(_json.body.dogs, "*.age")<br>return {"dogsAges": dogsAges}<br>"""<br>Returns:<br>[<br>	{<br>		"dogsAges": [<br>			7,<br>			5<br>		]<br>	}<br>]<br>"""<br>` |

### Select multiple elements and create a new list or object [\#](https://docs.n8n.io/code/cookbook/jmespath/#select-multiple-elements-and-create-a-new-list-or-object "Permanent link")

Use [Multiselect](https://jmespath.org/tutorial.html#multiselect) to select elements from a JSON object and combine them into a new list or object.

Given this JSON from a webhook node:

|                                                                                                                                                                                                                                ||
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ ||
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>` | `<br>[<br>  {<br>    "headers": {<br>      "host": "n8n.instance.address",<br>      ...<br>    },<br>    "params": {},<br>    "query": {},<br>    "body": {<br>      "people": [<br>        {<br>          "first": "James",<br>          "last": "Green"<br>        },<br>        {<br>          "first": "Jacob",<br>          "last": "Jones"<br>        },<br>        {<br>          "first": "Jayden",<br>          "last": "Smith"<br>        }<br>      ],<br>      "dogs": {<br>        "Fido": {<br>          "color": "brown",<br>          "age": 7<br>        },<br>        "Spot": {<br>          "color": "black and white",<br>          "age": 5<br>        }<br>      }<br>    }<br>  }<br>]<br>` |

Use multiselect list to get the first and last names and create new lists containing both names:

[Expressions (JavaScript)](https://docs.n8n.io/code/cookbook/jmespath/#__tabbed_5_1)[Code node (JavaScript)](https://docs.n8n.io/code/cookbook/jmespath/#__tabbed_5_2)[Code node (Python)](https://docs.n8n.io/code/cookbook/jmespath/#__tabbed_5_3)

|                  |                                                                                                                                       |
| ---------------- | ------------------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>` | `<br>{{$jmespath($json.body.people, "[].[first, last]")}}<br>// Returns [["James","Green"],["Jacob","Jones"],["Jayden","Smith"]]<br>` |

|                                                                                                                                            |                                                                                                                                                                                                                                                                    |
| ------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>` | `<br>let newList = $jmespath($json.body.people, "[].[first, last]");<br>return {newList};<br>/* Returns:<br>[<br>	{<br>		"newList": [<br>			[<br>				"James",<br>				"Green"<br>			],<br>			[<br>				"Jacob",<br>				"Jones"<br>			],<br>			[<br>				"Jayden",<br>				"Smith"<br>			]<br>		]<br>	}<br>]<br>*/<br>` |

|                                                                                                                                                  |                                                                                                                                                                                                                                                                             |
| ------------------------------------------------------------------------------------------------------------------------------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>` | `<br>newList = _jmespath(_json.body.people, "[].[first, last]")<br>return {"newList":newList}<br>"""<br>Returns:<br>[<br>	{<br>		"newList": [<br>			[<br>				"James",<br>				"Green"<br>			],<br>			[<br>				"Jacob",<br>				"Jones"<br>			],<br>			[<br>				"Jayden",<br>				"Smith"<br>			]<br>		]<br>	}<br>]<br>"""<br>` |

### An alternative to arrow functions in expressions [\#](https://docs.n8n.io/code/cookbook/jmespath/#an-alternative-to-arrow-functions-in-expressions "Permanent link")

For example, generate some input data by returning the below code from the Code node:

|                                                                                                                                                                                ||
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ ||
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>` | `<br>return[<br>  {<br>    "json": {      <br>      "num_categories": "0",<br>      "num_products": "45",<br>      "category_id": 5529735,<br>      "parent_id": 1407340,<br>      "pos_enabled": 1,<br>      "pos_favorite": 0,<br>      "name": "HP",<br>      "description": "",<br>      "image": ""<br>    }<br>  },<br>  {<br>    "json": {<br>      "num_categories": "0",<br>      "num_products": "86",<br>      "category_id": 5529740,<br>      "parent_id": 1407340,<br>      "pos_enabled": 1,<br>      "pos_favorite": 0,<br>      "name": "Lenovo",<br>      "description": "",<br>      "image": ""<br>    }<br>  }  <br>]<br>` |

You could do a search like "find the item with the name Lenovo and tell me their category ID."

|             |                                                                                       |
| ----------- | ------------------------------------------------------------------------------------- |
| `<br>1<br>` | `<br>{{ $jmespath($("Code").all(), "[?json.name=='Lenovo'].json.category_id") }}<br>` |

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## SAML SSO Configuration

[Skip to content](https://docs.n8n.io/user-management/saml/#security-assertion-markup-language-saml)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/user-management/saml/index.md "Edit this page")

# Security Assertion Markup Language (SAML) [\#](https://docs.n8n.io/user-management/saml/#security-assertion-markup-language-saml "Permanent link")

Feature availability

- Available on Enterprise plans.
- You need access to the n8n instance owner account to enable and configure SAML

Available from version 0.225.0.

This section provides guidance on using SAML SSO (single sign-on) with n8n. It assumes you're familiar with SAML. If you're not, [SAML Explained in Plain English](https://www.onelogin.com/learn/saml) can help you understand how SAML works, and its benefits.

- [Set up SAML](https://docs.n8n.io/user-management/saml/setup/): a general guide to setting up SAML in n8n, and links to resources for common IdPs. Start here.
- [Okta Workforce Identity SAML setup](https://docs.n8n.io/user-management/saml/okta/): step-by-step guidance to configuring Okta.
- [Troubleshooting](https://docs.n8n.io/user-management/saml/troubleshooting/): a list of things to check if you encounter issues.
- [Managing users with SAML](https://docs.n8n.io/user-management/saml/managing/): performing user management tasks with SAML enabled.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=1989107121.1744299870&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509682~102788824~102803279~102813109~102887800~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=36595830)

## Sustainable Use License

[Skip to content](https://docs.n8n.io/sustainable-use-license/#sustainable-use-license)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/sustainable-use-license.md "Edit this page")

# Sustainable Use License [\#](https://docs.n8n.io/sustainable-use-license/#sustainable-use-license "Permanent link")

Proprietary licenses for Enterprise

Proprietary licenses are available for enterprise customers. [Get in touch](mailto:license@n8n.io) for more information.

n8n's [Sustainable Use License](https://github.com/n8n-io/n8n/blob/master/LICENSE.md) and [n8n Enterprise License](https://github.com/n8n-io/n8n/blob/master/LICENSE_EE.md) are based on the [fair-code](https://faircode.io/) model.

## License FAQs [\#](https://docs.n8n.io/sustainable-use-license/#license-faqs "Permanent link")

### What license do you use? [\#](https://docs.n8n.io/sustainable-use-license/#what-license-do-you-use "Permanent link")

n8n uses the [Sustainable Use License](https://github.com/n8n-io/n8n/blob/master/LICENSE.md) and [n8n Enterprise License](https://github.com/n8n-io/n8n/blob/master/LICENSE_EE.md). These licenses are based on the [fair-code](https://faircode.io/) model.

### What source code is covered by the Sustainable Use License? [\#](https://docs.n8n.io/sustainable-use-license/#what-source-code-is-covered-by-the-sustainable-use-license "Permanent link")

The [Sustainable Use License](https://github.com/n8n-io/n8n/blob/master/LICENSE.md) applies to all our source code hosted in our [main GitHub repository](https://github.com/n8n-io/n8n) except:

- Content of branches other than master.
- Source code files that contain `.ee.` in their file name. These are licensed under the [n8n Enterprise License](https://github.com/n8n-io/n8n/blob/master/LICENSE_EE.md).

### What is the Sustainable Use License? [\#](https://docs.n8n.io/sustainable-use-license/#what-is-the-sustainable-use-license "Permanent link")

The Sustainable Use License is a fair-code software license created by n8n in 2022. You can read more about why we did this [here](https://docs.n8n.io/sustainable-use-license/#why-did-you-create-a-license). The license allows you the free right to use, modify, create derivative works, and redistribute, with three limitations:

- You may use or modify the software only for your own internal business purposes or for non-commercial or personal use.
- You may distribute the software or provide it to others only if you do so free of charge for non-commercial purposes.
- You may not alter, remove, or obscure any licensing, copyright, or other notices of the licensor in the software. Any use of the licensor's trademarks is subject to applicable law.

We encourage anyone who wants to use the Sustainable Use License. If you are building something out in the open, it makes sense to think about licensing earlier in order to avoid problems later. Contact us at [license@n8n.io](mailto:license@n8n.io) if you would like to ask any questions about it.

### What is and isn't allowed under the license in the context of n8n's product? [\#](https://docs.n8n.io/sustainable-use-license/#what-is-and-isnt-allowed-under-the-license-in-the-context-of-n8ns-product "Permanent link")

Our license restricts use to "internal business purposes". In practice this means all use is allowed unless you are selling a product, service, or module in which the value derives entirely or substantially from n8n functionality. Here are some examples that wouldn't be allowed:

- White-labeling n8n and offering it to your customers for money.
- Hosting n8n and charging people money to access it.

All of the following examples are allowed under our license:

- Using n8n to sync the data you control as a company, for example from a CRM to an internal database.
- Creating an n8n node for your product or any other integration between your product and n8n.
- Providing consulting services related to n8n, for example building workflows, custom features closely connect to n8n, or code that gets executed by n8n.
- Supporting n8n, for example by setting it up or maintaining it on an internal company server.

#### Can I use n8n to act as the back-end to power a feature in my app? [\#](https://docs.n8n.io/sustainable-use-license/#can-i-use-n8n-to-act-as-the-back-end-to-power-a-feature-in-my-app "Permanent link")

Usually yes, as long as the back-end process doesn't use users' own credentials to access their data.

Here are two examples to clarify:

##### Example 1: Sync ACME app with HubSpot [\#](https://docs.n8n.io/sustainable-use-license/#example-1-sync-acme-app-with-hubspot "Permanent link")

Bob sets up n8n to collect a user's HubSpot credentials to sync data in the ACME app with data in HubSpot.

**NOT ALLOWED** under the Sustainable Use License. This use case collects the user's own HubSpot credentials to pull information to feed into the ACME app.

##### Example 2: Embed AI chatbot in ACME app [\#](https://docs.n8n.io/sustainable-use-license/#example-2-embed-ai-chatbot-in-acme-app "Permanent link")

Bob sets up n8n to embed an AI chatbot within the ACME app. The AI chatbot's credentials in n8n use Bob's company credentials. ACME app end-users only enter their questions or queries to the chatbot.

**ALLOWED** under the Sustainable Use License. No user credentials are being collected.

### What if I want to use n8n for something that's not permitted by the license? [\#](https://docs.n8n.io/sustainable-use-license/#what-if-i-want-to-use-n8n-for-something-thats-not-permitted-by-the-license "Permanent link")

You must sign a separate commercial agreement with us. We actively encourage software creators to embed n8n within their products; we just ask them to sign an agreement laying out the terms of use, and the fees owed to n8n for using the product in this way. We call this mode of use n8n Embed. You can learn more, and contact us about it [here](https://n8n.io/embed).

If you are unsure whether the use case you have in mind constitutes an internal business purpose or not, take a look at [the examples](https://docs.n8n.io/sustainable-use-license/#what-is-and-isnt-allowed-under-the-license-in-the-context-of-n8ns-product), and if you're still unclear, email us at [license@n8n.io](mailto:license@n8n.io).

### Why don't you use an open source license? [\#](https://docs.n8n.io/sustainable-use-license/#why-dont-you-use-an-open-source-license "Permanent link")

n8n's mission is to give everyone who uses a computer technical superpowers. We've decided the best way for us to achieve this mission is to make n8n as widely and freely available as possible for users, while ensuring we can build a sustainable, viable business. By making our product free to use, easy to distribute, and source-available we help everyone access the product. By operating as a business, we can continue to release features, fix bugs, and provide reliable software at scale long-term.

### Why did you create a license? [\#](https://docs.n8n.io/sustainable-use-license/#why-did-you-create-a-license "Permanent link")

Creating a license was our least favorite option. We only went down this path after reviewing the possible existing licenses and deciding nothing fit our specific needs. There are two ways in which we try to mitigate the pain and friction of using a proprietary license:

1. By using plain English, and keeping it as short as possible.
2. By promoting [fair-code](https://faircode.io/) with the goal of making it a well-known umbrella term to describe software models like ours.

Our goals when we created the Sustainable Use License were:

1. To be as permissive as possible.
2. Safeguarding our ability to build a business.
3. Being as clear as possible what use was permitted or not.

### My company has a policy against using code that restricts commercial use – can I still use n8n? [\#](https://docs.n8n.io/sustainable-use-license/#my-company-has-a-policy-against-using-code-that-restricts-commercial-use-can-i-still-use-n8n "Permanent link")

Provided you are using n8n for internal business purposes, and not making n8n available to your customers for them to connect their accounts and build workflows, you should be able to use n8n. If you are unsure whether the use case you have in mind constitutes an internal business purpose or not, take a look at [the examples](https://docs.n8n.io/sustainable-use-license/#what-is-and-isnt-allowed-under-the-license-in-the-context-of-n8ns-product), and if you're still unclear, email us at [license@n8n.io](mailto:license@n8n.io).

### What happens to the code I contribute to n8n in light of the Sustainable Use License? [\#](https://docs.n8n.io/sustainable-use-license/#what-happens-to-the-code-i-contribute-to-n8n-in-light-of-the-sustainable-use-license "Permanent link")

Any code you contribute on GitHub is subject to GitHub's [terms of use](https://docs.github.com/en/site-policy/github-terms/github-terms-of-service#d-user-generated-content). In simple terms, this means you own, and are responsible for, anything you contribute, but that you grant other GitHub users certain rights to use this code. When you contribute code to a repository containing notice of a license, you license the code under the same terms.

n8n asks every contributor to sign our [Contributor License Agreement](https://github.com/n8n-io/n8n/blob/master/CONTRIBUTOR_LICENSE_AGREEMENT.md). In addition to the above, this gives n8n the ability to change its license without seeking additional permission. It also means you aren't liable for your contributions (e.g. in case they cause damage to someone else's business).

It's easy to get started contributing code to n8n [here](https://github.com/n8n-io), and we've listed broader ways of participating in our community [here](https://docs.n8n.io/reference/contributing.html).

### Why did you switch to the Sustainable Use License from your previous license arrangement (Apache 2.0 with Commons Clause)? [\#](https://docs.n8n.io/sustainable-use-license/#why-did-you-switch-to-the-sustainable-use-license-from-your-previous-license-arrangement-apache-20-with-commons-clause "Permanent link")

n8n was licensed under Apache 2.0 with Commons Clause until 17 March 2022. Commons Clause was initiated by various software companies wanting to protect their rights against cloud providers. The concept involved adding a commercial restriction on top of an existing open source license.

However, the use of the Commons Clause as an additional condition to an open source license, as well as the use of wording that's open to interpretation, created some confusion and uncertainty regarding the terms of use. The Commons Clause also restricted people's ability to offer consulting and support services: we realized these services are critical in enabling people to get value from n8n, so we wanted to remove this restriction.

We created the Sustainable Use License to be more permissive and more clear about what use is allowed, while continuing to ensure n8n gets the funding needed to build and improve our product.

### What are the main differences between the Sustainable Use License and your previous license arrangement (Apache 2.0 with Commons Clause)? [\#](https://docs.n8n.io/sustainable-use-license/#what-are-the-main-differences-between-the-sustainable-use-license-and-your-previous-license-arrangement-apache-20-with-commons-clause "Permanent link")

There are two main differences between the Sustainable Use License and our previous license arrangement. The first is that we have tightened the definition of how you can use the software. Previously the Commons Clause restricted users ability to "sell" the software; we have redefined this to restrict use to internal business purposes. The second difference is that our previous license restricted people's ability to charge fees for consulting or support services related to the software: we have lifted that restriction altogether.

That means you are now free to offer commercial consulting or support services (e.g. building n8n workflows) without the need for a separate license agreement with us. If you are interested in joining our community of n8n experts providing these services, you can learn more here.

### Is n8n open source? [\#](https://docs.n8n.io/sustainable-use-license/#is-n8n-open-source "Permanent link")

Although n8n's source code is available under the Sustainable Use License, according to the [Open Source Initiative](https://opensource.org/) (OSI), open source licenses can't include limitations on use, so we do not call ourselves open source. In practice, n8n offers most users many of the same benefits as OSI-approved open source.

We coined the term ['fair-code'](https://faircode.io/) as a way of describing our licensing model, and the model of other companies who are source-available, but restrict commercial use of their source code.

### What is fair-code, and how does the Sustainable Use License relate to it? [\#](https://docs.n8n.io/sustainable-use-license/#what-is-fair-code-and-how-does-the-sustainable-use-license-relate-to-it "Permanent link")

Fair-code isn't a software license. It describes a software model where software:

- Is generally free to use and can be distributed by anybody.
- Has its source code openly available.
- Can be extended by anybody in public and private communities.
- Is commercially restricted by its authors.

The Sustainable Use License is a fair-code license. You can read more about it and see other examples of fair-code licenses [here](https://faircode.io/).

We're always excited to talk about software licenses, fair-code, and other principles around sharing code with interested parties. To get in touch to chat, email [license@n8n.io](mailto:license@n8n.io).

### Can I use n8n's Sustainable Use License for my own project? [\#](https://docs.n8n.io/sustainable-use-license/#can-i-use-n8ns-sustainable-use-license-for-my-own-project "Permanent link")

Yes! We're excited to see more software use the Sustainable Use License. We'd love to hear about your project if you're using our license: [license@n8n.io](mailto:license@n8n.io).

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Contributing to n8n

[Skip to content](https://docs.n8n.io/help-community/contributing/#how-can-you-contribute)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/help-community/contributing.md "Edit this page")

# How can you contribute? [\#](https://docs.n8n.io/help-community/contributing/#how-can-you-contribute "Permanent link")

There are a several ways in which you can contribute to n8n, depending on your skills and interests. Each form of contribution is valuable to us!

## Share some love: Review us [\#](https://docs.n8n.io/help-community/contributing/#share-some-love-review-us "Permanent link")

- Star n8n on [GitHub](https://github.com/n8n-io/n8n) and [Docker Hub](https://hub.docker.com/r/n8nio/n8n).
- Follow us on [Twitter](https://twitter.com/n8n_io), [LinkedIn](https://www.linkedin.com/company/28491094), and [Facebook](https://www.facebook.com/n8nio/).
- Upvote n8n on [AlternativeTo](https://alternativeto.net/software/n8n-io/) and [Alternative.me](https://alternative.me/n8n-io).
- Add n8n to your stack on [Stackshare](https://stackshare.io/n8n).
- Write a review about n8n on [G2](https://www.g2.com/products/n8n/reviews), [Slant](https://www.slant.co/improve/options/37977/~n8n-review), and [Capterra](https://www.capterra.com/p/198028/n8n-io/).

## Help out the community [\#](https://docs.n8n.io/help-community/contributing/#help-out-the-community "Permanent link")

You can participate in the [forum](https://community.n8n.io/) and help the community members out with their questions.

When sharing workflows in the community forum for debugging, use code blocks. Use triple backticks ` ``` ` to wrap the workflow JSON in a code block.

The following video demonstrates the steps of sharing workflows on the community forum:

Sharing workflow JSON on community.n8n.io for debugging - YouTube

n8n

54.8K subscribers

[Sharing workflow JSON on community.n8n.io for debugging](https://www.youtube.com/watch?v=dVC8yLqUvCE)

n8n

Search

Watch later

Share

Copy link

Info

Shopping

Tap to unmute

If playback doesn't begin shortly, try restarting your device.

More videos

## More videos

You're signed out

Videos you watch may be added to the TV's watch history and influence TV recommendations. To avoid this, cancel and sign in to YouTube on your computer.

CancelConfirm

Share

Include playlist

An error occurred while retrieving sharing information. Please try again later.

[Watch on](https://www.youtube.com/watch?v=dVC8yLqUvCE&embeds_referring_euri=https%3A%2F%2Fdocs.n8n.io%2F)

0:00

0:00 / 0:28•Live

•

[Watch on YouTube](https://www.youtube.com/watch?v=dVC8yLqUvCE "Watch on YouTube")

## Contribute a workflow template [\#](https://docs.n8n.io/help-community/contributing/#contribute-a-workflow-template "Permanent link")

You can submit your workflows to n8n's template library.

n8n is working on a creator program, and developing a marketplace of templates. This is an ongoing project, and details are likely to change.

Refer to [n8n Creator hub](https://www.notion.so/n8n/n8n-Creator-hub-7bd2cbe0fce0449198ecb23ff4a2f76f) for information on how to submit templates and become a creator.

## Build a node [\#](https://docs.n8n.io/help-community/contributing/#build-a-node "Permanent link")

Create an integration for a third party service. Check out [the node creation docs](https://docs.n8n.io/integrations/creating-nodes/overview/) for guidance on how to create and publish a community node.

## Contribute to the code [\#](https://docs.n8n.io/help-community/contributing/#contribute-to-the-code "Permanent link")

There are different ways in which you can contribute to the n8n code base:

- Fix [issues](https://github.com/n8n-io/n8n/issues) reported on GitHub. The [CONTRIBUTING guide](https://github.com/n8n-io/n8n/blob/master/CONTRIBUTING.md) will help you get your development environment ready in minutes.
- Add additional functionality to an existing third party integration.
- Add a new feature to n8n.

## Contribute to the docs [\#](https://docs.n8n.io/help-community/contributing/#contribute-to-the-docs "Permanent link")

You can contribute to the n8n documentation, for example by documenting nodes or fixing issues.

The repository for the docs is [here](https://github.com/n8n-io/n8n-docs) and the guidelines for contributing to the docs are [here](https://github.com/n8n-io/n8n-docs/blob/master/CONTRIBUTING.md).

## Contribute to the blog [\#](https://docs.n8n.io/help-community/contributing/#contribute-to-the-blog "Permanent link")

You can write an article for the [n8n blog](https://blog.n8n.io/). Your article can be, for example, a [workflow tutorial](https://blog.n8n.io/tag/tutorial/), an opinion piece on automation, or some domain-specific [automation guides](https://blog.n8n.io/tag/guide/).

### How to submit a post [\#](https://docs.n8n.io/help-community/contributing/#how-to-submit-a-post "Permanent link")

n8n appreciates all contributions. Publishing a tutorial on your own site that supports the community is a great contribution. If you want n8n to highlight your post on the blog, follow these steps:

1. Email your idea to [marketing@n8n.io](mailto:marketing@n8n.io) with the subject "Blog contribution: \[Your Topic\]."
2. Submit your draft:
   - Write your post in a Google Doc following the [style guide](https://www.notion.so/97dc73436a624933b75ddc941a361b70?pvs=21).
   - If your blog post includes example workflows, include the workflow JSON in a separate section at the end.
   - For author credit, provide a second Google Doc with your full name, a short byline, and your image. n8n will use this to create your author page and credit you as the author of the post.
3. Wait for feedback. We will respond if your draft fits with the blog's strategy and requirements. If you don't hear back within 30 days, it means we won't be moving forward with your blog post.

## Refer a candidate [\#](https://docs.n8n.io/help-community/contributing/#refer-a-candidate "Permanent link")

Do you know someone who would be a great fit for one of our [open positions](https://n8n.io/careers)? Refer them to us! In return, we'll pay you €1,000 when the referral successfully passes their probationary period.

Here's how this works:

1. **Search**: Have a look at the description and requirements of each role, and consider if someone you know would be a great fit.
2. **Referral**: Once you've identified a potential candidate, send an email to [Jobs at n8n](mailto:jobs@n8n.io) with the subject line _Employee referral - \[job title\]_ and a short description of the person you're referring (and the reason why). Also, tell your referral to apply for the job through our [careers page](https://n8n.io/careers).
3. **Evaluation**: We'll screen the application and inform you about the next steps of the hiring process.
4. **Reward**: As soon as your referral has successfully finished the probationary period, we'll reward you for your efforts by transferring the €1,000 to your bank account.

## Expressions Cookbook

[Skip to content](https://docs.n8n.io/code/cookbook/expressions/#expressions-cookbook)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/code/cookbook/expressions/index.md "Edit this page")

# Expressions cookbook [\#](https://docs.n8n.io/code/cookbook/expressions/#expressions-cookbook "Permanent link")

This section contains examples and recipes for tasks you can do with [expressions](https://docs.n8n.io/glossary/#expression-n8n).

Python support

You can use Python in the Code node. It isn't available in expressions.

- [Check incoming data](https://docs.n8n.io/code/cookbook/expressions/check-incoming-data/)
- [Common issues](https://docs.n8n.io/code/cookbook/expressions/common-issues/)

## Related resources [\#](https://docs.n8n.io/code/cookbook/expressions/#related-resources "Permanent link")

- [Built-in methods and variables reference](https://docs.n8n.io/code/builtin/overview/)
- [Expressions](https://docs.n8n.io/code/expressions/)

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=1831988898.1744299875&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509683~102788824~102803279~102813109~102887800~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=947347046)

## n8n Workflow Nodes

[Skip to content](https://docs.n8n.io/workflows/components/nodes/#nodes)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/workflows/components/nodes.md "Edit this page")

# Nodes [\#](https://docs.n8n.io/workflows/components/nodes/#nodes "Permanent link")

[Nodes](https://docs.n8n.io/glossary/#node-n8n) are the key building blocks of a [workflow](https://docs.n8n.io/glossary/#workflow-n8n). They perform a range of actions, including:

- Starting the workflow.
- Fetching and sending data.
- Processing and manipulating data.

n8n provides a collection of built-in nodes, as well as the ability to create your own nodes. Refer to:

- [Built-in integrations](https://docs.n8n.io/integrations/builtin/node-types/) to browse the node library.
- [Community nodes](https://docs.n8n.io/integrations/community-nodes/installation/) for guidance on finding and installing community-created nodes.
- [Creating nodes](https://docs.n8n.io/integrations/creating-nodes/overview/) to start building your own nodes.

## Add a node to your workflow [\#](https://docs.n8n.io/workflows/components/nodes/#add-a-node-to-your-workflow "Permanent link")

### Add a node to an empty workflow [\#](https://docs.n8n.io/workflows/components/nodes/#add-a-node-to-an-empty-workflow "Permanent link")

1. Select **Add first step**. n8n opens the nodes panel, where you can search or browse [trigger nodes](https://docs.n8n.io/glossary/#trigger-node-n8n).
2. Select the trigger you want to use.

Choose the correct app event

If you select **On App Event**, n8n shows a list of all the supported services. Use this list to browse n8n's integrations and trigger a workflow in response to an event in your chosen service. Not all integrations have triggers. To see which ones you can use as a trigger, select the node. If a trigger is available, you'll see it at the top of the available operations list.

For example, this is the trigger for Asana:

[![Screenshot of the Asana node operations list, showing the Recommended section at the top of the list](https://docs.n8n.io/_images/workflows/components/nodes/recommended-trigger.png)](https://docs.n8n.io/_images/workflows/components/nodes/recommended-trigger.png)

### Add a node to an existing workflow [\#](https://docs.n8n.io/workflows/components/nodes/#add-a-node-to-an-existing-workflow "Permanent link")

Select the **Add node**![Add node icon](https://docs.n8n.io/_images/try-it-out/add-node-small.png) connector. n8n opens the nodes panel, where you can search or browse all nodes.

## Node operations: Triggers and Actions [\#](https://docs.n8n.io/workflows/components/nodes/#node-operations-triggers-and-actions "Permanent link")

When you add a node to a workflow, n8n displays a list of available operations. An operation is something a node does, such as getting or sending data.

There are two types of operation:

- Triggers start a workflow in response to specific events or conditions in your services. When you select a Trigger, n8n adds a trigger node to your workflow, with the Trigger operation you chose pre-selected. When you search for a node in n8n, Trigger operations have a bolt icon ![Trigger icon](https://docs.n8n.io/_images/common-icons/trigger.png).
- Actions are operations that represent specific tasks within a workflow, which you can use to manipulate data, perform operations on external systems, and trigger events in other systems as part of your workflows. When you select an Action, n8n adds a node to your workflow, with the Action operation you chose pre-selected.

## Node controls [\#](https://docs.n8n.io/workflows/components/nodes/#node-controls "Permanent link")

To view node controls, hover over the node on the canvas:

- **Test step**![Test step icon](https://docs.n8n.io/_images/common-icons/play-node.png): Run the node.
- **Deactivate**![Deactivate node icon](https://docs.n8n.io/_images/common-icons/power-off.png): Deactivate the node.
- **Delete**![Delete node icon](https://docs.n8n.io/_images/common-icons/delete-node.png): Delete the node.
- **Node context menu**![Node context menu icon](https://docs.n8n.io/_images/common-icons/node-context-menu.png): Select node actions. Available actions:
  - Open node
  - Test step
  - Rename node
  - Deactivate node
  - Pin node
  - Copy node
  - Duplicate node
  - Select all
  - Clear selection
  - Delete node

## Node settings [\#](https://docs.n8n.io/workflows/components/nodes/#node-settings "Permanent link")

The node settings under the **Settings** tab allow you to control node behaviors and add node notes.

When active or set, they do the following:

- **Request Options**: Select **Add Option** to view and select these options.
  - **Batching**: Control how to batch large numbers of input items.
  - **Ignore SSL Issues**: Download the response even if SSL validation isn't possible.
  - **Proxy**: Use this if you need to specify an HTTP proxy.
  - **Timeout**: Set a timeout for the request in ms.
- **Always Output Data**: The node returns an empty item even if the node returns no data during execution. Be careful setting this on IF nodes, as it could cause an infinite loop.
- **Execute Once**: The node executes once, with data from the first item it receives. It doesn't process any extra items.
- **Retry On Fail**: When an execution fails, the node reruns until it succeeds.
- **On Error**:
  - **Stop Workflow**: Halts the entire workflow when an error occurs, preventing further node execution.
  - **Continue**: Proceeds to the next node despite the error, using the last valid data.
  - **Continue (using error output)**: Continues workflow execution, passing error information to the next node for potential handling.

You can document your workflow using node notes:

- **Notes**: Note to save with the node.
- **Display note in flow**: If active, n8n displays the note in the workflow as a subtitle.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=677235955.1744299875&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509682~102788824~102803279~102813109~102887799~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=177311336)

## n8n Data Structure

[Skip to content](https://docs.n8n.io/data/data-structure/#data-structure)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/data/data-structure.md "Edit this page")

# Data structure [\#](https://docs.n8n.io/data/data-structure/#data-structure "Permanent link")

In n8n, all data passed between nodes is an array of objects. It has the following structure:

|                                                                                                                                                        ||
| ------------------------------------------------------------------------------------------------------------------------------------------------------ ||
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>` | `<br>[<br>	{<br>		// For most data:<br>		// Wrap each item in another object, with the key 'json'<br>		"json": {<br>			// Example data<br>			"apple": "beets",<br>			"carrot": {<br>				"dill": 1<br>			}<br>		},<br>		// For binary data:<br>		// Wrap each item in another object, with the key 'binary'<br>		"binary": {<br>			// Example data<br>			"apple-picture": {<br>				"data": "....", // Base64 encoded binary data (required)<br>				"mimeType": "image/png", // Best practice to set if possible (optional)<br>				"fileExtension": "png", // Best practice to set if possible (optional)<br>				"fileName": "example.png", // Best practice to set if possible (optional)<br>			}<br>		}<br>	},<br>]<br>` |

Skipping the `json` key and array syntax

From 0.166.0 on, when using the Function node or Code node, n8n automatically adds the `json` key if it's missing. It also automatically wraps your items in an array ( `[]`) if needed. This is only the case when using the Function or Code nodes. When building your own nodes, you must still make sure the node returns data with the `json` key.

## Data item processing [\#](https://docs.n8n.io/data/data-structure/#data-item-processing "Permanent link")

Nodes can process multiple items.

For example, if you set the Trello node to `Create-Card`, and create an expression that sets `Name` using a property called `name-input-value` from the incoming data, the node creates a card for each item, always choosing the `name-input-value` of the current item.

For example, this input will create two cards. One named `test1` the other one named `test2`:

|                                                |                                                                                                 |
| ---------------------------------------------- | ----------------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>` | `<br>[<br>	{<br>		name-input-value: "test1"<br>	},<br>	{<br>		name-input-value: "test2"<br>	}<br>]<br>` |

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Connections in Workflows

[Skip to content](https://docs.n8n.io/workflows/components/connections/#connections)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/workflows/components/connections.md "Edit this page")

# Connections [\#](https://docs.n8n.io/workflows/components/connections/#connections "Permanent link")

A connection establishes a link between nodes to route data through the workflow. A connection between two nodes passes data from one node's output to another node's input.

[![Example of creating and deleting a connection](https://docs.n8n.io/_images/workflows/components/connections/example.gif)](https://docs.n8n.io/_images/workflows/components/connections/example.gif)

## Create a connection [\#](https://docs.n8n.io/workflows/components/connections/#create-a-connection "Permanent link")

To create a connection between two nodes, select the grey dot or **Add node**![Add node icon](https://docs.n8n.io/_images/try-it-out/add-node-small.png) on the right side of a node and slide the arrow to the grey rectangle on the left side of the following node.

## Delete a connection [\#](https://docs.n8n.io/workflows/components/connections/#delete-a-connection "Permanent link")

Hover over the connection, then select **Delete**![Delete connector icon](https://docs.n8n.io/_images/common-icons/delete-connector.png).

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](about:blank)

## Credential Sharing Guide

[Skip to content](https://docs.n8n.io/credentials/credential-sharing/#credential-sharing)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/credentials/credential-sharing.md "Edit this page")

# Credential sharing [\#](https://docs.n8n.io/credentials/credential-sharing/#credential-sharing "Permanent link")

Feature availability

Available on all Cloud plans, and Enterprise self-hosted plans.

You can share a credential directly with other users to use in their own workflows. Or share a credential in a [project](https://docs.n8n.io/glossary/#project-n8n) for all members of that project to use. Any users using a shared credential won't be able to view or edit the credential details.

Users can share credentials they created and own. Only project admins can share credentials created in and owned by a project. Instance owners and instance admins can view and share all credentials on an instance.

Refer to [Account types](https://docs.n8n.io/user-management/account-types/) for more information about owners and admins.

In [projects](https://docs.n8n.io/user-management/rbac/), a user's role controls how they can interact with the workflows and credentials associated to the projects they're a member of.

## Share a credential [\#](https://docs.n8n.io/credentials/credential-sharing/#share-a-credential "Permanent link")

To share a credential:

1. From the left menu, select either **Overview** or a project.
2. Select **Credentials** to see a list of your credentials.
3. Select the credential you want to share.
4. Select **Sharing**.
5. In the **Share with projects or users** dropdown, browse or search for the user or project with which you want to share your credentials.
6. Select a user or project.
7. Select **Save** to apply the changes.

## Remove access to a credential [\#](https://docs.n8n.io/credentials/credential-sharing/#remove-access-to-a-credential "Permanent link")

To unshare a credential:

1. From the left menu, select either **Overview** or a project.
2. Select **Credentials** to see a list of your credentials.
3. Select the credential you want to unshare.
4. Select **Sharing**.
5. Select **trash icon**![Trash icon](https://docs.n8n.io/_images/common-icons/delete-node.png) on the user or project you want to remove from the list of shared users and projects.
6. Select **Save** to apply the changes.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## JMESPath Method

[Skip to content](https://docs.n8n.io/code/builtin/jmespath/#jmespath-method)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/code/builtin/jmespath.md "Edit this page")

# JMESPath method [\#](https://docs.n8n.io/code/builtin/jmespath/#jmespath-method "Permanent link")

This is an n8n-provided method for working with the [JMESPath](https://docs.n8n.io/code/cookbook/jmespath/) library.

Python support

You can use Python in the Code node. It isn't available in expressions.

[JavaScript](https://docs.n8n.io/code/builtin/jmespath/#__tabbed_1_1)[Python](https://docs.n8n.io/code/builtin/jmespath/#__tabbed_1_2)

| Method        | Description                                       | Available in Code node?                                                       |
| ------------- | ------------------------------------------------- | ----------------------------------------------------------------------------- |
| `$jmespath()` | Perform a search on a JSON object using JMESPath. | ![✅](https://cdn.jsdelivr.net/gh/jdecked/twemoji@15.1.0/assets/svg/2705.svg) |

| Method        | Description                                       |
| ------------- | ------------------------------------------------- |
| `_jmespath()` | Perform a search on a JSON object using JMESPath. |

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=1861802307.1744299876&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509683~102788824~102803279~102813109~102887799~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=1963594100)

## Role-Based Access Control

[Skip to content](https://docs.n8n.io/user-management/rbac/#role-based-access-control-rbac)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/user-management/rbac/index.md "Edit this page")

# Role-based access control (RBAC) [\#](https://docs.n8n.io/user-management/rbac/#role-based-access-control-rbac "Permanent link")

Feature availability

RBAC is available on all plans except the Community edition. Different plans have different numbers of projects and roles. Refer to n8n's [pricing page](https://n8n.io/pricing/) for plan details.

Role types and account types

Role types and [account types](https://docs.n8n.io/user-management/account-types/) are different things. Every account has one type. The account can have different role types for different [projects](https://docs.n8n.io/user-management/rbac/projects/).

RBAC is a way of managing access to workflows and [credentials](https://docs.n8n.io/glossary/#credential-n8n) based on user roles and projects. You group workflows into projects, and user access depends on the user's project role. This section provides guidance on using RBAC in n8n.

- [Role types](https://docs.n8n.io/user-management/rbac/role-types/)
- [Projects](https://docs.n8n.io/user-management/rbac/projects/)

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Date and Time with Luxon

[Skip to content](https://docs.n8n.io/code/cookbook/luxon/#date-and-time-with-luxon)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/code/cookbook/luxon.md "Edit this page")

# Date and time with Luxon [\#](https://docs.n8n.io/code/cookbook/luxon/#date-and-time-with-luxon "Permanent link")

[Luxon](https://github.com/moment/luxon/) is a JavaScript library that makes it easier to work with date and time. For full details of how to use Luxon, refer to [Luxon's documentation](https://moment.github.io/luxon/#/?id=luxon).

n8n passes dates between nodes as strings, so you need to parse them. Luxon makes this easier.

Python support

Luxon is a JavaScript library. The two convenience [variables](https://docs.n8n.io/code/cookbook/luxon/#variables) created by n8n are available when using Python in the Code node, but their functionality is limited:

- You can't perform Luxon operations on these variables. For example, there is no Python equivalent for `$today.minus(...)`.
- The generic Luxon functionality, such as [Convert date string to Luxon](https://docs.n8n.io/code/cookbook/luxon/#convert-date-string-to-luxon), isn't available for Python users.

## Variables [\#](https://docs.n8n.io/code/cookbook/luxon/#variables "Permanent link")

n8n uses Luxon to provide two custom variables:

- `now`: a Luxon object containing the current timestamp. Equivalent to `DateTime.now()`.
- `today`: a Luxon object containing the current timestamp, rounded down to the day. Equivalent to `DateTime.now().set({ hour: 0, minute: 0, second: 0, millisecond: 0 })`.

Note that these variables can return different time formats when cast as a string. This is the same behavior as Luxon's `DateTime.now()`.

[Expressions (JavaScript)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_1_1)[Code node (JavaScript)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_1_2)[Code node (Python)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_1_3)

|                                      |                                                                                                                                                                                                                                                            |
| ------------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>3<br>4<br>5<br>6<br>` | `<br>{{$now}}<br>// n8n displays the ISO formatted timestamp<br>// For example 2022-03-09T14:02:37.065+00:00<br>{{"Today's date is " + $now}}<br>// n8n displays "Today's date is <unix timestamp>"<br>// For example "Today's date is 1646834498755"<br>` |

|                                      |                                                                                                                                                                                                                                                                 |
| ------------------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>3<br>4<br>5<br>6<br>` | `<br>$now<br>// n8n displays <ISO formatted timestamp><br>// For example 2022-03-09T14:00:25.058+00:00<br>let rightNow = "Today's date is " + $now<br>// n8n displays "Today's date is <unix timestamp>"<br>// For example "Today's date is 1646834498755"<br>` |

|                                      |                                                                                                                                                                                                                                                              |
| ------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| `<br>1<br>2<br>3<br>4<br>5<br>6<br>` | `<br>_now<br># n8n displays <ISO formatted timestamp><br># For example 2022-03-09T14:00:25.058+00:00<br>rightNow = "Today's date is " + str(_now)<br># n8n displays "Today's date is <unix timestamp>"<br># For example "Today's date is 1646834498755"<br>` |

n8n provides built-in convenience functions to support data transformation in expressions for dates. Refer to [Data transformation functions \| Dates](https://docs.n8n.io/code/builtin/data-transformation-functions/dates/) for more information.

## Date and time behavior in n8n [\#](https://docs.n8n.io/code/cookbook/luxon/#date-and-time-behavior-in-n8n "Permanent link")

Be aware of the following:

- In a workflow, n8n converts dates and times to strings between nodes. Keep this in mind when doing arithmetic on dates and times from other nodes.
- With vanilla JavaScript, you can convert a string to a date with `new Date('2019-06-23')`. In Luxon, you must use a function explicitly stating the format, such as `DateTime.fromISO('2019-06-23')` or `DateTime.fromFormat("23-06-2019", "dd-MM-yyyy")`.

## Setting the timezone in n8n [\#](https://docs.n8n.io/code/cookbook/luxon/#setting-the-timezone-in-n8n "Permanent link")

Luxon uses the n8n timezone. This value is either:

- Default: `America/New York`
- A custom timezone for your n8n instance, set using the `GENERIC_TIMEZONE` environment variable.
- A custom timezone for an individual workflow, configured in workflow settings.

## Common tasks [\#](https://docs.n8n.io/code/cookbook/luxon/#common-tasks "Permanent link")

This section provides examples for some common operations. More examples, and detailed guidance, are available in [Luxon's own documentation](https://moment.github.io/luxon/#/?id=luxon).

### Convert date string to Luxon [\#](https://docs.n8n.io/code/cookbook/luxon/#convert-date-string-to-luxon "Permanent link")

You can convert date strings and other date formats to a Luxon DateTime object. You can convert from standard formats and from arbitrary strings.

A difference between Luxon DateTime and JavaScript Date

With vanilla JavaScript, you can convert a string to a date with `new Date('2019-06-23')`. In Luxon, you must use a function explicitly stating the format, such as `DateTime.fromISO('2019-06-23')` or `DateTime.fromFormat("23-06-2019", "dd-MM-yyyy")`.

#### If you have a date in a supported standard technical format: [\#](https://docs.n8n.io/code/cookbook/luxon/#if-you-have-a-date-in-a-supported-standard-technical-format "Permanent link")

Most dates use `fromISO()`. This creates a Luxon DateTime from an ISO 8601 string. For example:

[Expressions (JavaScript)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_2_1)[Code node (JavaScript)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_2_2)

|             |                                                          |
| ----------- | -------------------------------------------------------- |
| `<br>1<br>` | `<br>{{DateTime.fromISO('2019-06-23T00:00:00.00')}}<br>` |

|             |                                                                          |
| ----------- | ------------------------------------------------------------------------ |
| `<br>1<br>` | `<br>let luxonDateTime = DateTime.fromISO('2019-06-23T00:00:00.00')<br>` |

Luxon's API documentation has more information on [fromISO](https://moment.github.io/luxon/api-docs/index.html#datetimefromiso).

Luxon provides functions to handle conversions for a range of formats. Refer to Luxon's guide to [Parsing technical formats](https://moment.github.io/luxon/#/parsing?id=parsing-technical-formats) for details.

#### If you have a date as a string that doesn't use a standard format: [\#](https://docs.n8n.io/code/cookbook/luxon/#if-you-have-a-date-as-a-string-that-doesnt-use-a-standard-format "Permanent link")

Use Luxon's [Ad-hoc parsing](https://moment.github.io/luxon/#/parsing?id=ad-hoc-parsing). To do this, use the `fromFormat()` function, providing the string and a set of [tokens](https://moment.github.io/luxon/#/parsing?id=table-of-tokens) that describe the format.

For example, you have n8n's founding date, 23rd June 2019, formatted as `23-06-2019`. You want to turn this into a Luxon object:

[Expressions (JavaScript)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_3_1)[Code node (JavaScript)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_3_2)

|             |                                                               |
| ----------- | ------------------------------------------------------------- |
| `<br>1<br>` | `<br>{{DateTime.fromFormat("23-06-2019", "dd-MM-yyyy")}}<br>` |

|             |                                                                           |
| ----------- | ------------------------------------------------------------------------- |
| `<br>1<br>` | `<br>let newFormat = DateTime.fromFormat("23-06-2019", "dd-MM-yyyy")<br>` |

When using ad-hoc parsing, note Luxon's warning about [Limitations](https://moment.github.io/luxon/#/parsing?id=limitations). If you see unexpected results, try their [Debugging](https://moment.github.io/luxon/#/parsing?id=debugging) guide.

### Get n days from today [\#](https://docs.n8n.io/code/cookbook/luxon/#get-n-days-from-today "Permanent link")

Get a number of days before or after today.

[Expressions (JavaScript)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_4_1)[Code node (JavaScript)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_4_2)

For example, you want to set a field to always show the date seven days before the current date.

In the expressions editor, enter:

|             |                                       |
| ----------- | ------------------------------------- |
| `<br>1<br>` | `<br>{{$today.minus({days: 7})}}<br>` |

On the 23rd June 2019, this returns `[Object: "2019-06-16T00:00:00.000+00:00"]`.

This example uses n8n's custom variable `$today` for convenience. It's the equivalent of `DateTime.now().set({ hour: 0, minute: 0, second: 0, millisecond: 0 }).minus({days: 7})`.

For example, you want a variable containing the date seven days before the current date.

In the code editor, enter:

|             |                                                      |
| ----------- | ---------------------------------------------------- |
| `<br>1<br>` | `<br>let sevenDaysAgo = $today.minus({days: 7})<br>` |

On the 23rd June 2019, this returns `[Object: "2019-06-16T00:00:00.000+00:00"]`.

This example uses n8n's custom variable `$today` for convenience. It's the equivalent of `DateTime.now().set({ hour: 0, minute: 0, second: 0, millisecond: 0 }).minus({days: 7})`.

For more detailed information and examples, refer to:

- Luxon's [guide to math](https://moment.github.io/luxon/#/math)
- Their API documentation on [DateTime plus](https://moment.github.io/luxon/api-docs/index.html#datetimeplus) and [DateTime minus](https://moment.github.io/luxon/api-docs/index.html#datetimeminus)

### Create human-readable dates [\#](https://docs.n8n.io/code/cookbook/luxon/#create-human-readable-dates "Permanent link")

In [Get n days from today](https://docs.n8n.io/code/cookbook/luxon/#get-n-days-from-today), the example gets the date seven days before the current date, and returns it as `[Object: "yyyy-mm-dd-T00:00:00.000+00:00"]` (for expressions) or `yyyy-mm-dd-T00:00:00.000+00:00` (in the Code node). To make this more readable, you can use Luxon's formatting functions.

For example, you want the field containing the date to be formatted as DD/MM/YYYY, so that on the 23rd June 2019, it returns `23/06/2019`.

This expression gets the date seven days before today, and converts it to the DD/MM/YYYY format.

[Expressions (JavaScript)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_5_1)[Code node (JavaScript)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_5_2)

|             |                                                        |
| ----------- | ------------------------------------------------------ |
| `<br>1<br>` | `<br>{{$today.minus({days: 7}).toLocaleString()}}<br>` |

|             |                                                                               |
| ----------- | ----------------------------------------------------------------------------- |
| `<br>1<br>` | `<br>let readableSevenDaysAgo = $today.minus({days: 7}).toLocaleString()<br>` |

You can alter the format. For example:

[Expressions (JavaScript)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_6_1)[Code node (JavaScript)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_6_2)

|             |                                                                                                        |
| ----------- | ------------------------------------------------------------------------------------------------------ |
| `<br>1<br>` | `<br>{{$today.minus({days: 7}).toLocaleString({month: 'long', day: 'numeric', year: 'numeric'})}}<br>` |

On 23rd June 2019, this returns "16 June 2019".

|             |                                                                                                                               |
| ----------- | ----------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>` | `<br>let readableSevenDaysAgo = $today.minus({days: 7}).toLocaleString({month: 'long', day: 'numeric', year: 'numeric'})<br>` |

On 23rd June 2019, this returns "16 June 2019".

Refer to Luxon's guide on [toLocaleString (strings for humans)](https://moment.github.io/luxon/#/formatting?id=tolocalestring-strings-for-humans) for more information.

### Get the time between two dates [\#](https://docs.n8n.io/code/cookbook/luxon/#get-the-time-between-two-dates "Permanent link")

To get the time between two dates, use Luxon's diffs feature. This subtracts one date from another and returns a duration.

For example, get the number of months between two dates:

[Expressions (JavaScript)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_7_1)[Code node (JavaScript)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_7_2)

|             |                                                                                                        |
| ----------- | ------------------------------------------------------------------------------------------------------ |
| `<br>1<br>` | `<br>{{DateTime.fromISO('2019-06-23').diff(DateTime.fromISO('2019-05-23'), 'months').toObject()}}<br>` |

This returns `[Object: {"months":1}]`.

|             |                                                                                                                             |
| ----------- | --------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>` | `<br>let monthsBetweenDates = DateTime.fromISO('2019-06-23').diff(DateTime.fromISO('2019-05-23'), 'months').toObject()<br>` |

This returns `{"months":1}`.

Refer to Luxon's [Diffs](https://moment.github.io/luxon/#/math?id=diffs) for more information.

### A longer example: How many days to Christmas? [\#](https://docs.n8n.io/code/cookbook/luxon/#a-longer-example-how-many-days-to-christmas "Permanent link")

This example brings together several Luxon features, uses JMESPath, and does some basic string manipulation.

The scenario: you want a countdown to 25th December. Every day, it should tell you the number of days remaining to Christmas. You don't want to update it for next year - it needs to seamlessly work for every year.

[Expressions (JavaScript)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_8_1)[Code node (JavaScript)](https://docs.n8n.io/code/cookbook/luxon/#__tabbed_8_2)

|             |                                                                                                                                                            |
| ----------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>` | `<br>{{"There are " + $today.diff(DateTime.fromISO($today.year + '-12-25'), 'days').toObject().days.toString().substring(1) + " days to Christmas!"}}<br>` |

This outputs `"There are <number of days> days to Christmas!"`. For example, on 9th March, it outputs "There are 291 days to Christmas!".

A detailed explanation of what the expression does:

- `{{`: indicates the start of the expression.
- `"There are "`: a string.
- `+`: used to join two strings.
- `$today.diff()`: This is similar to the example in [Get the time between two dates](https://docs.n8n.io/code/cookbook/luxon/#get-the-time-between-two-dates), but it uses n8n's custom `$today` variable.
- `DateTime.fromISO($today.year + '-12-25'), 'days'`: this part gets the current year using `$today.year`, turns it into an ISO string along with the month and date, and then takes the whole ISO string and converts it to a Luxon DateTime data structure. It also tells Luxon that you want the duration in days.
- `toObject()` turns the result of diff() into a more usable object. At this point, the expression returns `[Object: {"days":-<number-of-days>}]`. For example, on 9th March, `[Object: {"days":-291}]`.
- `.days` uses JMESPath syntax to retrieve just the number of days from the object. For more information on using JMESPath with n8n, refer to our [JMESpath](https://docs.n8n.io/code/cookbook/jmespath/) documentation. This gives you the number of days to Christmas, as a negative number.
- `.toString().substring(1)` turns the number into a string and removes the `-`.
- `+ " days to Christmas!"`: another string, with a `+` to join it to the previous string.
- `}}`: indicates the end of the expression.

|             |                                                                                                                                                                               |
| ----------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>` | `<br>let daysToChristmas = "There are " + $today.diff(DateTime.fromISO($today.year + '-12-25'), 'days').toObject().days.toString().substring(1) + " days to Christmas!";<br>` |

This outputs `"There are <number of days> days to Christmas!"`. For example, on 9th March, it outputs "There are 291 days to Christmas!".

A detailed explanation of what the code does:

- `"There are "`: a string.
- `+`: used to join two strings.
- `$today.diff()`: This is similar to the example in [Get the time between two dates](https://docs.n8n.io/code/cookbook/luxon/#get-the-time-between-two-dates), but it uses n8n's custom `$today` variable.
- `DateTime.fromISO($today.year + '-12-25'), 'days'`: this part gets the current year using `$today.year`, turns it into an ISO string along with the month and date, and then takes the whole ISO string and converts it to a Luxon DateTime data structure. It also tells Luxon that you want the duration in days.
- `toObject()` turns the result of diff() into a more usable object. At this point, the expression returns `[Object: {"days":-<number-of-days>}]`. For example, on 9th March, `[Object: {"days":-291}]`.
- `.days` uses JMESPath syntax to retrieve just the number of days from the object. For more information on using JMESPath with n8n, refer to our [JMESpath](https://docs.n8n.io/code/cookbook/jmespath/) documentation. This gives you the number of days to Christmas, as a negative number.
- `.toString().substring(1)` turns the number into a string and removes the `-`.
- `+ " days to Christmas!"`: another string, with a `+` to join it to the previous string.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Workflow Management

[Skip to content](https://docs.n8n.io/embed/managing-workflows/#workflow-management-in-embed)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/embed/managing-workflows.md "Edit this page")

# Workflow management in Embed [\#](https://docs.n8n.io/embed/managing-workflows/#workflow-management-in-embed "Permanent link")

Feature availability

Embed requires an embed license. For more information about when to use Embed, as well as costs and licensing processes, refer to [Embed](https://n8n.io/embed/) on the n8n website.

When managing an embedded n8n deployment, spanning across teams or organizations, you will likely need to run the same (or similar) workflows for multiple users. There are two available options for doing so:

| Solution                                                              | Pros                                                               | Cons                                           |
| --------------------------------------------------------------------- | ------------------------------------------------------------------ | ---------------------------------------------- |
| Create a workflow for each user                                       | No limitation on how workflow starts (can use any trigger)         | Requires managing multiple workflows.          |
| Create a single workflow, and pass it user credentials when executing | Simplified workflow management (only need to change one workflow). | To run the workflow, your product must call it |

Warning

The APIs referenced in this document are subject to change at any time. Be sure the check for continued functionality with each version upgrade.

## Workflow per user [\#](https://docs.n8n.io/embed/managing-workflows/#workflow-per-user "Permanent link")

There are three general steps to follow:

- Obtain the credentials for each user, and any additional parameters that may be required based on the workflow.
- Create the [n8n credentials](https://docs.n8n.io/glossary/#credential-n8n) for this user.
- Create the workflow.

### 1\. Obtain user credentials [\#](https://docs.n8n.io/embed/managing-workflows/#1-obtain-user-credentials "Permanent link")

Here you need to capture all credentials for any node/service this user must authenticate with, along with any additional parameters required for the particular workflow. The credentials and any parameters needed will depend on your workflow and what you are trying to do.

### 2\. Create user credentials [\#](https://docs.n8n.io/embed/managing-workflows/#2-create-user-credentials "Permanent link")

After all relevant credential details have been obtained, you can proceed to create the relevant service credentials in n8n. This can be done using the Editor UI or API call.

#### Using the Editor UI [\#](https://docs.n8n.io/embed/managing-workflows/#using-the-editor-ui "Permanent link")

1. From the menu select **Credentials** \> **New**.
2. Use the drop-down to select the **Credential type** to create, for example _Airtable_.
   [![Create New Credentials drop-down](https://docs.n8n.io/_images/embed/managing-workflows/create_new_credentials.png)](https://docs.n8n.io/_images/embed/managing-workflows/create_new_credentials.png)
3. In the **Create New Credentials** modal, enter the corresponding credentials details for the user, and select the nodes that will have access to these credentials.
   [![Create New Credentials modal](https://docs.n8n.io/_images/embed/managing-workflows/create_new_credentials2.png)](https://docs.n8n.io/_images/embed/managing-workflows/create_new_credentials2.png)
4. Click **Create** to finish and save.

#### Using the API [\#](https://docs.n8n.io/embed/managing-workflows/#using-the-api "Permanent link")

The frontend API used by the Editor UI can also be called to achieve the same result. The API endpoint is in the format: `https://<n8n-domain>/rest/credentials`.

For example, to create the credentials in the Editor UI example above, the request would be:

|             |                                                      |
| ----------- | ---------------------------------------------------- |
| `<br>1<br>` | `<br>POST https://<n8n-domain>/rest/credentials<br>` |

With the request body:

|                                                                                |                                                                                                                                                                                                                                         |
| ------------------------------------------------------------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>` | `<br>{<br>   "name":"MyAirtable",<br>   "type":"airtableApi",<br>   "nodesAccess":[<br>      {<br>         "nodeType":"n8n-nodes-base.airtable"<br>      }<br>   ],<br>   "data":{<br>      "apiKey":"q12we34r5t67yu"<br>   }<br>}<br>` |

The response will contain the ID of the new credentials, which you will use when creating the workflow for this user:

|                                                                                                                    |                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |
| ------------------------------------------------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>` | `<br>{<br>   "data":{<br>      "name":"MyAirtable",<br>      "type":"airtableApi",<br>      "data":{<br>         "apiKey":"q12we34r5t67yu"<br>      },<br>      "nodesAccess":[<br>         {<br>            "nodeType":"n8n-nodes-base.airtable",<br>            "date":"2021-09-10T07:41:27.770Z"<br>         }<br>      ],<br>      "id":"29",<br>      "createdAt":"2021-09-10T07:41:27.777Z",<br>      "updatedAt":"2021-09-10T07:41:27.777Z"<br>   }<br>}<br>` |

### 3\. Create the workflow [\#](https://docs.n8n.io/embed/managing-workflows/#3-create-the-workflow "Permanent link")

Best practice is to have a “base” workflow that you then duplicate and customize for each new user with their credentials (and any other details).

You can duplicate and customize your template workflow using either the Editor UI or API call.

#### Using the Editor UI [\#](https://docs.n8n.io/embed/managing-workflows/#using-the-editor-ui_1 "Permanent link")

1. From the menu select **Workflows** \> **Open** to open the template workflow to be duplicated.

2. Select **Workflows** \> **Duplicate**, then enter a name for this new workflow and click **Save**.
   [![Duplicate workflow](https://docs.n8n.io/_images/embed/managing-workflows/duplicate_workflow.png)](https://docs.n8n.io/_images/embed/managing-workflows/duplicate_workflow.png)

3. Update all relevant nodes to use the credentials for this user (created above).

4. **Save** this workflow set it to **Active** using the toggle in the top-right corner.

#### Using the API [\#](https://docs.n8n.io/embed/managing-workflows/#using-the-api_1 "Permanent link")

1. Fetch the JSON of the template workflow using the endpoint: `https://<n8n-domain>/rest/workflows/<workflow_id>`

|             |                                                        |
| ----------- | ------------------------------------------------------ |
| `<br>1<br>` | `<br>GET https://<n8n-domain>/rest/workflows/1012<br>` |

The response will contain the JSON data of the selected workflow:

|||
|| ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br>  1<br>  2<br>  3<br>  4<br>  5<br>  6<br>  7<br>  8<br>  9<br> 10<br> 11<br> 12<br> 13<br> 14<br> 15<br> 16<br> 17<br> 18<br> 19<br> 20<br> 21<br> 22<br> 23<br> 24<br> 25<br> 26<br> 27<br> 28<br> 29<br> 30<br> 31<br> 32<br> 33<br> 34<br> 35<br> 36<br> 37<br> 38<br> 39<br> 40<br> 41<br> 42<br> 43<br> 44<br> 45<br> 46<br> 47<br> 48<br> 49<br> 50<br> 51<br> 52<br> 53<br> 54<br> 55<br> 56<br> 57<br> 58<br> 59<br> 60<br> 61<br> 62<br> 63<br> 64<br> 65<br> 66<br> 67<br> 68<br> 69<br> 70<br> 71<br> 72<br> 73<br> 74<br> 75<br> 76<br> 77<br> 78<br> 79<br> 80<br> 81<br> 82<br> 83<br> 84<br> 85<br> 86<br> 87<br> 88<br> 89<br> 90<br> 91<br> 92<br> 93<br> 94<br> 95<br> 96<br> 97<br> 98<br> 99<br>100<br>101<br>102<br>103<br>104<br>105<br>106<br>107<br>108<br>109<br>110<br>111<br>112<br>113<br>114<br>115<br>116<br>117<br>118<br>119<br>120<br>121<br>122<br>123<br>124<br>125<br>126<br>127<br>128<br>129<br>130<br>131<br>132<br>133<br>134<br>135<br>136<br>137<br>138<br>139<br>140<br>141<br>142<br>143<br>144<br>145<br>146<br>147<br>148<br>149<br>150<br>151<br>152<br>153<br>154<br>155<br>156<br>157<br>158<br>159<br>160<br>161<br>162<br>163<br>164<br>165<br>166<br>167<br>168<br>169<br>170<br>171<br>172<br>173<br>174<br>175<br>176<br>177<br>178<br>179<br>180<br>181<br>182<br>183<br>184<br>185<br>186<br>187<br>188<br>189<br>190<br>191<br>192<br>193<br>194<br>195<br>196<br>197<br>198<br>199<br>200<br>201<br>202<br>203<br>204<br>205<br>206<br>207<br>208<br>209<br>210<br>211<br>212<br>213<br>214<br>215<br>216<br>217<br>218<br>219<br>220<br>221<br>222<br>223<br>224<br>225<br>226<br>227<br>228<br>` | `<br>{<br>  "data": {<br>    "id": "1012",<br>    "name": "Nathan's Workflow",<br>    "active": false,<br>    "nodes": [<br>      {<br>        "parameters": {},<br>        "name": "Start",<br>        "type": "n8n-nodes-base.start",<br>        "typeVersion": 1,<br>        "position": [<br>          130,<br>          640<br>        ]<br>      },<br>      {<br>        "parameters": {<br>          "authentication": "headerAuth",<br>          "url": "https://internal.users.n8n.cloud/webhook/custom-erp",<br>          "options": {<br>            "splitIntoItems": true<br>          },<br>          "headerParametersUi": {<br>            "parameter": [<br>              {<br>                "name": "unique_id",<br>                "value": "recLhLYQbzNSFtHNq"<br>              }<br>            ]<br>          }<br>        },<br>        "name": "HTTP Request",<br>        "type": "n8n-nodes-base.httpRequest",<br>        "typeVersion": 1,<br>        "position": [<br>          430,<br>          300<br>        ],<br>        "credentials": {<br>          "httpHeaderAuth": "beginner_course"<br>        }<br>      },<br>      {<br>        "parameters": {<br>          "operation": "append",<br>          "application": "appKBGQfbm6NfW6bv",<br>          "table": "processingOrders",<br>          "options": {}<br>        },<br>        "name": "Airtable",<br>        "type": "n8n-nodes-base.airtable",<br>        "typeVersion": 1,<br>        "position": [<br>          990,<br>          210<br>        ],<br>        "credentials": {<br>          "airtableApi": "Airtable"<br>        }<br>      },<br>      {<br>        "parameters": {<br>          "conditions": {<br>            "string": [<br>              {<br>                "value1": "={{$json[\"orderStatus\"]}}",<br>                "value2": "processing"<br>              }<br>            ]<br>          }<br>        },<br>        "name": "IF",<br>        "type": "n8n-nodes-base.if",<br>        "typeVersion": 1,<br>        "position": [<br>          630,<br>          300<br>        ]<br>      },<br>      {<br>        "parameters": {<br>          "keepOnlySet": true,<br>          "values": {<br>            "number": [<br>              {<br>                "name": "=orderId",<br>                "value": "={{$json[\"orderID\"]}}"<br>              }<br>            ],<br>            "string": [<br>              {<br>                "name": "employeeName",<br>                "value": "={{$json[\"employeeName\"]}}"<br>              }<br>            ]<br>          },<br>          "options": {}<br>        },<br>        "name": "Set",<br>        "type": "n8n-nodes-base.set",<br>        "typeVersion": 1,<br>        "position": [<br>          800,<br>          210<br>        ]<br>      },<br>      {<br>        "parameters": {<br>          "functionCode": "let totalBooked = items.length;\nlet bookedSum = 0;\n\nfor(let i=0; i < items.length; i++) {\n  bookedSum = bookedSum + items[i].json.orderPrice;\n}\nreturn [{json:{totalBooked, bookedSum}}]\n"<br>        },<br>        "name": "Function",<br>        "type": "n8n-nodes-base.function",<br>        "typeVersion": 1,<br>        "position": [<br>          800,<br>          400<br>        ]<br>      },<br>      {<br>        "parameters": {<br>          "webhookUri": "https://discord.com/api/webhooks/865213348202151968/oD5_WPDQwtr22Vjd_82QP3-_4b_lGhAeM7RynQ8Js5DzyXrQEnj0zeAQIA6fki1JLtXE",<br>          "text": "=This week we have {{$json[\"totalBooked\"]}} booked orders with a total value of {{$json[\"bookedSum\"]}}. My Unique ID: {{$node[\"HTTP Request\"].parameter[\"headerParametersUi\"][\"parameter\"][0][\"value\"]}}"<br>        },<br>        "name": "Discord",<br>        "type": "n8n-nodes-base.discord",<br>        "typeVersion": 1,<br>        "position": [<br>          1000,<br>          400<br>        ]<br>      },<br>      {<br>        "parameters": {<br>          "triggerTimes": {<br>            "item": [<br>              {<br>                "mode": "everyWeek",<br>                "hour": 9<br>              }<br>            ]<br>          }<br>        },<br>        "name": "Cron",<br>        "type": "n8n-nodes-base.cron",<br>        "typeVersion": 1,<br>        "position": [<br>          220,<br>          300<br>        ]<br>      }<br>    ],<br>    "connections": {<br>      "HTTP Request": {<br>        "main": [<br>          [<br>            {<br>              "node": "IF",<br>              "type": "main",<br>              "index": 0<br>            }<br>          ]<br>        ]<br>      },<br>      "Start": {<br>        "main": [<br>          []<br>        ]<br>      },<br>      "IF": {<br>        "main": [<br>          [<br>            {<br>              "node": "Set",<br>              "type": "main",<br>              "index": 0<br>            }<br>          ],<br>          [<br>            {<br>              "node": "Function",<br>              "type": "main",<br>              "index": 0<br>            }<br>          ]<br>        ]<br>      },<br>      "Set": {<br>        "main": [<br>          [<br>            {<br>              "node": "Airtable",<br>              "type": "main",<br>              "index": 0<br>            }<br>          ]<br>        ]<br>      },<br>      "Function": {<br>        "main": [<br>          [<br>            {<br>              "node": "Discord",<br>              "type": "main",<br>              "index": 0<br>            }<br>          ]<br>        ]<br>      },<br>      "Cron": {<br>        "main": [<br>          [<br>            {<br>              "node": "HTTP Request",<br>              "type": "main",<br>              "index": 0<br>            }<br>          ]<br>        ]<br>      }<br>    },<br>    "createdAt": "2021-07-16T11:15:46.066Z",<br>    "updatedAt": "2021-07-16T12:05:44.045Z",<br>    "settings": {},<br>    "staticData": null,<br>    "tags": []<br>  }<br>}<br>` |

1. Save the returned JSON data and update any relevant credentials and fields for the new user.

2. Create a new workflow using the updated JSON as the request body at endpoint: `https://<n8n-domain>/rest/workflows`

|             |                                                     |
| ----------- | --------------------------------------------------- |
| `<br>1<br>` | `<br>POST https://<n8n-domain>/rest/workflows/<br>` |

The response will contain the ID of the new workflow, which you will use in the next step.

1. Lastly, activate the new workflow:

|             |                                                          |
| ----------- | -------------------------------------------------------- |
| `<br>1<br>` | `<br>PATCH https://<n8n-domain>/rest/workflows/1012<br>` |

Passing the additional value `active` in your JSON payload:

|                                 |                                                                                            |
| ------------------------------- | ------------------------------------------------------------------------------------------ |
| `<br>1<br>2<br>3<br>4<br>5<br>` | `<br>// ...<br>"active":true,<br>"settings": {},<br>"staticData": null,<br>"tags": []<br>` |

## Single workflow [\#](https://docs.n8n.io/embed/managing-workflows/#single-workflow "Permanent link")

There are four steps to follow to implement this method:

- Obtain the credentials for each user, and any additional parameters that may be required based on the workflow. See [Obtain user credentials](https://docs.n8n.io/embed/managing-workflows/#1-obtain-user-credentials) above.
- Create the n8n credentials for this user. See [Create user credentials](https://docs.n8n.io/embed/managing-workflows/#2-create-user-credentials) above.
- Create the workflow.
- Call the workflow as needed.

### Create the workflow [\#](https://docs.n8n.io/embed/managing-workflows/#create-the-workflow "Permanent link")

The details and scope of this workflow will vary greatly according to the individual use case, however there are a few design implementations to keep in mind:

- This workflow must be triggered by a [Webhook](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.webhook/) node.
- The incoming webhook call must contain the user’s credentials and any other workflow parameters required.
- Each node where the user’s credentials are needed should use an [expression](https://docs.n8n.io/code/expressions/) so that the node’s credential field reads the credential provided in the webhook call.
- Save and activate the workflow, ensuring the production URL is selected for the Webhook node. Refer to [webhook node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.webhook/) for more information.

### Call the workflow [\#](https://docs.n8n.io/embed/managing-workflows/#call-the-workflow "Permanent link")

For each new user, or for any existing user as may be needed, call the webhook defined as the workflow trigger and provide the necessary credentials (and any other workflow parameters).

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Data Pinning Guide

[Skip to content](https://docs.n8n.io/data/data-pinning/#data-pinning)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/data/data-pinning.md "Edit this page")

# Data pinning [\#](https://docs.n8n.io/data/data-pinning/#data-pinning "Permanent link")

You can 'pin' data during workflow development. Data pinning means saving the output data of a node, and using the saved data instead of fetching fresh data in future workflow executions.

You can use this when working with data from external sources to avoid having to repeat requests to the external system. This can save time and resources:

- If your workflow relies on an external system to trigger it, such as a webhook call, being able to pin data means you don't need to use the external system every time you test the workflow.
- If the external resource has data or usage limits, pinning data during tests avoids consuming your resource limits.
- You can fetch and pin the data you want to test, then have confidence that the data is consistent in all your workflow tests.

You can only pin data for nodes that have a single main output ("error" outputs don't count for this purpose).

For development only

Data pinning isn't available for production workflow executions. It's a feature to help test workflows during development.

## Pin data [\#](https://docs.n8n.io/data/data-pinning/#pin-data "Permanent link")

To pin data in a node:

1. Run the node to load data.
2. In the **OUTPUT** view, select **Pin data**![Pin data icon](https://docs.n8n.io/_images/data/data-pinning/data-pinning-button.png). When data pinning is active, the button is disabled and a "This data is pinned" banner is displayed in the **OUTPUT** view.

Nodes that output binary data

You can't pin data if the output data includes binary data.

## Unpin data [\#](https://docs.n8n.io/data/data-pinning/#unpin-data "Permanent link")

When data pinning is active, a banner appears at the top of the node's output panel indicating that n8n has pinned the data. To unpin data and fetch fresh data on the next execution, select the **Unpin** link in the banner.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Debug Past Executions

[Skip to content](https://docs.n8n.io/workflows/executions/debug/#debug-and-re-run-past-executions)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/workflows/executions/debug.md "Edit this page")

# Debug and re-run past executions [\#](https://docs.n8n.io/workflows/executions/debug/#debug-and-re-run-past-executions "Permanent link")

Feature availability

Available on n8n Cloud and registered Community plans.

You can load data from a previous execution into your current workflow. This is useful for debugging data from failed production executions: you can see a failed execution, make changes to your workflow to fix it, then re-run it with the previous execution data.

## Load data [\#](https://docs.n8n.io/workflows/executions/debug/#load-data "Permanent link")

To load data from a previous execution:

1. In your workflow, select the **Executions** tab to view the **Executions** list.
2. Select the execution you want to debug. n8n displays options depending on whether the workflow was successful or failed:
   - For failed executions: select **Debug in editor**.
   - For successful executions: select **Copy to editor**.
3. n8n copies the execution data into your current workflow, and [pins the data](https://docs.n8n.io/data/data-pinning/) in the first node in the workflow.

Check which executions you save

The executions available on the **Executions** list depends on your [Workflow settings](https://docs.n8n.io/workflows/settings/).

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=512953449.1744299882&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509682~102788824~102803279~102813109~102887799~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=1360506028)

## Schema Preview

[Skip to content](https://docs.n8n.io/data/schema-preview/#schema-preview)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/data/schema-preview.md "Edit this page")

# Schema Preview [\#](https://docs.n8n.io/data/schema-preview/#schema-preview "Permanent link")

Schema Preview exposes expected schema data from the previous node in the Node Editor without the user having to provide credentials or execute the node. This makes it possible to construct workflows without having to provide credentials in advance. The preview doesn't include mock data, but it does expose the expected fields, making it possible to select and incorporate them into the input of subsequent nodes.

## Using the preview [\#](https://docs.n8n.io/data/schema-preview/#using-the-preview "Permanent link")

1. There must be a node with Schema Preview available in your workflow.
2. When clicking on the details of the next node in the sequence, the Schema Preview data will show up in the Node Editor where schema data would typically be exposed.
3. Use data from the Schema Preview just as you would other schemas - drag and drop fields as input into your node parameters and settings.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=1727908982.1744299882&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509682~102788824~102803279~102813109~102887799~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=54862281)

## Data Mocking Techniques

[Skip to content](https://docs.n8n.io/data/data-mocking/#data-mocking)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/data/data-mocking.md "Edit this page")

# Data mocking [\#](https://docs.n8n.io/data/data-mocking/#data-mocking "Permanent link")

Data mocking is simulating or faking data. It's useful when developing a workflow. By mocking data, you can:

- Avoid making repeated calls to your data source. This saves time and costs.
- Work with a small, predictable dataset during initial development.
- Avoid the risk of overwriting live data: in the early stages of building your workflow, you don't need to connect your real data source.

## Mocking with real data using data pinning [\#](https://docs.n8n.io/data/data-mocking/#mocking-with-real-data-using-data-pinning "Permanent link")

Using [data pinning](https://docs.n8n.io/data/data-pinning/), you load real data into your workflow, then pin it in the output panel of a node. Using this approach you have realistic data, with only one call to your data source. You can [edit pinned data](https://docs.n8n.io/data/data-editing/).

Use this approach when you need to configure your workflow to handle the exact data structure and parameters provided by your data source.

To pin data in a node:

1. Run the node to load data.
2. In the **OUTPUT** view, select **Pin data**![Pin data icon](https://docs.n8n.io/_images/data/data-pinning/data-pinning-button.png). When data pinning is active, the button is disabled and a "This data is pinned" banner is displayed in the **OUTPUT** view.

Nodes that output binary data

You can't pin data if the output data includes binary data.

## Generate custom data using the Code or Edit Fields nodes [\#](https://docs.n8n.io/data/data-mocking/#generate-custom-data-using-the-code-or-edit-fields-nodes "Permanent link")

You can create a custom dataset in your workflow using either the [Code node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code/) or the [Edit Fields (Set) node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.set/).

In the Code node, you can create any data set you want, and return it as the node output. In the Edit Fields node, select **Add fields** to add your custom data.

The Edit Fields node is a good choice for small tests. To create more complex datasets, use the Code node.

## Output a sample data set from the Customer Datastore node [\#](https://docs.n8n.io/data/data-mocking/#output-a-sample-data-set-from-the-customer-datastore-node "Permanent link")

The Customer Datastore node provides a fake dataset to work with. Add and execute the node to explore the data.

Use this approach if you need some test data when exploring n8n, and you don't have a real use-case to work with.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Help and Support

[Skip to content](https://docs.n8n.io/help-community/help/#get-help-with-n8n)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/help-community/help.md "Edit this page")

# Get help with n8n [\#](https://docs.n8n.io/help-community/help/#get-help-with-n8n "Permanent link")

If you need more help with n8n, you can ask for support in the [forum](https://community.n8n.io/). This is the best source of answers, as both the n8n support team and community members can help.

If your Cloud instance is having issues, or if you're an enterprise customer who needs support, you can contact [help@n8n.io](mailto:help@n8n.io).

## Use the About n8n debug tool [\#](https://docs.n8n.io/help-community/help/#use-the-about-n8n-debug-tool "Permanent link")

Whether you're posting to the forum or emailing customer support, you'll get help faster if you provide details about your n8n instance in your first post or email.

The fastest way to do this is to use the **About n8n** debug tool:

1. Open the left-side panel.
2. Select **Help**.
3. Select **About n8n**.
4. The **About n8n** modal opens to display your current information.
5. Select **Copy debug information** to copy your information.
6. n8n recommends pasting this information into your forum post or support email.

Don't see **Copy debug**?

The **Copy debug** option is available beginning in n8n version 1.49.0.

If you're using an earlier version of n8n, n8n recommends manually providing this information:

- n8n version
- Database
- n8n EXECUTIONS_PROCESS setting
- Running n8n via (Docker, npm, n8n cloud)
- Operating system

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## AI Coding with n8n

[Skip to content](https://docs.n8n.io/code/ai-code/#ai-coding-with-gpt)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/code/ai-code.md "Edit this page")

# AI coding with GPT [\#](https://docs.n8n.io/code/ai-code/#ai-coding-with-gpt "Permanent link")

Not available on self-hosted.

Python isn't supported.
///

## Use AI in the Code node [\#](https://docs.n8n.io/code/ai-code/#use-ai-in-the-code-node "Permanent link")

Feature availability

AI assistance in the Code node is available to Cloud users. It isn't available in self-hosted n8n.

AI generated code overwrites your code

If you've already written some code on the **Code** tab, the AI generated code will replace it. n8n recommends using AI as a starting point to create your initial code, then editing it as needed.

To use ChatGPT to generate code in the Code node:

1. In the Code node, set **Language** to **JavaScript**.
2. Select the **Ask AI** tab.
3. Write your query.
4. Select **Generate Code**. n8n sends your query to ChatGPT, then displays the result in the **Code** tab.

## Usage limits [\#](https://docs.n8n.io/code/ai-code/#usage-limits "Permanent link")

During the trial phase there are no usage limits. If n8n makes the feature permanent, there may be usage limits as part of your pricing tier.

## Feature limits [\#](https://docs.n8n.io/code/ai-code/#feature-limits "Permanent link")

The ChatGPT implementation in n8n has the following limitations:

- The AI writes code that manipulates data from the n8n workflow. You can't ask it to pull in data from other sources.
- The AI doesn't know your data, just the schema, so you need to tell it things like how to find the data you want to extract, or how to check for null.
- Nodes before the Code node must execute and deliver data to the Code node before you run your AI query.
- Doesn't work with large incoming data schemas.
- May have issues if there are a lot of nodes before the code node.

## Writing good prompts [\#](https://docs.n8n.io/code/ai-code/#writing-good-prompts "Permanent link")

Writing good prompts increases the chance of getting useful code back.

Some general tips:

- Provide examples: if possible, give a sample expected output. This helps the AI to better understand the transformation or logic you’re aiming for.
- Describe the processing steps: if there are specific processing steps or logic that should apply to the data, list them in sequence. For example: "First, filter out all users under 18. Then, sort the remaining users by their last name."
- Avoid ambiguities: while the AI understands various instructions, being clear and direct ensures you get the most accurate code. Instead of saying "Get the older users," you might say "Filter users who are 60 years and above."
- Be clear about what you expect as the output. Do you want the data transformed, filtered, aggregated, or sorted? Provide as much detail as possible.

And some n8n-specific guidance:

- Think about the input data: make sure ChatGPT knows which pieces of the data you want to access, and what the incoming data represents. You may need to tell ChatGPT about the availability of n8n's built-in methods and variables.
- Declare interactions between nodes: if your logic involves data from multiple nodes, specify how they should interact. "Merge the output of 'Node A' with 'Node B' based on the 'userID' property". if you prefer data to come from certain nodes or to ignore others, be clear: "Only consider data from the 'Purchases' node and ignore the 'Refunds' node."
- Ensure the output is compatible with n8n. Refer to [Data structure](https://docs.n8n.io/data/data-structure/) for more information on the data structure n8n requires.

### Example prompts [\#](https://docs.n8n.io/code/ai-code/#example-prompts "Permanent link")

These examples show a range of possible prompts and tasks.

#### Example 1: Find a piece of data inside a second dataset [\#](https://docs.n8n.io/code/ai-code/#example-1-find-a-piece-of-data-inside-a-second-dataset "Permanent link")

To try the example yourself, [download the example workflow](https://docs.n8n.io/_workflows/ai-code/find-a-piece-of-data.json) and import it into n8n.

In the third Code node, enter this prompt:

> The slack data contains only one item. The input data represents all Notion users. Sometimes the person property that holds the email can be null. I want to find the notionId of the Slack user and return it.

Take a look at the code the AI generates.

This is the JavaScript you need:

|                                                     |                                                                                                                                                                                                                                                                                                                                                 |
| --------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>` | `<br>const slackUser = $("Mock Slack").all()[0];<br>const notionUsers = $input.all();<br>const slackUserEmail = slackUser.json.email;<br>const notionUser = notionUsers.find(<br>  (user) => user.json.person && user.json.person.email === slackUserEmail<br>);<br>return notionUser ? [{ json: { notionId: notionUser.json.id } }] : [];<br>` |

#### Example 2: Data transformation [\#](https://docs.n8n.io/code/ai-code/#example-2-data-transformation "Permanent link")

To try the example yourself, [download the example workflow](https://docs.n8n.io/_workflows/ai-code/data-transformation.json) and import it into n8n.

In the **Join items** Code node, enter this prompt:

> Return a single line of text that has all usernames listed with a comma. Each username should be enquoted with a double quotation mark.

Take a look at the code the AI generates.

This is the JavaScript you need:

|                            |                                                                                                                                                                                                     |
| -------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>3<br>4<br>` | `` <br>const items = $input.all();<br>const usernames = items.map((item) => `"${item.json.username}"`);<br>const result = usernames.join(", ");<br>return [{ json: { usernames: result } }];<br> `` |

#### Example 3: Summarize data and create a Slack message [\#](https://docs.n8n.io/code/ai-code/#example-3-summarize-data-and-create-a-slack-message "Permanent link")

To try the example yourself, [download the example workflow](https://docs.n8n.io/_workflows/ai-code/summarize-data.json) and import it into n8n.

In the **Summarize** Code node, enter this prompt:

> Create a markdown text for Slack that counts how many ideas, features and bugs have been submitted. The type of submission is saved in the property_type field. A feature has the property "Feature", a bug has the property "Bug" and an idea has the property "Bug". Also, list the five top submissions by vote in that message. Use "" as markdown for links.

Take a look at the code the AI generates.

This is the JavaScript you need:

|                                                                                                                                                                                                                                                        ||
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ || ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>` | ```<br>const submissions = $input.all();<br>// Count the number of ideas, features, and bugs<br>let ideaCount = 0;<br>let featureCount = 0;<br>let bugCount = 0;<br>submissions.forEach((submission) => {<br>  switch (submission.json.property_type[0]) {<br>    case "Idea":<br>      ideaCount++;<br>      break;<br>    case "Feature":<br>      featureCount++;<br>      break;<br>    case "Bug":<br>      bugCount++;<br>      break;<br>  }<br>});<br>// Sort submissions by votes and take the top 5<br>const topSubmissions = submissions<br>  .sort((a, b) => b.json.property_votes - a.json.property_votes)<br>  .slice(0, 5);<br>let topSubmissionText = "";<br>topSubmissions.forEach((submission) => {<br>  topSubmissionText += `<${submission.json.url} | ${submission.json.name}> with ${submission.json.property_votes} votes\n`;<br>});<br>// Construct the Slack message<br>const slackMessage = `*Summary of Submissions*\n<br>Ideas: ${ideaCount}\n<br>Features: ${featureCount}\n<br>Bugs: ${bugCount}\n<br>Top 5 Submissions:\n<br>${topSubmissionText}`;<br>return [{ json: { slackMessage } }];<br>``` |

### Reference incoming node data explicitly [\#](https://docs.n8n.io/code/ai-code/#reference-incoming-node-data-explicitly "Permanent link")

If your incoming data contains nested fields, using dot notation to reference them can help the AI understand what data you want.

[!["Screenshot of an n8n code node, highlighting how to reference data with dot notation in an AI query"](https://docs.n8n.io/_images/code/ai-code/reference-data-dot-notation.png)](https://docs.n8n.io/_images/code/ai-code/reference-data-dot-notation.png)

To try the example yourself, [download the example workflow](https://docs.n8n.io/_workflows/ai-code/reference-incoming-data-explicitly.json) and import it into n8n.

In the second Code node, enter this prompt:

> The data in "Mock data" represents a list of people. For each person, return a new item containing personal_info.first_name and work_info.job_title.

This is the JavaScript you need:

|                                                                                |                                                                                                                                                                                                                                                                                                                  |
| ------------------------------------------------------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>` | `<br>const items = $input.all();<br>const newItems = items.map((item) => {<br>  const firstName = item.json.personal_info.first_name;<br>  const jobTitle = item.json.work_info.job_title;<br>  return {<br>    json: {<br>      firstName,<br>      jobTitle,<br>    },<br>  };<br>});<br>return newItems;<br>` |

### Related resources [\#](https://docs.n8n.io/code/ai-code/#related-resources "Permanent link")

Pluralsight offer a short guide on [How to use ChatGPT to write code](https://www.pluralsight.com/blog/software-development/how-use-chatgpt-programming-coding), which includes example prompts.

## Fixing the code [\#](https://docs.n8n.io/code/ai-code/#fixing-the-code "Permanent link")

The AI-generated code may work without any changes, but you may have to edit it. You need to be aware of n8n's [Data structure](https://docs.n8n.io/data/data-structure/). You may also find n8n's built-in methods and variables useful.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Binary Data Management

[Skip to content](https://docs.n8n.io/data/binary-data/#binary-data)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/data/binary-data.md "Edit this page")

# Binary data [\#](https://docs.n8n.io/data/binary-data/#binary-data "Permanent link")

Binary data is any file-type data, such as image files or documents.

This page collects resources relating to binary data in n8n.

## Working with binary data in your workflows [\#](https://docs.n8n.io/data/binary-data/#working-with-binary-data-in-your-workflows "Permanent link")

You can process binary data in n8n workflows. n8n provides nodes to help you work with binary data. You can also use code.

### Nodes [\#](https://docs.n8n.io/data/binary-data/#nodes "Permanent link")

There are three key nodes dedicated to handling binary data files:

- [Read/Write Files from Disk](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.readwritefile/) to read and write files from/to the machine where n8n is running.
- [Convert to File](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.converttofile/) to take input data and output it as a file.
- [Extract From File](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.extractfromfile/) to get data from a binary format and convert it to JSON.

There are separate nodes for working with XML and HTML data:

- [HTML](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.html/)
- [XML](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.xml/)

And nodes for performing common tasks:

- [Compression](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.compression/)
- [Edit Image](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.editimage/)
- [FTP](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.ftp/)

You can trigger a workflow based on changes to a local file using the [Local File trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.localfiletrigger/).

To split or concatenate binary data items, use the [data transformation nodes](https://docs.n8n.io/data/#data-transformation-nodes).

### Code [\#](https://docs.n8n.io/data/binary-data/#code "Permanent link")

You can use the [Code node](https://docs.n8n.io/code/code-node/) to manipulate binary data in your workflows. For example, [Get the binary data buffer](https://docs.n8n.io/code/cookbook/code-node/get-binary-data-buffer/): get the binary data available in your workflow.

## Configure binary data mode when self-hosting [\#](https://docs.n8n.io/data/binary-data/#configure-binary-data-mode-when-self-hosting "Permanent link")

You can configure how your self-hosted n8n instance handles binary data using the [Binary data environment variables](https://docs.n8n.io/hosting/configuration/environment-variables/binary-data/). This includes tasks such as setting the storage path and choosing how to store binary data.

Your configuration affects how well n8n scales: [Scaling \| Binary data filesystem mode](https://docs.n8n.io/hosting/scaling/binary-data/).

Reading and writing binary files can have security implications. If you want to disable reading and writing binary data, use the `NODES_EXCLUDE` environment variable. Refer to [Environment variables \| Nodes](https://docs.n8n.io/hosting/configuration/environment-variables/nodes/) for more information.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Looping in n8n

[Skip to content](https://docs.n8n.io/flow-logic/looping/#looping-in-n8n)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/flow-logic/looping.md "Edit this page")

# Looping in n8n [\#](https://docs.n8n.io/flow-logic/looping/#looping-in-n8n "Permanent link")

Looping is useful when you want to process multiple items or perform an action repeatedly, such as sending a message to every contact in your address book. n8n handles this repetitive processing automatically, meaning you don't need to specifically build loops into your workflows. There are [some nodes](https://docs.n8n.io/flow-logic/looping/#node-exceptions) where this isn't true.

## Using loops in n8n [\#](https://docs.n8n.io/flow-logic/looping/#using-loops-in-n8n "Permanent link")

n8n nodes take any number of items as input, process these items, and output the results. You can think of each item as a single data point, or a single row in the output table of a node.

[![The Customer Datastore node output](https://docs.n8n.io/_images/flow-logic/looping/customer_datastore_node.png)](https://docs.n8n.io/_images/flow-logic/looping/customer_datastore_node.png)

Nodes usually run once for each item. For example, if you wanted to send the name and notes of the customers in the Customer Datastore node as a message on Slack, you would:

1. Connect the Slack node to the Customer Datastore node.
2. Configure the parameters.
3. Execute the node.

You would receive five messages: one for each item.

This is how you can process multiple items without having to explicitly connect nodes in a loop.

### Executing nodes once [\#](https://docs.n8n.io/flow-logic/looping/#executing-nodes-once "Permanent link")

For situations where you don't want a node to process all received items, for example sending a Slack message only to the first customer, you can do so by toggling the **Execute Once** parameter in the **Settings** tab of that node This setting is helpful when the incoming data contains multiple items and you want to only process the first one.

## Creating loops [\#](https://docs.n8n.io/flow-logic/looping/#creating-loops "Permanent link")

n8n typically handles the iteration for all incoming items. However, there are certain scenarios where you will have to create a loop to iterate through all items. Refer to [Node exceptions](https://docs.n8n.io/flow-logic/looping/#node-exceptions) for a list of nodes that don't automatically iterate over all incoming items.

### Loop until a condition is met [\#](https://docs.n8n.io/flow-logic/looping/#loop-until-a-condition-is-met "Permanent link")

To create a loop in an n8n workflow, connect the output of one node to the input of a previous node. Add an [IF](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.if/) node to check when to stop the loop.

Here is an [example workflow](https://n8n.io/workflows/1130) that implements a loop with an `IF` node:

[![Editor UI view of sample workflow](https://docs.n8n.io/_images/flow-logic/looping/example_workflow.png)](https://docs.n8n.io/_images/flow-logic/looping/example_workflow.png)

### Loop until all items are processed [\#](https://docs.n8n.io/flow-logic/looping/#loop-until-all-items-are-processed "Permanent link")

Use the [Loop Over Items](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.splitinbatches/) node when you want to loop until all items are processed. To process each item individually, set **Batch Size** to `1`.

You can batch the data in groups and process these batches. This approach is useful for avoiding API rate limits when processing large incoming data or when you want to process a specific group of returned items.

The Loop Over Items node stops executing after all the incoming items get divided into batches and passed on to the next node in the workflow so it's not necessary to add an IF node to stop the loop.

## Node exceptions [\#](https://docs.n8n.io/flow-logic/looping/#node-exceptions "Permanent link")

Nodes and operations where you need to design a loop into your workflow:

- [CrateDB](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.cratedb/) executes once for `insert` and `update`.
- [Code](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code/) node in **Run Once for All Items** mode: processes all the items based on the entered code snippet.
- [Execute Workflow](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflow/) node in **Run Once for All Items** mode.
- [HTTP Request](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/): you must handle pagination yourself. If your API call returns paginated results you must create a loop to fetch one page at a time.
- [Microsoft SQL](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.microsoftsql/) executes once for `insert`, `update`, and `delete`.
- [MongoDB](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.mongodb/) executes once for `insert` and `update`.
- [QuestDB](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.questdb/) executes once for `insert`.
- [Redis](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.redis/):
  - Info: this operation executes only once, regardless of the number of items in the incoming data.
- [RSS Read](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.rssfeedread/) executes once for the requested URL.
- [TimescaleDB](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.timescaledb/) executes once for `insert` and `update`.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Convenience Methods

[Skip to content](https://docs.n8n.io/code/builtin/convenience/#convenience-methods)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/code/builtin/convenience.md "Edit this page")

# Convenience methods [\#](https://docs.n8n.io/code/builtin/convenience/#convenience-methods "Permanent link")

n8n provides these methods to make it easier to perform common tasks in [expressions](https://docs.n8n.io/glossary/#expression-n8n).

Python support

You can use Python in the Code node. It isn't available in expressions.

[JavaScript](https://docs.n8n.io/code/builtin/convenience/#__tabbed_1_1)[Python](https://docs.n8n.io/code/builtin/convenience/#__tabbed_1_2)

| Method                                                        | Description                                                                                                                                                                                                                                                                                                                                                                                                | Available in Code node?                                                       |
| ------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------- |
| `$evaluateExpression(expression: string, itemIndex?: number)` | Evaluates a string as an expression. If you don't provide `itemIndex`, n8n uses the data from item 0 in the Code node.                                                                                                                                                                                                                                                                                     | ![✅](https://cdn.jsdelivr.net/gh/jdecked/twemoji@15.1.0/assets/svg/2705.svg) |
| `$ifEmpty(value, defaultValue)`                               | The `$ifEmpty()` function takes two parameters, tests the first to check if it's empty, then returns either the parameter (if not empty) or the second parameter (if the first is empty). The first parameter is empty if it's:<br>- `undefined`<br>- `null`<br>- An empty string `''`<br>- An array where `value.length` returns `false`<br>- An object where `Object.keys(value).length` returns `false` | ![✅](https://cdn.jsdelivr.net/gh/jdecked/twemoji@15.1.0/assets/svg/2705.svg) |
| `$if()`                                                       | The `$if()` function takes three parameters: a condition, the value to return if true, and the value to return if false.                                                                                                                                                                                                                                                                                   | ![❌](https://cdn.jsdelivr.net/gh/jdecked/twemoji@15.1.0/assets/svg/274c.svg) |
| `$max()`                                                      | Returns the highest of the provided numbers.                                                                                                                                                                                                                                                                                                                                                               | ![❌](https://cdn.jsdelivr.net/gh/jdecked/twemoji@15.1.0/assets/svg/274c.svg) |
| `$min()`                                                      | Returns the lowest of the provided numbers.                                                                                                                                                                                                                                                                                                                                                                | ![❌](https://cdn.jsdelivr.net/gh/jdecked/twemoji@15.1.0/assets/svg/274c.svg) |

| Method                                                        | Description                                                                                                                                                                                                                                                                                                                                                                                                |
| ------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `_evaluateExpression(expression: string, itemIndex?: number)` | Evaluates a string as an expression. If you don't provide `itemIndex`, n8n uses the data from item 0 in the Code node.                                                                                                                                                                                                                                                                                     |
| `_ifEmpty(value, defaultValue)`                               | The `_ifEmpty()` function takes two parameters, tests the first to check if it's empty, then returns either the parameter (if not empty) or the second parameter (if the first is empty). The first parameter is empty if it's:<br>- `undefined`<br>- `null`<br>- An empty string `''`<br>- An array where `value.length` returns `false`<br>- An object where `Object.keys(value).length` returns `false` |

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## White Labelling n8n

[Skip to content](https://docs.n8n.io/embed/white-labelling/#white-labelling)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/embed/white-labelling.md "Edit this page")

# White labelling [\#](https://docs.n8n.io/embed/white-labelling/#white-labelling "Permanent link")

Feature availability

Embed requires an embed license. For more information about when to use Embed, as well as costs and licensing processes, refer to [Embed](https://n8n.io/embed/) on the n8n website.

White labelling n8n means customizing the frontend styling and assets to match your brand identity. The process involves changing two packages in n8n's source code [github.com/n8n-io/n8n](https://github.com/n8n-io/n8n):

- [packages/design-system](https://github.com/n8n-io/n8n/tree/master/packages/design-system): n8n's [storybook](https://storybook.js.org/) design system with CSS styles and Vue.js components
- [packages/editor-ui](https://github.com/n8n-io/n8n/tree/master/packages/editor-ui): n8n's [Vue.js](https://vuejs.org/) frontend build with [Vite.js](https://vitejs.dev/)

## Prerequisites [\#](https://docs.n8n.io/embed/white-labelling/#prerequisites "Permanent link")

You need the following installed on your development machine:

- [git](https://git-scm.com/downloads)
- Node.js and npm. Minimum version Node 18.17.0. You can find instructions on how to install both using nvm (Node Version Manager) for Linux, Mac, and WSL [here](https://github.com/nvm-sh/nvm). For Windows users, refer to Microsoft's guide to [Install NodeJS on Windows](https://docs.microsoft.com/en-us/windows/dev-environment/javascript/nodejs-on-windows).

Create a fork of [n8n's repository](https://github.com/n8n-io/n8n) and clone your new repository.

|                  |                                                                                  |
| ---------------- | -------------------------------------------------------------------------------- |
| `<br>1<br>2<br>` | `<br>git clone https://github.com/<your-organization>/n8n.git n8n<br>cd n8n<br>` |

Install all dependencies, build and start n8n.

|                       |                                                         |
| --------------------- | ------------------------------------------------------- |
| `<br>1<br>2<br>3<br>` | `<br>npm install<br>npm run build<br>npm run start<br>` |

Whenever you make changes you need to rebuild and restart n8n. While developing you can use `npm run dev` to automatically rebuild and restart n8n anytime you make code changes.

## Theme colors [\#](https://docs.n8n.io/embed/white-labelling/#theme-colors "Permanent link")

To customize theme colors open [packages/design-system](https://github.com/n8n-io/n8n/tree/master/packages/design-system) and start with:

- [packages/design-system/src/css/\_tokens.scss](https://github.com/n8n-io/n8n/blob/master/packages/design-system/src/css/_tokens.scss)
- [packages/design-system/src/css/\_tokens.dark.scss](https://github.com/n8n-io/n8n/blob/master/packages/design-system/src/css/_tokens.dark.scss)

At the top of `_tokens.scss` you will find `--color-primary` variables as HSL colors:

|                            |                                                                                                              |
| -------------------------- | ------------------------------------------------------------------------------------------------------------ |
| `<br>1<br>2<br>3<br>4<br>` | `<br>@mixin theme {<br>	--color-primary-h: 6.9;<br>	--color-primary-s: 100%;<br>	--color-primary-l: 67.6%;<br>` |

In the following example the primary color changes to #0099ff. To convert to HSL you can use a [color converter tool](https://www.w3schools.com/colors/colors_converter.asp).

|                            |                                                                                                            |
| -------------------------- | ---------------------------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>3<br>4<br>` | `<br>@mixin theme {<br>	--color-primary-h: 204;<br>	--color-primary-s: 100%;<br>	--color-primary-l: 50%;<br>` |

[![Example Theme Color Customization](https://docs.n8n.io/_images/embed/white-label/color-transition.gif)](https://docs.n8n.io/_images/embed/white-label/color-transition.gif)

## Theme logos [\#](https://docs.n8n.io/embed/white-labelling/#theme-logos "Permanent link")

To change the editor’s logo assets look into [packages/editor-ui/public](https://github.com/n8n-io/n8n/tree/master/packages/editor-ui/public) and replace:

- favicon-16x16.png
- favicon-32x32.png
- favicon.ico
- n8n-logo.svg
- n8n-logo-collapsed.svg
- n8n-logo-expanded.svg

Replace these logo assets. n8n uses them in Vue.js components, including:

- [MainSidebar.vue](https://github.com/n8n-io/n8n/blob/master/packages/editor-ui/src/components/MainSidebar.vue): top/left logo in the main sidebar.
- [Logo.vue](https://github.com/n8n-io/n8n/blob/master/packages/editor-ui/src/components/Logo.vue): reused in other components.

In the following example replace `n8n-logo-collapsed.svg` and `n8n-logo-expanded.svg` to update the main sidebar's logo assets.

[![Example Logo Main Sidebar](https://docs.n8n.io/_images/embed/white-label/logo-main-sidebar.png)](https://docs.n8n.io/_images/embed/white-label/logo-main-sidebar.png)

If your logo assets require different sizing or placement you can customize SCSS styles at the bottom of [MainSidebar.vue](https://github.com/n8n-io/n8n/blob/master/packages/editor-ui/src/components/MainSidebar.vue).

|                                                                                                                                            ||
| ------------------------------------------------------------------------------------------------------------------------------------------ ||
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>` | `<br>.logoItem {<br>	display: flex;<br>	justify-content: space-between;<br>	height: $header-height;<br>	line-height: $header-height;<br>	margin: 0 !important;<br>	border-radius: 0 !important;<br>	border-bottom: var(--border-width-base) var(--border-style-base) var(--color-background-xlight);<br>	cursor: default;<br>	&:hover, &:global(.is-active):hover {<br>		background-color: initial !important;<br>	}<br>	* { vertical-align: middle; }<br>	.icon {<br>		height: 18px;<br>		position: relative;<br>		left: 6px;<br>	}<br>}<br>` |

## Text localization [\#](https://docs.n8n.io/embed/white-labelling/#text-localization "Permanent link")

To change all text occurrences like `n8n` or `n8n.io` to your brand identity you can customize n8n's English internationalization file: [packages/editor-ui/src/plugins/i18n/locales/en.json](https://github.com/n8n-io/n8n/blob/master/packages/editor-ui/src/plugins/i18n/locales/en.json).

n8n uses the [Vue I18n](https://kazupon.github.io/vue-i18n/) internationalization plugin for Vue.js to translate the majority of UI texts. To search and replace text occurrences inside `en.json` you can use [Linked locale messages](https://kazupon.github.io/vue-i18n/guide/messages.html#linked-locale-messages).

In the following example add the `_brand.name` translation key to white label n8n's [AboutModal.vue](https://github.com/n8n-io/n8n/blob/master/packages/editor-ui/src/components/AboutModal.vue).

|                                      |                                                                                                                                                                                      |
| ------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| `<br>1<br>2<br>3<br>4<br>5<br>6<br>` | `<br>{<br>	"_brand.name": "My Brand",<br>	//replace n8n with link to _brand.name<br>	"about.aboutN8n": "About @:_brand.name",<br>	"about.n8nVersion": "@:_brand.name Version",<br>}<br>` |

[![Example About Modal Localization](https://docs.n8n.io/_images/embed/white-label/about-modal.png)](https://docs.n8n.io/_images/embed/white-label/about-modal.png)

### Window title [\#](https://docs.n8n.io/embed/white-labelling/#window-title "Permanent link")

To change n8n's window title to your brand name, edit the following:

- [packages/editor-ui/index.html](https://github.com/n8n-io/n8n/blob/master/packages/editor-ui/index.html)
- [packages/editor-ui/src/components/mixins/titleChange.ts](https://github.com/n8n-io/n8n/blob/master/packages/editor-ui/src/components/mixins/titleChange.ts)

The following example replaces all occurrences of `n8n` and `n8n.io` with `My Brand` in `index.html` and `titleChange.ts`.

|                                      |                                                                                                                                                              |
| ------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| `<br>1<br>2<br>3<br>4<br>5<br>6<br>` | `<br><!DOCTYPE html><br><html lang="en"><br><head><br>	<!-- Replace html title attribute --><br>	<title>My Brand - Workflow Automation</title><br></head><br>` |

|                                                     |                                                                                                                                                                                                                                                                              |
| --------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>` | `` <br>$titleSet(workflow: string, status: WorkflowTitleStatus) {<br>	// replace n8n prefix<br>	window.document.title = `My Brand - ${icon} ${workflow}`;<br>},<br>$titleReset() {<br>	// replace n8n prefix<br>	document.title = `My Brand - Workflow Automation`;<br>},<br> `` |

[![Example Window Title Localization](https://docs.n8n.io/_images/embed/white-label/window-title.png)](https://docs.n8n.io/_images/embed/white-label/window-title.png)

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Source Control

[Skip to content](https://docs.n8n.io/source-control-environments/#source-control-and-environments)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/source-control-environments/index.md "Edit this page")

# Source control and environments [\#](https://docs.n8n.io/source-control-environments/#source-control-and-environments "Permanent link")

Feature availability

- Available on Enterprise.
- You need to be an n8n instance owner, admin, or project owner to set up source control, and to send work to and from Git.

n8n uses Git-based source control to support environments. Linking your n8n instances to a Git repository lets you create multiple n8n environments, backed by Git branches.

In this section:

- [Understand](https://docs.n8n.io/source-control-environments/understand/):
  - [Environments in n8n](https://docs.n8n.io/source-control-environments/understand/environments/): The purpose of environments, and how they work in n8n.
  - [Git and n8n](https://docs.n8n.io/source-control-environments/understand/git/): How n8n uses Git.
  - [Branch patterns](https://docs.n8n.io/source-control-environments/understand/patterns/): The possible relationships between n8n instances and Git branches.
- [Set up source control for environments](https://docs.n8n.io/source-control-environments/setup/): How to connect your n8n instance to Git.
- [Using](https://docs.n8n.io/source-control-environments/using/):
  - [Push and pull](https://docs.n8n.io/source-control-environments/using/push-pull/): Send work to Git, and fetch work from Git to your instance.
  - [Copy work between environments](https://docs.n8n.io/source-control-environments/using/copy-work/): How to copy work between different n8n instances.
  - [Manage variables](https://docs.n8n.io/source-control-environments/using/manage-variables/): Manage variable values using the n8n API and source control.
- [Tutorial: Create environments with source control](https://docs.n8n.io/source-control-environments/create-environments/): An end-to-end tutorial, setting up environments using n8n's recommended configurations.

Related sections:

- [Variables](https://docs.n8n.io/code/variables/): reusable values.
- [External secrets](https://docs.n8n.io/external-secrets/): manage [credentials](https://docs.n8n.io/glossary/#credential-n8n) with an external secrets vault.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## n8n Docker Installation

[Skip to content](https://docs.n8n.io/hosting/installation/docker/#docker-installation)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/hosting/installation/docker.md "Edit this page")

# Docker Installation [\#](https://docs.n8n.io/hosting/installation/docker/#docker-installation "Permanent link")

[Docker](https://www.docker.com/) offers the following advantages:

- Installs n8n in a clean environment.
- Easier setup for your preferred database.
- Can avoid issues due to different operating systems, as Docker provides a consistent system.
- Can avoid compatibility issues due to differences in operating systems and tools.
- Makes migrating to new hosts or environments more straightforward.

You can also use n8n in Docker with [Docker Compose](https://docs.n8n.io/hosting/installation/server-setups/docker-compose/). You can find Docker Compose configurations for various architectures in the [n8n-hosting repository](https://github.com/n8n-io/n8n-hosting).

Self-hosting knowledge prerequisites

Self-hosting n8n requires technical knowledge, including:

- Setting up and configuring servers and containers
- Managing application resources and scaling
- Securing servers and applications
- Configuring n8n

n8n recommends self-hosting for expert users. Mistakes can lead to data loss, security issues, and downtime. If you aren't experienced at managing servers, n8n recommends [n8n Cloud](https://n8n.io/cloud/).

## Prerequisites [\#](https://docs.n8n.io/hosting/installation/docker/#prerequisites "Permanent link")

Before proceeding, install [Docker Desktop](https://docs.docker.com/get-docker/).

Linux Users

Docker Desktop is available for Mac and Windows. Linux users must install [Docker Engine](https://docs.docker.com/engine/install/) and [Docker Compose](https://docs.docker.com/compose/install/) individually for your distribution.

Latest and Next versions

n8n releases a new minor version most weeks. The `latest` version is for production use. `next` is the most recent release. You should treat `next` as a beta: it may be unstable. To report issues, use the [forum](https://community.n8n.io/c/questions/12).

Current `latest`: 1.86.1

Current `next`: 1.88.0

## Starting n8n [\#](https://docs.n8n.io/hosting/installation/docker/#starting-n8n "Permanent link")

From your terminal, run:

|                       |                                                                                                                                            |
| --------------------- | ------------------------------------------------------------------------------------------------------------------------------------------ |
| `<br>1<br>2<br>3<br>` | `<br>docker volume create n8n_data<br>docker run -it --rm --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n<br>` |

This command creates a volume to store persistent data, downloads the required n8n image, and starts your container, exposed on port `5678`. To save your work between container restarts, it also mounts a docker volume, `n8n_data`, to persist your data locally.

Once running, you can access n8n by opening:
[http://localhost:5678](http://localhost:5678/)

## Using with PostgreSQL [\#](https://docs.n8n.io/hosting/installation/docker/#using-with-postgresql "Permanent link")

By default, n8n uses SQLite to save [credentials](https://docs.n8n.io/glossary/#credential-n8n), past executions, and workflows. n8n also supports PostgreSQL, configurable using environment variables as detailed below.

When using PostgreSQL, it's still important to persist the data stored in the `/home/node/.n8n` folder. This includes n8n user data and, even more importantly, the encryption key for credentials. It's also the name of the webhook when using the [n8n tunnel](https://docs.n8n.io/hosting/installation/docker/#n8n-with-tunnel).

If n8n can't find the `/home/node/.n8n` directory on startup, it automatically creates one. In this case, all existing credentials that n8n saved with a different encryption key will no longer work.

Keep in mind

While persisting the `/home/node/.n8n` directory with PostgreSQL is the recommended best practice, it's not explicitly required. You can provide the encryption key by passing the [`N8N_ENCRYPTION_KEY` environment variable](https://docs.n8n.io/hosting/configuration/environment-variables/deployment/) when starting your Docker container.

To use n8n with PostgreSQL, execute the following commands, replacing the placeholders (depicted within angled brackets, for example `<POSTGRES_USER>`) with your actual values:

|                                                                                            |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |
| ------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>12<br>13<br>14<br>` | `<br>docker volume create n8n_data<br>docker run -it --rm \<br> --name n8n \<br> -p 5678:5678 \<br> -e DB_TYPE=postgresdb \<br> -e DB_POSTGRESDB_DATABASE=<POSTGRES_DATABASE> \<br> -e DB_POSTGRESDB_HOST=<POSTGRES_HOST> \<br> -e DB_POSTGRESDB_PORT=<POSTGRES_PORT> \<br> -e DB_POSTGRESDB_USER=<POSTGRES_USER> \<br> -e DB_POSTGRESDB_SCHEMA=<POSTGRES_SCHEMA> \<br> -e DB_POSTGRESDB_PASSWORD=<POSTGRES_PASSWORD> \<br> -v n8n_data:/home/node/.n8n \<br> docker.n8n.io/n8nio/n8n<br>` |

You can find a complete `docker-compose` file for PostgreSQL in the [n8n hosting repository](https://github.com/n8n-io/n8n-hosting/tree/main/docker-compose/withPostgres).

## Setting timezone [\#](https://docs.n8n.io/hosting/installation/docker/#setting-timezone "Permanent link")

To define the timezone n8n should use, you can set the [`GENERIC_TIMEZONE` environment variable](https://docs.n8n.io/hosting/configuration/environment-variables/timezone-localization/). Schedule-oriented nodes, like the [Schedule Trigger node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.scheduletrigger/) use this to determine the correct timezone.

You can set the system timezone, which controls what some scripts and commands like `date` return, using the `TZ` environment variable.

This example sets the same timezone for both variables:

|                                                     |                                                                                                                                                                                                                                          |
| --------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>` | `<br>docker volume create n8n_data<br>docker run -it --rm \<br> --name n8n \<br> -p 5678:5678 \<br> -e GENERIC_TIMEZONE="Europe/Berlin" \<br> -e TZ="Europe/Berlin" \<br> -v n8n_data:/home/node/.n8n \<br> docker.n8n.io/n8nio/n8n<br>` |

## Updating [\#](https://docs.n8n.io/hosting/installation/docker/#updating "Permanent link")

To update n8n, in Docker Desktop, navigate to the **Images** tab and select **Pull** from the context menu to download the latest n8n image:

[![Docker Desktop](https://docs.n8n.io/_images/hosting/installation/docker/docker_desktop.png)](https://docs.n8n.io/_images/hosting/installation/docker/docker_desktop.png)

You can also use the command line to pull the latest, or a specific version:

|                                                |                                                                                                                                                                                                                                        |
| ---------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>` | `<br># Pull latest (stable) version<br>docker pull docker.n8n.io/n8nio/n8n<br># Pull specific version<br>docker pull docker.n8n.io/n8nio/n8n:1.81.0<br># Pull next (unstable) version<br>docker pull docker.n8n.io/n8nio/n8n:next<br>` |

After pulling the updated image, stop your n8n container and start it again. You can also use the command line. Replace `<container_id>` in the commands below with the container ID you find in the first command:

|                                                                          |                                                                                                                                                                                                                                                                                                                            |
| ------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br> 1<br> 2<br> 3<br> 4<br> 5<br> 6<br> 7<br> 8<br> 9<br>10<br>11<br>` | `` <br># Find your container ID<br>docker ps -a<br># Stop the container with the `<container_id>`<br>docker stop <container_id><br># Remove the container with the `<container_id>`<br>docker rm <container_id><br># Start the container<br>docker run --name=<container_name> [options] -d docker.n8n.io/n8nio/n8n<br> `` |

### Updating Docker Compose [\#](https://docs.n8n.io/hosting/installation/docker/#updating-docker-compose "Permanent link")

If you run n8n using a Docker Compose file, follow these steps to update n8n:

|                                                |                                                                                                                                                                   |
| ---------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>` | `<br># Pull latest version<br>docker compose pull<br># Stop and remove older version<br>docker compose down<br># Start the container<br>docker compose up -d<br>` |

## Further reading [\#](https://docs.n8n.io/hosting/installation/docker/#further-reading "Permanent link")

You can find more information about Docker setup in the README file for the [Docker image](https://github.com/n8n-io/n8n/tree/master/docker/images/n8n).

## n8n with tunnel [\#](https://docs.n8n.io/hosting/installation/docker/#n8n-with-tunnel "Permanent link")

Danger

Use this for local development and testing. It isn't safe to use it in production.

To use webhooks for trigger nodes of external services like GitHub, n8n has to be reachable from the web. n8n runs a [tunnel service](https://github.com/localtunnel/localtunnel) that can redirect requests from n8n's servers to your local n8n instance.

Start n8n with `--tunnel` by running:

|                                                |                                                                                                                                                                                         |
| ---------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>` | `<br>docker volume create n8n_data<br>docker run -it --rm \<br> --name n8n \<br> -p 5678:5678 \<br> -v n8n_data:/home/node/.n8n \<br> docker.n8n.io/n8nio/n8n \<br> start --tunnel<br>` |

## Next steps [\#](https://docs.n8n.io/hosting/installation/docker/#next-steps "Permanent link")

- Learn more about [configuring](https://docs.n8n.io/hosting/configuration/environment-variables/) and [scaling](https://docs.n8n.io/hosting/scaling/overview/) n8n.
- Or explore using n8n: try the [Quickstarts](https://docs.n8n.io/try-it-out/).

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Data Filtering Guide

[Skip to content](https://docs.n8n.io/data/data-filtering/#data-filtering)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/data/data-filtering.md "Edit this page")

# Data filtering [\#](https://docs.n8n.io/data/data-filtering/#data-filtering "Permanent link")

Feature availability

Available on Cloud Pro and Enterprise plans.

Search and filter data in the node **INPUT** and **OUTPUT** panels. Use this to check your node's data.

To search:

1. In a node, select **Search**![Search icon](https://docs.n8n.io/_images/common-icons/search.png) in the **INPUT** or **OUTPUT** panel.
2. Enter your search term.

n8n filters as you type your search, displaying the objects or rows containing the term.

Filtering is purely visual: n8n doesn't change or delete data. The filter resets when you close and reopen the node.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=1330242453.1744299891&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509682~102788824~102803279~102813109~102887799~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=1068043066)

## Data Editing in n8n

[Skip to content](https://docs.n8n.io/data/data-editing/#data-editing)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/data/data-editing.md "Edit this page")

# Data editing [\#](https://docs.n8n.io/data/data-editing/#data-editing "Permanent link")

n8n allows you to edit [pinned data](https://docs.n8n.io/data/data-pinning/). This means you can check different scenarios without setting up each scenario and sending the relevant data from your external system. It makes it easier to test edge cases.

For development only

Data editing isn't available for production workflow executions. It's a feature to help test workflows during development.

## Edit output data [\#](https://docs.n8n.io/data/data-editing/#edit-output-data "Permanent link")

To edit output data:

1. Run the node to load data.
2. In the **OUTPUT** view, select **JSON** to switch to JSON view.
3. Select **Edit**![Edit data icon](https://docs.n8n.io/_images/data/data-pinning/edit-data.png).
4. Edit your data.
5. Select **Save**. n8n saves your data changes and pins your data.

## Use data from previous executions [\#](https://docs.n8n.io/data/data-editing/#use-data-from-previous-executions "Permanent link")

You can copy data from nodes in previous workflow executions:

1.  Open the left menu.
2.  Select **Executions**.
3.  Browse the workflow executions list to find the one with the data you want to copy.
4.  Select **Open Past Execution**![Open past execution icon](https://docs.n8n.io/_images/data/data-pinning/open-execution.png).
5.  Double click the node whose data you want to copy.
6.  If it's table layout, select **JSON** to switch to JSON view.
7.  There are two ways to copy the JSON:
8.  Select the JSON you want by highlighting it, like selecting text. Then use `ctrl` \+ `c` to copy it.
9.  Select the JSON you want to copy by clicking on a parameter. Then:
    1. Hover over the JSON. n8n displays the **Copy**![Copy data icon](https://docs.n8n.io/_images/data/data-pinning/copy-data.png) button.
    2. Select **Copy**![Copy data icon](https://docs.n8n.io/_images/data/data-pinning/copy-data.png).
    3. You can choose what to copy:
       - **Copy Item Path** and **Copy Parameter Path** gives you expressions that access parts of the JSON.
       - **Copy Value**: copies the entire selected JSON.
10. Return to the workflow you're working on:
    1. Open the left menu.
    2. Select **Workflows**.
    3. Select **Open**.
    4. Select the workflow you want to open.
11. Open the node where you want to use the copied data.
12. If there is no data, run the node to load data.
13. In the **OUTPUT** view, select **JSON** to switch to JSON view.
14. Select **Edit**![Edit data icon](https://docs.n8n.io/_images/data/data-pinning/edit-data.png).
15. Paste in the data from the previous execution.
16. Select **Save**. n8n saves your data changes and pins your data.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-0SC4FF2FH9&gacid=1346350639.1744288897&gtm=45je5481v9101919738z8866744132za200zb866744132&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=102509683~102788824~102803279~102813109~102887799~102926062~102975949~103016951~103021830~103027016~103047562~103050889~103051953&z=851601218)

## Merging Data in n8n

[Skip to content](https://docs.n8n.io/flow-logic/merging/#merging-data)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/flow-logic/merging.md "Edit this page")

# Merging data [\#](https://docs.n8n.io/flow-logic/merging/#merging-data "Permanent link")

Merging brings multiple data streams together. You can achieve this using different nodes depending on your workflow requirements.

- Merge data from different data streams or nodes: Use the [Merge](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.merge/) node to combine data from various sources into one.
- Merge data from multiple node executions: Use the [Code](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code/) node for complex scenarios where you need to merge data from multiple executions of a node or multiple nodes.
- Compare and merge data: Use the [Compare Datasets](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.comparedatasets/) node to compare, merge, and output data streams based on the comparison.

Explore each method in more detail in the sections below.

## Merge data from different data streams [\#](https://docs.n8n.io/flow-logic/merging/#merge-data-from-different-data-streams "Permanent link")

If your workflow [splits](https://docs.n8n.io/flow-logic/splitting/), you combine the separate streams back into one stream.

Here's an [example workflow](https://n8n.io/workflows/1747-joining-different-datasets/) showing different types of merging: appending data sets, keeping only new items, and keeping only existing items. The [Merge node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.merge/) documentation contains details on each of the merge operations.

[View template details](https://n8n.io/workflows/1747-joining-different-datasets/)

## Merge data from different nodes [\#](https://docs.n8n.io/flow-logic/merging/#merge-data-from-different-nodes "Permanent link")

You can use the Merge node to combine data from two previous nodes, even if the workflow hasn't split into separate data streams. This can be useful if you want to generate a single dataset from the data generated by multiple nodes.

[![Merging data from two previous nodes. The diagram shows three nodes lined up sequentially. The first node is labeled Fetch data, the second is labeled Modify data, and the third is labeled Merge: append both data sets. Arrows connect nodes 1 to 2, 2 to 3, and 1 to 3.](https://docs.n8n.io/_images/flow-logic/merging/merge-node-data.png)](https://docs.n8n.io/_images/flow-logic/merging/merge-node-data.png) Merging data from two previous nodes

## Merge data from multiple node executions [\#](https://docs.n8n.io/flow-logic/merging/#merge-data-from-multiple-node-executions "Permanent link")

Use the Code node to merge data from multiple node executions. This is useful in some [Looping](https://docs.n8n.io/flow-logic/looping/) scenarios.

Node executions and workflow executions

This section describes merging data from multiple node executions. This is when a node executes multiple times during a single workflow execution.

Refer to this [example workflow](https://n8n.io/workflows/1814-merge-multiple-runs-into-one/) using Loop Over Items and Wait to artificially create multiple executions.

[View template details](https://n8n.io/workflows/1814-merge-multiple-runs-into-one/)

## Compare, merge, and split again [\#](https://docs.n8n.io/flow-logic/merging/#compare-merge-and-split-again "Permanent link")

The [Compare Datasets](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.comparedatasets/) node compares data streams before merging them. It outputs up to four different data streams.

Refer to this [example workflow](https://n8n.io/workflows/1943-comparing-data-with-the-compare-datasets-node/) for an example.

[View template details](https://n8n.io/workflows/1943-comparing-data-with-the-compare-datasets-node/)

td.doubleclick.net

# td.doubleclick.net is blocked

This page has been blocked by an extension

- Try disabling your extensions.

ERR_BLOCKED_BY_CLIENT

Reload

This page has been blocked by an extension

![](Base64-Image-Removed)![](Base64-Image-Removed)

## Data Transformation Guide

[Skip to content](https://docs.n8n.io/data/transforming-data/#transforming-data)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/data/transforming-data.md "Edit this page")

# Transforming data [\#](https://docs.n8n.io/data/transforming-data/#transforming-data "Permanent link")

n8n uses a predefined [data structure](https://docs.n8n.io/data/data-structure/) that allows all nodes to process incoming data correctly.

Your incoming data may have a different data structure, in which case you will need to transform it to allow each item to be processed individually.

For example, the image below shows the output of an [HTTP Request](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/) node that returns data incompatible with n8n's data structure. The node returns the data and displays that only one item was returned.

[![HTTP Request node output](https://docs.n8n.io/_images/data/transforming-data/HTTPRequest_output.png)](https://docs.n8n.io/_images/data/transforming-data/HTTPRequest_output.png)

To transform this kind of structure into the n8n data structure you can use the data transformation nodes:

- [Aggregate](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.aggregate/): take separate items, or portions of them, and group them together into individual items.
- [Limit](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.aggregate/): remove items beyond a defined maximum number.
- [Remove Duplicates](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.removeduplicates/): identify and delete items that are identical across all fields or a subset of fields.
- [Sort](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.sort/): organize lists of in a desired ordering, or generate a random selection.
- [Split Out](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.splitout/): separate a single data item containing a list into multiple items.
- [Summarize](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.summarize/): aggregate items together, in a manner similar to Excel pivot tables.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Facebook Lead Ads

[Skip to content](https://docs.n8n.io/integrations/builtin/credentials/facebookleadads/#facebook-lead-ads-credentials)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/integrations/builtin/credentials/facebookleadads.md "Edit this page")

# Facebook Lead Ads credentials [\#](https://docs.n8n.io/integrations/builtin/credentials/facebookleadads/#facebook-lead-ads-credentials "Permanent link")

You can use these credentials to authenticate the following nodes:

- [Facebook Lead Ads trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.facebookleadadstrigger/)

## Supported authentication methods [\#](https://docs.n8n.io/integrations/builtin/credentials/facebookleadads/#supported-authentication-methods "Permanent link")

- OAuth2

## Related resources [\#](https://docs.n8n.io/integrations/builtin/credentials/facebookleadads/#related-resources "Permanent link")

Refer to [Facebook Lead Ads' documentation](https://developers.facebook.com/docs/marketing-api/guides/lead-ads/) for more information about the service.

View [example workflows and related content](https://n8n.io/integrations/facebook-lead-ads-trigger/) on n8n's website.

## Using OAuth2 [\#](https://docs.n8n.io/integrations/builtin/credentials/facebookleadads/#using-oauth2 "Permanent link")

To configure this credential, you'll need a [Meta for Developers](https://developers.facebook.com/) account and:

- A **Client ID**
- A **Client Secret**

To get both, [create a Meta app](https://developers.facebook.com/docs/development/create-an-app) with either the Facebook Login product or the Facebook Login for Business product.

To create your app and set up the credential with **Facebook Login for Business**:

1.  Go to the Meta Developer [App Dashboard](https://developers.facebook.com/apps) and select **Create App**.
2.  If you have a business portfolio and you're ready to connect the app to it, select the business portfolio. If you don't have a business portfolio or you're not ready to connect the app to the portfolio, select **I don’t want to connect a business portfolio yet** and select **Next**. The **Use cases** page opens.
3.  Select **Other**, then select **Next**.
4.  Select **Business** and **Next**.
5.  Complete the essential information:
    - Add an **App name**.
    - Add an **App contact email**.
    - Here again you can connect to a business portfolio or skip it.
6.  Select **Create app**. The **Add products to your app** page opens.
7.  Select **Facebook Login for Business**. The **Settings** page for this product opens.
8.  Copy the **OAuth Redirect URL** from your n8n credential.
9.  In your Meta app settings in **Client OAuth settings**, paste that URL as the **Valid OAuth Redirect URIs**.
10. Select **App settings > Basic** from the left menu.
11. Copy the **App ID** and enter it as the **Client ID** within your n8n credential.
12. Copy the **App Secret** and enter it as the **Client Secret** within your n8n credential.

Your credential should successfully connect now, but you'll need to go through the steps to take your Meta app live before you can use it with the [Facebook Lead Ads trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.facebookleadadstrigger/). Here's a summary of what you'll need to do:

1. In your Meta app, select **App settings > Basic** from the left menu.
2. Enter a **Privacy Policy URL**. (Required to take the app "Live.")
3. Select **Save changes**.
4. At the top of the page, toggle the **App Mode** from **Development** to **Live**.
5. Facebook Login for Business requires Advanced Access for `public_profile`. To add it, go to **App Review > Permissions and Features**.
6. Search for `public_profile` and select **Request advanced access**.
7. Complete the steps for [business verification](https://www.facebook.com/business/tools/meta-verified-for-business/).
8. Use the [Lead Ads Testing Tool](https://developers.facebook.com/tools/lead-ads-testing) to trigger some demo form submissions and test your workflow.

Refer to Meta's [Create an app](https://developers.facebook.com/docs/development/create-an-app) documentation for more information on creating an app, required fields like the Privacy Policy URL, and adding products.

For more information on the app modes and switching to **Live** mode, refer to [App Modes](https://developers.facebook.com/docs/development/build-and-test/app-modes) and [Publish \| App Types](https://developers.facebook.com/docs/development/release#app-types).

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Formstack Trigger Credentials

[Skip to content](https://docs.n8n.io/integrations/builtin/credentials/formstacktrigger/#formstack-trigger-credentials)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/integrations/builtin/credentials/formstacktrigger.md "Edit this page")

# Formstack Trigger credentials [\#](https://docs.n8n.io/integrations/builtin/credentials/formstacktrigger/#formstack-trigger-credentials "Permanent link")

You can use these credentials to authenticate the following nodes:

- [Formstack Trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.formstacktrigger/)

## Prerequisites [\#](https://docs.n8n.io/integrations/builtin/credentials/formstacktrigger/#prerequisites "Permanent link")

Create a [Formstack](https://www.formstack.com/) account.

## Supported authentication methods [\#](https://docs.n8n.io/integrations/builtin/credentials/formstacktrigger/#supported-authentication-methods "Permanent link")

- API access token
- OAuth2

## Related resources [\#](https://docs.n8n.io/integrations/builtin/credentials/formstacktrigger/#related-resources "Permanent link")

Refer to [Formstack's API documentation](https://developers.formstack.com/reference/api-overview) for more information about the service.

## Using API access token [\#](https://docs.n8n.io/integrations/builtin/credentials/formstacktrigger/#using-api-access-token "Permanent link")

To configure this credential, you'll need:

- An API **Access Token**: To generate an Access Token, [create a new application](https://www.formstack.com/admin/apiKey/main) in Formstack using the following details:
  - **Redirect URI**: For cloud n8n instances, enter `https://oauth.n8n.cloud/oauth2/callback`.
    - For self-hosted n8n instances, enter the OAuth callback URL for your n8n instance in the format `https://<n8n_url>/rest/oauth2-credential/callback`. For example `https://localhost:5678/rest/oauth2-credential/callback`.
  - **Platform**: Select **Website**.

Once you've created the application, copy the access token either from the applications list or by selecting the application to view its details.

Refer to [Formstack's API Authorization documentation](https://developers.formstack.com/reference/api-overview#obtaining-an-api-key-oauth2-access-token) for more detailed instructions.

Access token permissions

Formstack ties access tokens to a Formstack user. Access tokens follow Formstack (in-app) user permissions.

## Using OAuth2 [\#](https://docs.n8n.io/integrations/builtin/credentials/formstacktrigger/#using-oauth2 "Permanent link")

To configure this credential, you'll need:

- A **Client ID**
- A **Client Secret**

To generate both of these, [create a new application](https://www.formstack.com/admin/apiKey/main) in Formstack using the following details:

- **Redirect URI**: Copy the **OAuth Redirect URL** from the n8n credential to enter here.
  - For self-hosted n8n instances, enter the OAuth callback URL for your n8n instance in the format `https://<n8n_url>/rest/oauth2-credential/callback`. For example `https://localhost:5678/rest/oauth2-credential/callback`.
- **Platform**: Select **Website**.

Once you've created the application, select it from the applications list to view the **Application Details**. Copy the **Client ID** and **Client Secret** and add them to n8n. Once you've added both, select the **Connect my account** button to begin the OAuth2 flow and authorization process.

Refer to [Formstack's API Authorization documentation](https://developers.formstack.com/reference/api-overview#obtaining-an-api-key-oauth2-access-token) for more detailed instructions.

Access token permissions

Formstack ties access tokens to a Formstack user. Access tokens follow Formstack (in-app) user permissions.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Mistral Cloud Credentials

[Skip to content](https://docs.n8n.io/integrations/builtin/credentials/mistral/#mistral-cloud-credentials)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/integrations/builtin/credentials/mistral.md "Edit this page")

# Mistral Cloud credentials [\#](https://docs.n8n.io/integrations/builtin/credentials/mistral/#mistral-cloud-credentials "Permanent link")

You can use these credentials to authenticate the following nodes:

- [Mistral Cloud](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.lmchatmistralcloud/)
- [Embeddings Mistral Cloud](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.embeddingsmistralcloud/)

## Prerequisites [\#](https://docs.n8n.io/integrations/builtin/credentials/mistral/#prerequisites "Permanent link")

- Create a [Mistral](https://mistral.ai/) La Plateforme account.
- You must add payment information in **Workspace >** [**Billing**](https://admin.mistral.ai/organization/billing) and activate payments to enable API keys. Refer to [Account setup](https://docs.mistral.ai/getting-started/quickstart/#account-setup) for more information.

## Supported authentication methods [\#](https://docs.n8n.io/integrations/builtin/credentials/mistral/#supported-authentication-methods "Permanent link")

- API key

## Related resources [\#](https://docs.n8n.io/integrations/builtin/credentials/mistral/#related-resources "Permanent link")

Refer to [Mistral's API documentation](https://docs.mistral.ai/api/) for more information about the APIs.

View n8n's [Advanced AI](https://docs.n8n.io/advanced-ai/) documentation.

## Using API key [\#](https://docs.n8n.io/integrations/builtin/credentials/mistral/#using-api-key "Permanent link")

To configure this credential, you'll need:

- An **API Key**

Once you've added payment information to your Mistral Cloud account:

1. Sign in to your [Mistral account](https://console.mistral.ai/home).
2. Go to the **API Keys** page.
3. Select **Create new key**.
4. Copy the API key and enter it in your n8n credential.

Refer to [Account setup](https://docs.mistral.ai/getting-started/quickstart/#account-setup) for more information.

Paid account required

Mistral requires you to add payment information and activate payments to use API keys. Refer to the [Prerequisites](https://docs.n8n.io/integrations/builtin/credentials/mistral/#prerequisites) section above for more information.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Demio Credentials

[Skip to content](https://docs.n8n.io/integrations/builtin/credentials/demio/#demio-credentials)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/integrations/builtin/credentials/demio.md "Edit this page")

# Demio credentials [\#](https://docs.n8n.io/integrations/builtin/credentials/demio/#demio-credentials "Permanent link")

You can use these credentials to authenticate the following nodes:

- [Demio](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.demio/)

## Prerequisites [\#](https://docs.n8n.io/integrations/builtin/credentials/demio/#prerequisites "Permanent link")

Create a [Demio](https://demio.com/) account.

## Supported authentication methods [\#](https://docs.n8n.io/integrations/builtin/credentials/demio/#supported-authentication-methods "Permanent link")

- API key

## Related resources [\#](https://docs.n8n.io/integrations/builtin/credentials/demio/#related-resources "Permanent link")

Refer to [Demio's API documentation](https://publicdemioapi.docs.apiary.io/#) for more information about the service.

## Using API key [\#](https://docs.n8n.io/integrations/builtin/credentials/demio/#using-api-key "Permanent link")

To configure this credential, you'll need:

- An **API Key**
- An **API Secret**

You must have Owner status in Demio to generate API keys and secrets. To view and generate API keys and secrets, go to **Account Settings > API**. Refer to the [Demio Account Owner Settings documentation](https://help.demio.com/en/articles/6456716-account-owner-settings) for more detailed steps.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Mautic Credentials Guide

[Skip to content](https://docs.n8n.io/integrations/builtin/credentials/mautic/#mautic-credentials)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/integrations/builtin/credentials/mautic.md "Edit this page")

# Mautic credentials [\#](https://docs.n8n.io/integrations/builtin/credentials/mautic/#mautic-credentials "Permanent link")

You can use these credentials to authenticate the following nodes:

- [Mautic](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.mautic/)
- [Mautic Trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.mautictrigger/)

## Supported authentication methods [\#](https://docs.n8n.io/integrations/builtin/credentials/mautic/#supported-authentication-methods "Permanent link")

- Basic auth
- OAuth2

## Related resources [\#](https://docs.n8n.io/integrations/builtin/credentials/mautic/#related-resources "Permanent link")

Refer to [Mautic's API documentation](https://developer.mautic.org/#rest-api) for more information about the service.

## Using basic auth [\#](https://docs.n8n.io/integrations/builtin/credentials/mautic/#using-basic-auth "Permanent link")

API enabled

To set up this credential, your Mautic instance must have the API enabled. Refer to [Enable the API](https://docs.n8n.io/integrations/builtin/credentials/mautic/#enable-the-api) for instructions.

To configure this credential, you'll need an account on a [Mautic](https://www.mautic.org/) instance and:

- Your **URL**
- A **Username**
- A **Password**

To set it up:

1. In Mautic, go to **Configuration > API Settings**.
2. If **Enable HTTP basic auth?** is set to **No**, change it to **Yes** and save. Refer to the [API Settings documentation](https://docs.mautic.org/en/5.x/configuration/settings.html#api-settings) for more information.
3. In n8n, enter the Base **URL** of your Mautic instance.
4. Enter your Mautic **Username**.
5. Enter your Mautic **Password**.

## Using OAuth2 [\#](https://docs.n8n.io/integrations/builtin/credentials/mautic/#using-oauth2 "Permanent link")

API enabled

To set up this credential, your Mautic instance must have the API enabled. Refer to [Enable the API](https://docs.n8n.io/integrations/builtin/credentials/mautic/#enable-the-api) for instructions.

To configure this credential, you'll need an account on a [Mautic](https://www.mautic.org/) instance and:

- A **Client ID**: Generated when you create new API credentials.
- A **Client Secret**: Generated when you create new API credentials.
- Your **URL**

To set it up:

1.  In Mautic, go to **Configuration > Settings**.
2.  Select **API Credentials**.

    No API Credentials menu

    If you don't see the **API Credentials** option under **Configuration > Settings**, be sure to [Enable the API](https://docs.n8n.io/integrations/builtin/credentials/mautic/#enable-the-api). If you've enabled the API and you still don't see the option, try [manually clearing the cache](https://forum.mautic.org/t/cant-find-api-credentials-menu/10689).

3.  Select the option to **Create new client**.

4.  Select **OAuth 2** as the **Authorization Protocol**.
5.  Enter a **Name** for your credential, like `n8n integration`.
6.  In n8n, copy the **OAuth Callback URL** and enter it as the **Redirect URI** in Mautic.
7.  Select **Apply**.
8.  Copy the **Client ID** from Mautic and enter it in your n8n credential.
9.  Copy the **Client Secret** from Mautic and enter it in your n8n credential.
10. Enter the Base **URL** of your Mautic instance.

Refer to [What is Mautic's API?](https://kb.mautic.org/article/what-is-mautic-039%3bs-api.html#mcetoc_1g7n1bgoo0) for more information.

## Enable the API [\#](https://docs.n8n.io/integrations/builtin/credentials/mautic/#enable-the-api "Permanent link")

To enable the API in your Mautic instance:

1. Go to **Settings > Configuration**.
2. Select **API Settings**.
3. Set **API enabled?** to **Yes**.
4. **Save** your changes.

Refer to [How to use the Mautic API](https://kb.mautic.org/article/what-is-mautic-039;s-api.html) for more information.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## PhantomBuster Credentials

[Skip to content](https://docs.n8n.io/integrations/builtin/credentials/phantombuster/#phantombuster-credentials)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/integrations/builtin/credentials/phantombuster.md "Edit this page")

# PhantomBuster credentials [\#](https://docs.n8n.io/integrations/builtin/credentials/phantombuster/#phantombuster-credentials "Permanent link")

You can use these credentials to authenticate the following nodes:

- [PhantomBuster](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.phantombuster/)

## Prerequisites [\#](https://docs.n8n.io/integrations/builtin/credentials/phantombuster/#prerequisites "Permanent link")

Create a [PhantomBuster](https://www.phantombuster.com/) account.

## Supported authentication methods [\#](https://docs.n8n.io/integrations/builtin/credentials/phantombuster/#supported-authentication-methods "Permanent link")

- API key

## Related resources [\#](https://docs.n8n.io/integrations/builtin/credentials/phantombuster/#related-resources "Permanent link")

Refer to [PhantomBuster's API documentation](https://hub.phantombuster.com/reference) for more information about the service.

## Using API key [\#](https://docs.n8n.io/integrations/builtin/credentials/phantombuster/#using-api-key "Permanent link")

To configure this credential, you'll need:

- An **API Key**: To get an API key, go to [**Workspace settings**](https://phantombuster.com/workspace-settings) **\> Third party API keys** and select **\+ Add API Key**. Refer to [How to find my API key](https://hub.phantombuster.com/docs/api#how-to-find-my-api-key) for more information.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Cisco Meraki Credentials

[Skip to content](https://docs.n8n.io/integrations/builtin/credentials/ciscomeraki/#cisco-meraki-credentials)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/integrations/builtin/credentials/ciscomeraki.md "Edit this page")

# Cisco Meraki credentials [\#](https://docs.n8n.io/integrations/builtin/credentials/ciscomeraki/#cisco-meraki-credentials "Permanent link")

You can use these credentials to authenticate when using the [HTTP Request node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/) to make a [Custom API call](https://docs.n8n.io/integrations/custom-operations/).

## Prerequisites [\#](https://docs.n8n.io/integrations/builtin/credentials/ciscomeraki/#prerequisites "Permanent link")

- Create a [Cisco DevNet developer account](https://developer.cisco.com/).
- Access to a [Cisco Meraki account](https://meraki.cisco.com/).

## Authentication methods [\#](https://docs.n8n.io/integrations/builtin/credentials/ciscomeraki/#authentication-methods "Permanent link")

- API key

## Related resources [\#](https://docs.n8n.io/integrations/builtin/credentials/ciscomeraki/#related-resources "Permanent link")

Refer to [Cisco Meraki's API documentation](https://developer.cisco.com/meraki/api-v1/introduction/) for more information about the service.

This is a credential-only node. Refer to [Custom API operations](https://docs.n8n.io/integrations/custom-operations/) to learn more. View [example workflows and related content](https://n8n.io/integrations/cisco-meraki/) on n8n's website.

## Using API key [\#](https://docs.n8n.io/integrations/builtin/credentials/ciscomeraki/#using-api-key "Permanent link")

To configure this credential, you'll need:

- An **API Key**: Refer to the [Cisco Meraki Obtaining your Meraki API Key documentation](https://developer.cisco.com/meraki/api-v1/authorization/#obtaining-your-meraki-api-key) for instructions on getting your API Key.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Redis Credentials Guide

[Skip to content](https://docs.n8n.io/integrations/builtin/credentials/redis/#redis-credentials)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/integrations/builtin/credentials/redis.md "Edit this page")

# Redis credentials [\#](https://docs.n8n.io/integrations/builtin/credentials/redis/#redis-credentials "Permanent link")

You can use these credentials to authenticate the following nodes:

- [Redis](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.redis/)
- [Redis Chat Memory](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.memoryredischat/)

## Supported authentication methods [\#](https://docs.n8n.io/integrations/builtin/credentials/redis/#supported-authentication-methods "Permanent link")

- Database connection

## Related resources [\#](https://docs.n8n.io/integrations/builtin/credentials/redis/#related-resources "Permanent link")

Refer to [Redis's developer documentation](https://redis.readthedocs.io/en/stable/index.html) for more information about the service.

## Using database connection [\#](https://docs.n8n.io/integrations/builtin/credentials/redis/#using-database-connection "Permanent link")

You'll need a user account on a [Redis](https://redis.io/) server and:

- A **Password**
- The **Host** name
- The **Port** number
- A **Database Number**
- **SSL**

To configure this credential:

1. Enter your user account **Password**.
2. Enter the **Host** name of the Redis server. The default is `localhost`.
3. Enter the **Port** number the connection should use. The default is `6379`.
   - This number should match the `tcp_port` listed when you run the `INFO` command.
4. Enter the **Database Number**. The default is `0`.
5. If the connection should use SSL, turn on the **SSL** toggle. If this toggle is off, the connection uses TCP only.

Refer to [Connecting to Redis \| Generic client](https://redis.readthedocs.io/en/stable/connections.html) for more information.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## KoboToolbox Credentials

[Skip to content](https://docs.n8n.io/integrations/builtin/credentials/kobotoolbox/#kobotoolbox-credentials)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/integrations/builtin/credentials/kobotoolbox.md "Edit this page")

# KoboToolbox credentials [\#](https://docs.n8n.io/integrations/builtin/credentials/kobotoolbox/#kobotoolbox-credentials "Permanent link")

You can use these credentials to authenticate the following nodes:

- [KoboToolbox trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.kobotoolboxtrigger/)
- [KoboToolbox](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.kobotoolbox/)

## Prerequisites [\#](https://docs.n8n.io/integrations/builtin/credentials/kobotoolbox/#prerequisites "Permanent link")

Create a [KoboToolbox](https://www.kobotoolbox.org/) account.

## Supported authentication methods [\#](https://docs.n8n.io/integrations/builtin/credentials/kobotoolbox/#supported-authentication-methods "Permanent link")

- API token

## Related resources [\#](https://docs.n8n.io/integrations/builtin/credentials/kobotoolbox/#related-resources "Permanent link")

Refer to [KoboToolbox's API documentation](https://support.kobotoolbox.org/api.html) for more information about the service.

## Using API token [\#](https://docs.n8n.io/integrations/builtin/credentials/kobotoolbox/#using-api-token "Permanent link")

To configure this credential, you'll need:

- An **API Root URL**: Enter the URL of the KoboToolbox server where you created your account. For the Global KoboToolbox Server, use `https://kf.kobotoolbox.org`. For the European Union KoboToolbox Server, use `https://eu.kobotoolbox.org`.
- An **API Token**: Displayed in your **Account Settings**. Refer to [Getting your API token](https://support.kobotoolbox.org/api.html#getting-your-api-token) for more information.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## SolarWinds IPAM Credentials

[Skip to content](https://docs.n8n.io/integrations/builtin/credentials/solarwindsipam/#solarwinds-ipam-credentials)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/integrations/builtin/credentials/solarwindsipam.md "Edit this page")

# SolarWinds IPAM credentials [\#](https://docs.n8n.io/integrations/builtin/credentials/solarwindsipam/#solarwinds-ipam-credentials "Permanent link")

You can use these credentials to authenticate when using the [HTTP Request node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/) to make a [Custom API call](https://docs.n8n.io/integrations/custom-operations/).

## Supported authentication methods [\#](https://docs.n8n.io/integrations/builtin/credentials/solarwindsipam/#supported-authentication-methods "Permanent link")

- Username & Password

## Related resources [\#](https://docs.n8n.io/integrations/builtin/credentials/solarwindsipam/#related-resources "Permanent link")

Refer to [SolarWinds IPAM's API documentation](https://github.com/solarwinds/OrionSDK/wiki/REST) for more information about the service.

## Using Username & Password [\#](https://docs.n8n.io/integrations/builtin/credentials/solarwindsipam/#using-username-password "Permanent link")

To configure this credential, you'll need a SolarWinds IPAM account and:

- **URL**: The base URL of your SolarWinds IPAM server
- **Username**: The username you use to access SolarWinds IPAM
- **Password**: The password you use to access SolarWinds IPAM

Refer to [SolarWinds IPAM's API documentation](https://github.com/solarwinds/OrionSDK/wiki/REST) for more information about authenticating to the service.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Salesmate Credentials

[Skip to content](https://docs.n8n.io/integrations/builtin/credentials/salesmate/#salesmate-credentials)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/integrations/builtin/credentials/salesmate.md "Edit this page")

# Salesmate credentials [\#](https://docs.n8n.io/integrations/builtin/credentials/salesmate/#salesmate-credentials "Permanent link")

You can use these credentials to authenticate the following nodes:

- [Salesmate](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.salesmate/)

## Prerequisites [\#](https://docs.n8n.io/integrations/builtin/credentials/salesmate/#prerequisites "Permanent link")

Create a [Salesmate](https://salesmate.io/) account.

## Supported authentication methods [\#](https://docs.n8n.io/integrations/builtin/credentials/salesmate/#supported-authentication-methods "Permanent link")

- API token

## Related resources [\#](https://docs.n8n.io/integrations/builtin/credentials/salesmate/#related-resources "Permanent link")

Refer to [Salesmate's API documentation](https://apidocs.salesmate.io/?version=latest) for more information about the service.

## Using API token [\#](https://docs.n8n.io/integrations/builtin/credentials/salesmate/#using-api-token "Permanent link")

To configure this credential, you'll need:

- A **Session Token**: An **Access Key**. Generate an access key in **My Account > Access Key**. Refer to [Access Rights and Keys](https://apidocs.salesmate.io/?version=latest#ac8296ec-cb44-4937-a860-5ae032397ca0) for more information.
- A **URL**: Your Salesmate domain name/base URL, for example `n8n.salesmate.io`.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Oura Credentials

[Skip to content](https://docs.n8n.io/integrations/builtin/credentials/oura/#oura-credentials)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/integrations/builtin/credentials/oura.md "Edit this page")

# Oura credentials [\#](https://docs.n8n.io/integrations/builtin/credentials/oura/#oura-credentials "Permanent link")

You can use these credentials to authenticate the following nodes:

- [Oura](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.oura/)

## Prerequisites [\#](https://docs.n8n.io/integrations/builtin/credentials/oura/#prerequisites "Permanent link")

Create an [Oura](https://ouraring.com/developer) account.

## Supported authentication methods [\#](https://docs.n8n.io/integrations/builtin/credentials/oura/#supported-authentication-methods "Permanent link")

- API access token

## Related resources [\#](https://docs.n8n.io/integrations/builtin/credentials/oura/#related-resources "Permanent link")

Refer to [Oura's API documentation](https://cloud.ouraring.com/v2/docs) for more information about the service.

## Using API access token [\#](https://docs.n8n.io/integrations/builtin/credentials/oura/#using-api-access-token "Permanent link")

To configure this credential, you'll need:

- A **Personal Access Token**: To generate a personal access token, go to the [Personal Access Tokens](https://cloud.ouraring.com/personal-access-tokens) page and select **Create A New Personal Access Token**.

Refer to [How to Generate Personal Access Tokens](https://support.ouraring.com/hc/en-us/articles/4415266939155-The-Oura-API#h_01H5B94SP4P9YHG9ZKN1H69E7Z) for more information.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top

## Form.io Trigger Credentials

[Skip to content](https://docs.n8n.io/integrations/builtin/credentials/formiotrigger/#formio-trigger-credentials)

[Edit this page](https://github.com/n8n-io/n8n-docs/edit/main/docs/integrations/builtin/credentials/formiotrigger.md "Edit this page")

# Form.io Trigger credentials [\#](https://docs.n8n.io/integrations/builtin/credentials/formiotrigger/#formio-trigger-credentials "Permanent link")

You can use these credentials to authenticate the following nodes:

- [Form.io Trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.formiotrigger/)

## Supported authentication methods [\#](https://docs.n8n.io/integrations/builtin/credentials/formiotrigger/#supported-authentication-methods "Permanent link")

- Basic auth

## Related resources [\#](https://docs.n8n.io/integrations/builtin/credentials/formiotrigger/#related-resources "Permanent link")

Refer to [Form.io's API documentation](https://apidocs.form.io/) for more information about the service.

## Using basic auth [\#](https://docs.n8n.io/integrations/builtin/credentials/formiotrigger/#using-basic-auth "Permanent link")

To configure this credential, you'll need a [Form.io](https://www.form.io/) account and:

- Your **Environment**
- Your login **Email address**
- Your **Password**

To set up the credential:

1. Select your **Environment**:
   - Choose **Cloud hosted** if you aren't hosting Form.io yourself.
   - Choose **Self-hosted** if you're hosting Form.io yourself. Then add:
     - Your **Self-Hosted Domain**. Use only the domain itself. For example, if you view a form at `https://yourserver.com/yourproject/manage/view`, the Self-Hosted Domain is `https://yourserver.com`.
2. Enter the **Email address** you use to log in to Form.io.
3. Enter the **Password** you use to log in to Form.io.

Was this page helpful?

Thanks for your feedback!

Thanks for your feedback! Help us improve this page by submitting an issue or a fix in our [GitHub repo](https://github.com/n8n-io/n8n-docs).

Back to top
